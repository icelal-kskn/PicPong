

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat May 18 10:24:26 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	dabs	1,0x7E,2
    28     0000                     
    29                           ; Generated 12/10/2023 GMT
    30                           ; 
    31                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F877A Definitions
    61                           ; 
    62                           ; SFR Addresses
    63     0000                     	;# 
    64     0001                     	;# 
    65     0002                     	;# 
    66     0003                     	;# 
    67     0004                     	;# 
    68     0005                     	;# 
    69     0006                     	;# 
    70     0007                     	;# 
    71     0008                     	;# 
    72     0009                     	;# 
    73     000A                     	;# 
    74     000B                     	;# 
    75     000C                     	;# 
    76     000D                     	;# 
    77     000E                     	;# 
    78     000E                     	;# 
    79     000F                     	;# 
    80     0010                     	;# 
    81     0011                     	;# 
    82     0012                     	;# 
    83     0013                     	;# 
    84     0014                     	;# 
    85     0015                     	;# 
    86     0015                     	;# 
    87     0016                     	;# 
    88     0017                     	;# 
    89     0018                     	;# 
    90     0019                     	;# 
    91     001A                     	;# 
    92     001B                     	;# 
    93     001B                     	;# 
    94     001C                     	;# 
    95     001D                     	;# 
    96     001E                     	;# 
    97     001F                     	;# 
    98     0081                     	;# 
    99     0085                     	;# 
   100     0086                     	;# 
   101     0087                     	;# 
   102     0088                     	;# 
   103     0089                     	;# 
   104     008C                     	;# 
   105     008D                     	;# 
   106     008E                     	;# 
   107     0091                     	;# 
   108     0092                     	;# 
   109     0093                     	;# 
   110     0094                     	;# 
   111     0098                     	;# 
   112     0099                     	;# 
   113     009C                     	;# 
   114     009D                     	;# 
   115     009E                     	;# 
   116     009F                     	;# 
   117     010C                     	;# 
   118     010D                     	;# 
   119     010E                     	;# 
   120     010F                     	;# 
   121     018C                     	;# 
   122     018D                     	;# 
   123     0000                     	;# 
   124     0001                     	;# 
   125     0002                     	;# 
   126     0003                     	;# 
   127     0004                     	;# 
   128     0005                     	;# 
   129     0006                     	;# 
   130     0007                     	;# 
   131     0008                     	;# 
   132     0009                     	;# 
   133     000A                     	;# 
   134     000B                     	;# 
   135     000C                     	;# 
   136     000D                     	;# 
   137     000E                     	;# 
   138     000E                     	;# 
   139     000F                     	;# 
   140     0010                     	;# 
   141     0011                     	;# 
   142     0012                     	;# 
   143     0013                     	;# 
   144     0014                     	;# 
   145     0015                     	;# 
   146     0015                     	;# 
   147     0016                     	;# 
   148     0017                     	;# 
   149     0018                     	;# 
   150     0019                     	;# 
   151     001A                     	;# 
   152     001B                     	;# 
   153     001B                     	;# 
   154     001C                     	;# 
   155     001D                     	;# 
   156     001E                     	;# 
   157     001F                     	;# 
   158     0081                     	;# 
   159     0085                     	;# 
   160     0086                     	;# 
   161     0087                     	;# 
   162     0088                     	;# 
   163     0089                     	;# 
   164     008C                     	;# 
   165     008D                     	;# 
   166     008E                     	;# 
   167     0091                     	;# 
   168     0092                     	;# 
   169     0093                     	;# 
   170     0094                     	;# 
   171     0098                     	;# 
   172     0099                     	;# 
   173     009C                     	;# 
   174     009D                     	;# 
   175     009E                     	;# 
   176     009F                     	;# 
   177     010C                     	;# 
   178     010D                     	;# 
   179     010E                     	;# 
   180     010F                     	;# 
   181     018C                     	;# 
   182     018D                     	;# 
   183     0000                     	;# 
   184     0001                     	;# 
   185     0002                     	;# 
   186     0003                     	;# 
   187     0004                     	;# 
   188     0005                     	;# 
   189     0006                     	;# 
   190     0007                     	;# 
   191     0008                     	;# 
   192     0009                     	;# 
   193     000A                     	;# 
   194     000B                     	;# 
   195     000C                     	;# 
   196     000D                     	;# 
   197     000E                     	;# 
   198     000E                     	;# 
   199     000F                     	;# 
   200     0010                     	;# 
   201     0011                     	;# 
   202     0012                     	;# 
   203     0013                     	;# 
   204     0014                     	;# 
   205     0015                     	;# 
   206     0015                     	;# 
   207     0016                     	;# 
   208     0017                     	;# 
   209     0018                     	;# 
   210     0019                     	;# 
   211     001A                     	;# 
   212     001B                     	;# 
   213     001B                     	;# 
   214     001C                     	;# 
   215     001D                     	;# 
   216     001E                     	;# 
   217     001F                     	;# 
   218     0081                     	;# 
   219     0085                     	;# 
   220     0086                     	;# 
   221     0087                     	;# 
   222     0088                     	;# 
   223     0089                     	;# 
   224     008C                     	;# 
   225     008D                     	;# 
   226     008E                     	;# 
   227     0091                     	;# 
   228     0092                     	;# 
   229     0093                     	;# 
   230     0094                     	;# 
   231     0098                     	;# 
   232     0099                     	;# 
   233     009C                     	;# 
   234     009D                     	;# 
   235     009E                     	;# 
   236     009F                     	;# 
   237     010C                     	;# 
   238     010D                     	;# 
   239     010E                     	;# 
   240     010F                     	;# 
   241     018C                     	;# 
   242     018D                     	;# 
   243     0000                     	;# 
   244     0001                     	;# 
   245     0002                     	;# 
   246     0003                     	;# 
   247     0004                     	;# 
   248     0005                     	;# 
   249     0006                     	;# 
   250     0007                     	;# 
   251     0008                     	;# 
   252     0009                     	;# 
   253     000A                     	;# 
   254     000B                     	;# 
   255     000C                     	;# 
   256     000D                     	;# 
   257     000E                     	;# 
   258     000E                     	;# 
   259     000F                     	;# 
   260     0010                     	;# 
   261     0011                     	;# 
   262     0012                     	;# 
   263     0013                     	;# 
   264     0014                     	;# 
   265     0015                     	;# 
   266     0015                     	;# 
   267     0016                     	;# 
   268     0017                     	;# 
   269     0018                     	;# 
   270     0019                     	;# 
   271     001A                     	;# 
   272     001B                     	;# 
   273     001B                     	;# 
   274     001C                     	;# 
   275     001D                     	;# 
   276     001E                     	;# 
   277     001F                     	;# 
   278     0081                     	;# 
   279     0085                     	;# 
   280     0086                     	;# 
   281     0087                     	;# 
   282     0088                     	;# 
   283     0089                     	;# 
   284     008C                     	;# 
   285     008D                     	;# 
   286     008E                     	;# 
   287     0091                     	;# 
   288     0092                     	;# 
   289     0093                     	;# 
   290     0094                     	;# 
   291     0098                     	;# 
   292     0099                     	;# 
   293     009C                     	;# 
   294     009D                     	;# 
   295     009E                     	;# 
   296     009F                     	;# 
   297     010C                     	;# 
   298     010D                     	;# 
   299     010E                     	;# 
   300     010F                     	;# 
   301     018C                     	;# 
   302     018D                     	;# 
   303     0000                     	;# 
   304     0001                     	;# 
   305     0002                     	;# 
   306     0003                     	;# 
   307     0004                     	;# 
   308     0005                     	;# 
   309     0006                     	;# 
   310     0007                     	;# 
   311     0008                     	;# 
   312     0009                     	;# 
   313     000A                     	;# 
   314     000B                     	;# 
   315     000C                     	;# 
   316     000D                     	;# 
   317     000E                     	;# 
   318     000E                     	;# 
   319     000F                     	;# 
   320     0010                     	;# 
   321     0011                     	;# 
   322     0012                     	;# 
   323     0013                     	;# 
   324     0014                     	;# 
   325     0015                     	;# 
   326     0015                     	;# 
   327     0016                     	;# 
   328     0017                     	;# 
   329     0018                     	;# 
   330     0019                     	;# 
   331     001A                     	;# 
   332     001B                     	;# 
   333     001B                     	;# 
   334     001C                     	;# 
   335     001D                     	;# 
   336     001E                     	;# 
   337     001F                     	;# 
   338     0081                     	;# 
   339     0085                     	;# 
   340     0086                     	;# 
   341     0087                     	;# 
   342     0088                     	;# 
   343     0089                     	;# 
   344     008C                     	;# 
   345     008D                     	;# 
   346     008E                     	;# 
   347     0091                     	;# 
   348     0092                     	;# 
   349     0093                     	;# 
   350     0094                     	;# 
   351     0098                     	;# 
   352     0099                     	;# 
   353     009C                     	;# 
   354     009D                     	;# 
   355     009E                     	;# 
   356     009F                     	;# 
   357     010C                     	;# 
   358     010D                     	;# 
   359     010E                     	;# 
   360     010F                     	;# 
   361     018C                     	;# 
   362     018D                     	;# 
   363     0000                     	;# 
   364     0001                     	;# 
   365     0002                     	;# 
   366     0003                     	;# 
   367     0004                     	;# 
   368     0005                     	;# 
   369     0006                     	;# 
   370     0007                     	;# 
   371     0008                     	;# 
   372     0009                     	;# 
   373     000A                     	;# 
   374     000B                     	;# 
   375     000C                     	;# 
   376     000D                     	;# 
   377     000E                     	;# 
   378     000E                     	;# 
   379     000F                     	;# 
   380     0010                     	;# 
   381     0011                     	;# 
   382     0012                     	;# 
   383     0013                     	;# 
   384     0014                     	;# 
   385     0015                     	;# 
   386     0015                     	;# 
   387     0016                     	;# 
   388     0017                     	;# 
   389     0018                     	;# 
   390     0019                     	;# 
   391     001A                     	;# 
   392     001B                     	;# 
   393     001B                     	;# 
   394     001C                     	;# 
   395     001D                     	;# 
   396     001E                     	;# 
   397     001F                     	;# 
   398     0081                     	;# 
   399     0085                     	;# 
   400     0086                     	;# 
   401     0087                     	;# 
   402     0088                     	;# 
   403     0089                     	;# 
   404     008C                     	;# 
   405     008D                     	;# 
   406     008E                     	;# 
   407     0091                     	;# 
   408     0092                     	;# 
   409     0093                     	;# 
   410     0094                     	;# 
   411     0098                     	;# 
   412     0099                     	;# 
   413     009C                     	;# 
   414     009D                     	;# 
   415     009E                     	;# 
   416     009F                     	;# 
   417     010C                     	;# 
   418     010D                     	;# 
   419     010E                     	;# 
   420     010F                     	;# 
   421     018C                     	;# 
   422     018D                     	;# 
   423                           
   424                           	psect	idataCOMMON
   425     03E7                     __pidataCOMMON:
   426                           
   427                           ;initializer for _p1State
   428     03E7  341E               	retlw	30
   429                           
   430                           	psect	idataBANK0
   431     03F0                     __pidataBANK0:
   432                           
   433                           ;initializer for _ballX
   434     03F0  3404               	retlw	4
   435     03F1  3400               	retlw	0
   436                           
   437                           ;initializer for _ballDirY
   438     03F2  3401               	retlw	1
   439     03F3  3400               	retlw	0
   440                           
   441                           ;initializer for _ballDirX
   442     03F4  34FF               	retlw	255
   443     03F5  34FF               	retlw	255
   444                           
   445                           ;initializer for _ballYState
   446     03F6  3408               	retlw	8
   447                           
   448                           ;initializer for _p2State
   449     03F7  341E               	retlw	30
   450     003C                     _RC4	set	60
   451     0038                     _RC0	set	56
   452     003A                     _RC2	set	58
   453     0039                     _RC1	set	57
   454     0033                     _RB3	set	51
   455     0032                     _RB2	set	50
   456     0031                     _RB1	set	49
   457     0030                     _RB0	set	48
   458     0087                     _TRISC	set	135
   459     0086                     _TRISB	set	134
   460     043B                     _TRISC3	set	1083
   461     0439                     _TRISC1	set	1081
   462     043C                     _TRISC4	set	1084
   463     0438                     _TRISC0	set	1080
   464     043A                     _TRISC2	set	1082
   465                           
   466                           	psect	cinit
   467     07E7                     start_initialization:	
   468                           ; #config settings
   469                           
   470     07E7                     __initialization:
   471                           
   472                           ; Initialize objects allocated to BANK0
   473     07E7  1383               	bcf	3,7	;select IRP bank0
   474     07E8  303D               	movlw	low (__pdataBANK0+8)
   475     07E9  00FD               	movwf	btemp+-1
   476     07EA  3003               	movlw	high __pidataBANK0
   477     07EB  00FE               	movwf	btemp
   478     07EC  30F0               	movlw	low __pidataBANK0
   479     07ED  00FF               	movwf	btemp+1
   480     07EE  3035               	movlw	low __pdataBANK0
   481     07EF  0084               	movwf	4
   482     07F0  120A  118A  2438  120A  118A  	fcall	init_ram0
   483                           
   484                           ; Initialize objects allocated to COMMON
   485     07F5  120A  118A  23E7  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   486     07FA  00FD               	movwf	__pdataCOMMON& (0+127)
   487                           
   488                           ; Clear objects allocated to BANK0
   489     07FB  01BD               	clrf	__pbssBANK0& (0+127)
   490     07FC                     end_of_initialization:	
   491                           ;End of C runtime variable initialization code
   492                           
   493     07FC                     __end_of__initialization:
   494     07FC  0183               	clrf	3
   495     07FD  120A  118A  2CFD   	ljmp	_main	;jump to C main() function
   496                           
   497                           	psect	dataCOMMON
   498     007D                     __pdataCOMMON:
   499     007D                     _p1State:
   500     007D                     	ds	1
   501                           
   502                           	psect	bssBANK0
   503     003D                     __pbssBANK0:
   504     003D                     _isScore:
   505     003D                     	ds	1
   506                           
   507                           	psect	dataBANK0
   508     0035                     __pdataBANK0:
   509     0035                     _ballX:
   510     0035                     	ds	2
   511     0037                     _ballDirY:
   512     0037                     	ds	2
   513     0039                     _ballDirX:
   514     0039                     	ds	2
   515     003B                     _ballYState:
   516     003B                     	ds	1
   517     003C                     _p2State:
   518     003C                     	ds	1
   519                           
   520                           	psect	inittext
   521     0434                     init_fetch0:	
   522                           ;	Called with low address in FSR and high address in W
   523                           
   524     0434  087E               	movf	btemp,w
   525     0435  008A               	movwf	10
   526     0436  087F               	movf	btemp+1,w
   527     0437  0082               	movwf	2
   528     0438                     init_ram0:	
   529                           ;Called with:
   530                           ;	high address of idata address in btemp 
   531                           ;	low address of idata address in btemp+1 
   532                           ;	low address of data in FSR
   533                           ;	high address + 1 of data in btemp-1
   534                           
   535     0438  120A  118A  2434  120A  118A  	fcall	init_fetch0
   536     043D  0080               	movwf	0
   537     043E  0A84               	incf	4,f
   538     043F  0804               	movf	4,w
   539     0440  067D               	xorwf	btemp+-1,w
   540     0441  1903               	btfsc	3,2
   541     0442  3400               	retlw	0
   542     0443  0AFF               	incf	btemp+1,f
   543     0444  1903               	btfsc	3,2
   544     0445  0AFE               	incf	btemp,f
   545     0446  2C38               	goto	init_ram0
   546                           
   547                           	psect	cstackCOMMON
   548     0070                     __pcstackCOMMON:
   549     0070                     ?_MAX7219_init:
   550     0070                     ?_SPI_init:	
   551                           ; 1 bytes @ 0x0
   552                           
   553     0070                     ??_SPI_init:	
   554                           ; 1 bytes @ 0x0
   555                           
   556     0070                     ?_MAX7219_config:	
   557                           ; 1 bytes @ 0x0
   558                           
   559     0070                     ?_SPI_write:	
   560                           ; 1 bytes @ 0x0
   561                           
   562     0070                     ??_SPI_write:	
   563                           ; 1 bytes @ 0x0
   564                           
   565     0070                     ?_initGame:	
   566                           ; 1 bytes @ 0x0
   567                           
   568     0070                     ?_updateBallPosition:	
   569                           ; 1 bytes @ 0x0
   570                           
   571     0070                     ?_readButton0:	
   572                           ; 1 bytes @ 0x0
   573                           
   574     0070                     ?_readButton1:	
   575                           ; 2 bytes @ 0x0
   576                           
   577     0070                     ?_readButton2:	
   578                           ; 2 bytes @ 0x0
   579                           
   580     0070                     ?_readButton3:	
   581                           ; 2 bytes @ 0x0
   582                           
   583     0070                     MAX7219_config@chip:	
   584                           ; 2 bytes @ 0x0
   585                           
   586                           
   587                           ; 1 bytes @ 0x0
   588     0070                     	ds	2
   589     0072                     ??_readButton0:
   590     0072                     ??_readButton1:	
   591                           ; 1 bytes @ 0x2
   592                           
   593     0072                     ??_readButton2:	
   594                           ; 1 bytes @ 0x2
   595                           
   596     0072                     ??_readButton3:	
   597                           ; 1 bytes @ 0x2
   598                           
   599     0072                     SPI_write@send:	
   600                           ; 1 bytes @ 0x2
   601                           
   602                           
   603                           ; 1 bytes @ 0x2
   604     0072                     	ds	1
   605     0073                     SPI_write@Tx:
   606                           
   607                           ; 2 bytes @ 0x3
   608     0073                     	ds	2
   609     0075                     ?_MAX7219_write:
   610     0075                     MAX7219_write@data:	
   611                           ; 1 bytes @ 0x5
   612                           
   613                           
   614                           ; 1 bytes @ 0x5
   615     0075                     	ds	1
   616     0076                     ??_MAX7219_write:
   617     0076                     MAX7219_write@regName:	
   618                           ; 1 bytes @ 0x6
   619                           
   620                           
   621                           ; 1 bytes @ 0x6
   622     0076                     	ds	1
   623     0077                     ??_MAX7219_init:
   624     0077                     ??_MAX7219_config:	
   625                           ; 1 bytes @ 0x7
   626                           
   627     0077                     ??_initGame:	
   628                           ; 1 bytes @ 0x7
   629                           
   630     0077                     ?_buttonGoUp:	
   631                           ; 1 bytes @ 0x7
   632                           
   633     0077                     ?_buttonGoDown:	
   634                           ; 1 bytes @ 0x7
   635                           
   636     0077                     ??_updateBallPosition:	
   637                           ; 1 bytes @ 0x7
   638                           
   639     0077                     MAX7219_init@noChips:	
   640                           ; 1 bytes @ 0x7
   641                           
   642     0077                     buttonGoUp@player:	
   643                           ; 1 bytes @ 0x7
   644                           
   645     0077                     buttonGoDown@player:	
   646                           ; 2 bytes @ 0x7
   647                           
   648                           
   649                           ; 2 bytes @ 0x7
   650     0077                     	ds	2
   651     0079                     ??_buttonGoUp:
   652     0079                     ??_buttonGoDown:	
   653                           ; 1 bytes @ 0x9
   654                           
   655     0079                     ?_main:	
   656                           ; 1 bytes @ 0x9
   657                           
   658     0079                     main@argc:	
   659                           ; 2 bytes @ 0x9
   660                           
   661                           
   662                           ; 2 bytes @ 0x9
   663     0079                     	ds	2
   664     007B                     main@argv:
   665                           
   666                           ; 2 bytes @ 0xB
   667     007B                     	ds	2
   668                           
   669                           	psect	cstackBANK0
   670     0020                     __pcstackBANK0:
   671     0020                     updateBallPosition@ballXprev:
   672                           
   673                           ; 2 bytes @ 0x0
   674     0020                     	ds	2
   675     0022                     _updateBallPosition$63:
   676                           
   677                           ; 2 bytes @ 0x2
   678     0022                     	ds	2
   679     0024                     _updateBallPosition$64:
   680                           
   681                           ; 2 bytes @ 0x4
   682     0024                     	ds	2
   683     0026                     _updateBallPosition$65:
   684                           
   685                           ; 2 bytes @ 0x6
   686     0026                     	ds	2
   687     0028                     _updateBallPosition$66:
   688                           
   689                           ; 2 bytes @ 0x8
   690     0028                     	ds	2
   691     002A                     _updateBallPosition$67:
   692                           
   693                           ; 2 bytes @ 0xA
   694     002A                     	ds	2
   695     002C                     _updateBallPosition$68:
   696                           
   697                           ; 2 bytes @ 0xC
   698     002C                     	ds	2
   699     002E                     _updateBallPosition$69:
   700                           
   701                           ; 2 bytes @ 0xE
   702     002E                     	ds	2
   703     0030                     _updateBallPosition$70:
   704                           
   705                           ; 2 bytes @ 0x10
   706     0030                     	ds	2
   707     0032                     ??_main:
   708                           
   709                           ; 1 bytes @ 0x12
   710     0032                     	ds	3
   711                           
   712                           	psect	maintext
   713     04FD                     __pmaintext:	
   714 ;;
   715 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   716 ;;
   717 ;; *************** function _main *****************
   718 ;; Defined at:
   719 ;;		line 243 in file "main.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;  argc            2    9[COMMON] int 
   722 ;;  argv            2   11[COMMON] PTR PTR unsigned char 
   723 ;; Auto vars:     Size  Location     Type
   724 ;;		None
   725 ;; Return value:  Size  Location     Type
   726 ;;                  2    9[COMMON] int 
   727 ;; Registers used:
   728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   729 ;; Tracked objects:
   730 ;;		On entry : B00/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   734 ;;      Params:         4       0       0       0       0
   735 ;;      Locals:         0       0       0       0       0
   736 ;;      Temps:          0       3       0       0       0
   737 ;;      Totals:         4       3       0       0       0
   738 ;;Total ram usage:        7 bytes
   739 ;; Hardware stack levels required when called: 4
   740 ;; This function calls:
   741 ;;		_MAX7219_init
   742 ;;		_buttonGoDown
   743 ;;		_buttonGoUp
   744 ;;		_initGame
   745 ;;		_readButton0
   746 ;;		_readButton1
   747 ;;		_readButton2
   748 ;;		_readButton3
   749 ;;		_updateBallPosition
   750 ;; This function is called by:
   751 ;;		Startup code after reset
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755     04FD                     _main:	
   756                           ;psect for function _main
   757                           
   758     04FD                     l1327:	
   759                           ;incstack = 0
   760                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   761                           
   762                           
   763                           ;main.c: 244:     TRISB = 0x0F;
   764     04FD  300F               	movlw	15
   765     04FE  1683               	bsf	3,5	;RP0=1, select bank1
   766     04FF  1303               	bcf	3,6	;RP1=0, select bank1
   767     0500  0086               	movwf	6	;volatile
   768     0501                     l1329:
   769                           
   770                           ;main.c: 245:     TRISC = 0;
   771     0501  0187               	clrf	7	;volatile
   772     0502                     l1331:
   773                           
   774                           ;main.c: 247:         initGame();
   775     0502  120A  118A  24C7  120A  118A  	fcall	_initGame
   776     0507                     l1333:
   777                           
   778                           ;main.c: 248:         MAX7219_init(1);
   779     0507  3001               	movlw	1
   780     0508  120A  118A  245B  120A  118A  	fcall	_MAX7219_init
   781                           
   782                           ;main.c: 249:         while (!isScore) {
   783     050D  2D71               	goto	l1355
   784     050E                     l1335:
   785                           
   786                           ;main.c: 251:             if (readButton0() == 1) {
   787     050E  120A  118A  23F8  120A  118A  	fcall	_readButton0
   788     0513  0370               	decf	?_readButton0,w
   789     0514  0471               	iorwf	?_readButton0+1,w
   790     0515  1D03               	btfss	3,2
   791     0516  2D18               	goto	u671
   792     0517  2D19               	goto	u670
   793     0518                     u671:
   794     0518  2D22               	goto	l1339
   795     0519                     u670:
   796     0519                     l1337:
   797                           
   798                           ;main.c: 252:                 buttonGoUp(1);
   799     0519  3001               	movlw	1
   800     051A  00F7               	movwf	buttonGoUp@player
   801     051B  3000               	movlw	0
   802     051C  00F8               	movwf	buttonGoUp@player+1
   803     051D  120A  118A  262C  120A  118A  	fcall	_buttonGoUp
   804     0522                     l1339:
   805                           
   806                           ;main.c: 254:             if (readButton1() == 1) {
   807     0522  120A  118A  2407  120A  118A  	fcall	_readButton1
   808     0527  0370               	decf	?_readButton1,w
   809     0528  0471               	iorwf	?_readButton1+1,w
   810     0529  1D03               	btfss	3,2
   811     052A  2D2C               	goto	u681
   812     052B  2D2D               	goto	u680
   813     052C                     u681:
   814     052C  2D36               	goto	l1343
   815     052D                     u680:
   816     052D                     l1341:
   817                           
   818                           ;main.c: 255:                 buttonGoDown(1);
   819     052D  3001               	movlw	1
   820     052E  00F7               	movwf	buttonGoDown@player
   821     052F  3000               	movlw	0
   822     0530  00F8               	movwf	buttonGoDown@player+1
   823     0531  120A  118A  257C  120A  118A  	fcall	_buttonGoDown
   824     0536                     l1343:
   825                           
   826                           ;main.c: 257:             if (readButton2() == 1) {
   827     0536  120A  118A  2416  120A  118A  	fcall	_readButton2
   828     053B  0370               	decf	?_readButton2,w
   829     053C  0471               	iorwf	?_readButton2+1,w
   830     053D  1D03               	btfss	3,2
   831     053E  2D40               	goto	u691
   832     053F  2D41               	goto	u690
   833     0540                     u691:
   834     0540  2D4A               	goto	l1347
   835     0541                     u690:
   836     0541                     l1345:
   837                           
   838                           ;main.c: 258:                 buttonGoUp(2);
   839     0541  3002               	movlw	2
   840     0542  00F7               	movwf	buttonGoUp@player
   841     0543  3000               	movlw	0
   842     0544  00F8               	movwf	buttonGoUp@player+1
   843     0545  120A  118A  262C  120A  118A  	fcall	_buttonGoUp
   844     054A                     l1347:
   845                           
   846                           ;main.c: 260:             if (readButton3() == 1) {
   847     054A  120A  118A  2425  120A  118A  	fcall	_readButton3
   848     054F  0370               	decf	?_readButton3,w
   849     0550  0471               	iorwf	?_readButton3+1,w
   850     0551  1D03               	btfss	3,2
   851     0552  2D54               	goto	u701
   852     0553  2D55               	goto	u700
   853     0554                     u701:
   854     0554  2D5E               	goto	l1351
   855     0555                     u700:
   856     0555                     l1349:
   857                           
   858                           ;main.c: 261:                 buttonGoDown(2);
   859     0555  3002               	movlw	2
   860     0556  00F7               	movwf	buttonGoDown@player
   861     0557  3000               	movlw	0
   862     0558  00F8               	movwf	buttonGoDown@player+1
   863     0559  120A  118A  257C  120A  118A  	fcall	_buttonGoDown
   864     055E                     l1351:
   865                           
   866                           ;main.c: 263:             _delay((unsigned long)((5)*(800000000/4000.0)));
   867     055E  3006               	movlw	6
   868     055F  1283               	bcf	3,5	;RP0=0, select bank0
   869     0560  1303               	bcf	3,6	;RP1=0, select bank0
   870     0561  00B4               	movwf	??_main+2
   871     0562  3013               	movlw	19
   872     0563  00B3               	movwf	??_main+1
   873     0564  30AD               	movlw	173
   874     0565  00B2               	movwf	??_main
   875     0566                     u737:
   876     0566  0BB2               	decfsz	??_main,f
   877     0567  2D66               	goto	u737
   878     0568  0BB3               	decfsz	??_main+1,f
   879     0569  2D66               	goto	u737
   880     056A  0BB4               	decfsz	??_main+2,f
   881     056B  2D66               	goto	u737
   882     056C                     l1353:
   883                           
   884                           ;main.c: 264:             updateBallPosition();
   885     056C  120A  118A  26DC  120A  118A  	fcall	_updateBallPosition
   886     0571                     l1355:
   887                           
   888                           ;main.c: 249:         while (!isScore) {
   889     0571  1283               	bcf	3,5	;RP0=0, select bank0
   890     0572  1303               	bcf	3,6	;RP1=0, select bank0
   891     0573  083D               	movf	_isScore,w
   892     0574  1903               	btfsc	3,2
   893     0575  2D77               	goto	u711
   894     0576  2D78               	goto	u710
   895     0577                     u711:
   896     0577  2D0E               	goto	l1335
   897     0578                     u710:
   898     0578  2D02               	goto	l1331
   899     0579  120A  118A  2800   	ljmp	start
   900     057C                     __end_of_main:
   901                           
   902                           	psect	text1
   903     06DC                     __ptext1:	
   904 ;; *************** function _updateBallPosition *****************
   905 ;; Defined at:
   906 ;;		line 198 in file "main.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;		None
   909 ;; Auto vars:     Size  Location     Type
   910 ;;  ballXprev       2    0[BANK0 ] int 
   911 ;; Return value:  Size  Location     Type
   912 ;;                  1    wreg      void 
   913 ;; Registers used:
   914 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   920 ;;      Params:         0       0       0       0       0
   921 ;;      Locals:         0      18       0       0       0
   922 ;;      Temps:          0       0       0       0       0
   923 ;;      Totals:         0      18       0       0       0
   924 ;;Total ram usage:       18 bytes
   925 ;; Hardware stack levels used: 1
   926 ;; Hardware stack levels required when called: 2
   927 ;; This function calls:
   928 ;;		_MAX7219_write
   929 ;; This function is called by:
   930 ;;		_main
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934     06DC                     _updateBallPosition:	
   935                           ;psect for function _updateBallPosition
   936                           
   937     06DC                     l1249:	
   938                           ;incstack = 0
   939                           ; Regs used in _updateBallPosition: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   940                           
   941                           
   942                           ;main.c: 199:     int ballXprev = ballX;
   943     06DC  1283               	bcf	3,5	;RP0=0, select bank0
   944     06DD  1303               	bcf	3,6	;RP1=0, select bank0
   945     06DE  0836               	movf	_ballX+1,w
   946     06DF  00A1               	movwf	updateBallPosition@ballXprev+1
   947     06E0  0835               	movf	_ballX,w
   948     06E1  00A0               	movwf	updateBallPosition@ballXprev
   949     06E2                     l1251:
   950                           
   951                           ;main.c: 201:     if (ballX == 2) {
   952     06E2  3002               	movlw	2
   953     06E3  0635               	xorwf	_ballX,w
   954     06E4  0436               	iorwf	_ballX+1,w
   955     06E5  1D03               	btfss	3,2
   956     06E6  2EE8               	goto	u441
   957     06E7  2EE9               	goto	u440
   958     06E8                     u441:
   959     06E8  2EFA               	goto	l1257
   960     06E9                     u440:
   961     06E9                     l1253:
   962                           
   963                           ;main.c: 202:         if (p2State & ballYState) {
   964     06E9  083C               	movf	_p2State,w
   965     06EA  053B               	andwf	_ballYState,w
   966     06EB  1903               	btfsc	3,2
   967     06EC  2EEE               	goto	u451
   968     06ED  2EEF               	goto	u450
   969     06EE                     u451:
   970     06EE  2F08               	goto	l1263
   971     06EF                     u450:
   972     06EF                     l1255:
   973                           
   974                           ;main.c: 203:             ballDirX = -ballDirX;
   975     06EF  09B9               	comf	_ballDirX,f
   976     06F0  09BA               	comf	_ballDirX+1,f
   977     06F1  0AB9               	incf	_ballDirX,f
   978     06F2  1903               	skipnz
   979     06F3  0ABA               	incf	_ballDirX+1,f
   980                           
   981                           ;main.c: 204:             ballDirY = -ballDirY;
   982     06F4  09B7               	comf	_ballDirY,f
   983     06F5  09B8               	comf	_ballDirY+1,f
   984     06F6  0AB7               	incf	_ballDirY,f
   985     06F7  1903               	skipnz
   986     06F8  0AB8               	incf	_ballDirY+1,f
   987     06F9  2F08               	goto	l1263
   988     06FA                     l1257:
   989     06FA  3007               	movlw	7
   990     06FB  0635               	xorwf	_ballX,w
   991     06FC  0436               	iorwf	_ballX+1,w
   992     06FD  1D03               	btfss	3,2
   993     06FE  2F00               	goto	u461
   994     06FF  2F01               	goto	u460
   995     0700                     u461:
   996     0700  2F08               	goto	l1263
   997     0701                     u460:
   998     0701                     l1259:
   999                           
  1000                           ;main.c: 208:         if (p1State & ballYState) {
  1001     0701  087D               	movf	_p1State,w
  1002     0702  053B               	andwf	_ballYState,w
  1003     0703  1903               	btfsc	3,2
  1004     0704  2F06               	goto	u471
  1005     0705  2F07               	goto	u470
  1006     0706                     u471:
  1007     0706  2F08               	goto	l1263
  1008     0707                     u470:
  1009     0707  2EEF               	goto	l1255
  1010     0708                     l1263:
  1011                           
  1012                           ;main.c: 213:     ballX += ballDirX;
  1013     0708  0839               	movf	_ballDirX,w
  1014     0709  07B5               	addwf	_ballX,f
  1015     070A  1803               	skipnc
  1016     070B  0AB6               	incf	_ballX+1,f
  1017     070C  083A               	movf	_ballDirX+1,w
  1018     070D  07B6               	addwf	_ballX+1,f
  1019     070E                     l1265:
  1020                           
  1021                           ;main.c: 215:     if ((ballYState & 0b10000000) == 0b10000000) {
  1022     070E  1FBB               	btfss	_ballYState,7
  1023     070F  2F11               	goto	u481
  1024     0710  2F12               	goto	u480
  1025     0711                     u481:
  1026     0711  2F28               	goto	l97
  1027     0712                     u480:
  1028     0712                     l1267:
  1029                           
  1030                           ;main.c: 216:         ballYState = (ballDirY == 1) ? 0b00000001 : 0b10000000;
  1031     0712  0337               	decf	_ballDirY,w
  1032     0713  0438               	iorwf	_ballDirY+1,w
  1033     0714  1903               	btfsc	3,2
  1034     0715  2F17               	goto	u491
  1035     0716  2F18               	goto	u490
  1036     0717                     u491:
  1037     0717  2F1D               	goto	l1271
  1038     0718                     u490:
  1039     0718                     l1269:
  1040     0718  3080               	movlw	128
  1041     0719  00A2               	movwf	_updateBallPosition$63
  1042     071A  3000               	movlw	0
  1043     071B  00A3               	movwf	_updateBallPosition$63+1
  1044     071C  2F21               	goto	l101
  1045     071D                     l1271:
  1046     071D  3001               	movlw	1
  1047     071E  00A2               	movwf	_updateBallPosition$63
  1048     071F  3000               	movlw	0
  1049     0720  00A3               	movwf	_updateBallPosition$63+1
  1050     0721                     l101:
  1051     0721  0822               	movf	_updateBallPosition$63,w
  1052     0722  00BB               	movwf	_ballYState
  1053                           
  1054                           ;main.c: 217:         ballDirY = 1;
  1055     0723  3001               	movlw	1
  1056     0724  00B7               	movwf	_ballDirY
  1057     0725  3000               	movlw	0
  1058     0726  00B8               	movwf	_ballDirY+1
  1059                           
  1060                           ;main.c: 218:     } else if ((ballYState & 0b00000001) == 0b00000001) {
  1061     0727  2FC6               	goto	l1315
  1062     0728                     l97:
  1063     0728  1C3B               	btfss	_ballYState,0
  1064     0729  2F2B               	goto	u501
  1065     072A  2F2C               	goto	u500
  1066     072B                     u501:
  1067     072B  2F3E               	goto	l103
  1068     072C                     u500:
  1069     072C                     l1273:
  1070                           
  1071                           ;main.c: 219:         ballYState = (ballDirY == 1) ? 0b00000010 : 0b10000000;
  1072     072C  0337               	decf	_ballDirY,w
  1073     072D  0438               	iorwf	_ballDirY+1,w
  1074     072E  1903               	btfsc	3,2
  1075     072F  2F31               	goto	u511
  1076     0730  2F32               	goto	u510
  1077     0731                     u511:
  1078     0731  2F37               	goto	l1277
  1079     0732                     u510:
  1080     0732                     l1275:
  1081     0732  3080               	movlw	128
  1082     0733  00A4               	movwf	_updateBallPosition$64
  1083     0734  3000               	movlw	0
  1084     0735  00A5               	movwf	_updateBallPosition$64+1
  1085     0736  2F3B               	goto	l107
  1086     0737                     l1277:
  1087     0737  3002               	movlw	2
  1088     0738  00A4               	movwf	_updateBallPosition$64
  1089     0739  3000               	movlw	0
  1090     073A  00A5               	movwf	_updateBallPosition$64+1
  1091     073B                     l107:
  1092     073B  0824               	movf	_updateBallPosition$64,w
  1093     073C  00BB               	movwf	_ballYState
  1094                           
  1095                           ;main.c: 220:     } else if ((ballYState & 0b00000010) == 0b00000010) {
  1096     073D  2FC6               	goto	l1315
  1097     073E                     l103:
  1098     073E  1CBB               	btfss	_ballYState,1
  1099     073F  2F41               	goto	u521
  1100     0740  2F42               	goto	u520
  1101     0741                     u521:
  1102     0741  2F54               	goto	l109
  1103     0742                     u520:
  1104     0742                     l1279:
  1105                           
  1106                           ;main.c: 221:         ballYState = (ballDirY == 1) ? 0b00000100 : 0b00000001;
  1107     0742  0337               	decf	_ballDirY,w
  1108     0743  0438               	iorwf	_ballDirY+1,w
  1109     0744  1903               	btfsc	3,2
  1110     0745  2F47               	goto	u531
  1111     0746  2F48               	goto	u530
  1112     0747                     u531:
  1113     0747  2F4D               	goto	l1283
  1114     0748                     u530:
  1115     0748                     l1281:
  1116     0748  3001               	movlw	1
  1117     0749  00A6               	movwf	_updateBallPosition$65
  1118     074A  3000               	movlw	0
  1119     074B  00A7               	movwf	_updateBallPosition$65+1
  1120     074C  2F51               	goto	l113
  1121     074D                     l1283:
  1122     074D  3004               	movlw	4
  1123     074E  00A6               	movwf	_updateBallPosition$65
  1124     074F  3000               	movlw	0
  1125     0750  00A7               	movwf	_updateBallPosition$65+1
  1126     0751                     l113:
  1127     0751  0826               	movf	_updateBallPosition$65,w
  1128     0752  00BB               	movwf	_ballYState
  1129                           
  1130                           ;main.c: 222:     } else if ((ballYState & 0b00000100) == 0b00000100) {
  1131     0753  2FC6               	goto	l1315
  1132     0754                     l109:
  1133     0754  1D3B               	btfss	_ballYState,2
  1134     0755  2F57               	goto	u541
  1135     0756  2F58               	goto	u540
  1136     0757                     u541:
  1137     0757  2F6A               	goto	l115
  1138     0758                     u540:
  1139     0758                     l1285:
  1140                           
  1141                           ;main.c: 223:         ballYState = (ballDirY == 1) ? 0b00001000 : 0b00000010;
  1142     0758  0337               	decf	_ballDirY,w
  1143     0759  0438               	iorwf	_ballDirY+1,w
  1144     075A  1903               	btfsc	3,2
  1145     075B  2F5D               	goto	u551
  1146     075C  2F5E               	goto	u550
  1147     075D                     u551:
  1148     075D  2F63               	goto	l1289
  1149     075E                     u550:
  1150     075E                     l1287:
  1151     075E  3002               	movlw	2
  1152     075F  00A8               	movwf	_updateBallPosition$66
  1153     0760  3000               	movlw	0
  1154     0761  00A9               	movwf	_updateBallPosition$66+1
  1155     0762  2F67               	goto	l119
  1156     0763                     l1289:
  1157     0763  3008               	movlw	8
  1158     0764  00A8               	movwf	_updateBallPosition$66
  1159     0765  3000               	movlw	0
  1160     0766  00A9               	movwf	_updateBallPosition$66+1
  1161     0767                     l119:
  1162     0767  0828               	movf	_updateBallPosition$66,w
  1163     0768  00BB               	movwf	_ballYState
  1164                           
  1165                           ;main.c: 224:     } else if ((ballYState & 0b00001000) == 0b00001000) {
  1166     0769  2FC6               	goto	l1315
  1167     076A                     l115:
  1168     076A  1DBB               	btfss	_ballYState,3
  1169     076B  2F6D               	goto	u561
  1170     076C  2F6E               	goto	u560
  1171     076D                     u561:
  1172     076D  2F80               	goto	l121
  1173     076E                     u560:
  1174     076E                     l1291:
  1175                           
  1176                           ;main.c: 225:         ballYState = (ballDirY == 1) ? 0b00010000 : 0b00000100;
  1177     076E  0337               	decf	_ballDirY,w
  1178     076F  0438               	iorwf	_ballDirY+1,w
  1179     0770  1903               	btfsc	3,2
  1180     0771  2F73               	goto	u571
  1181     0772  2F74               	goto	u570
  1182     0773                     u571:
  1183     0773  2F79               	goto	l1295
  1184     0774                     u570:
  1185     0774                     l1293:
  1186     0774  3004               	movlw	4
  1187     0775  00AA               	movwf	_updateBallPosition$67
  1188     0776  3000               	movlw	0
  1189     0777  00AB               	movwf	_updateBallPosition$67+1
  1190     0778  2F7D               	goto	l125
  1191     0779                     l1295:
  1192     0779  3010               	movlw	16
  1193     077A  00AA               	movwf	_updateBallPosition$67
  1194     077B  3000               	movlw	0
  1195     077C  00AB               	movwf	_updateBallPosition$67+1
  1196     077D                     l125:
  1197     077D  082A               	movf	_updateBallPosition$67,w
  1198     077E  00BB               	movwf	_ballYState
  1199                           
  1200                           ;main.c: 226:     } else if ((ballYState & 0b00010000) == 0b00010000) {
  1201     077F  2FC6               	goto	l1315
  1202     0780                     l121:
  1203     0780  1E3B               	btfss	_ballYState,4
  1204     0781  2F83               	goto	u581
  1205     0782  2F84               	goto	u580
  1206     0783                     u581:
  1207     0783  2F96               	goto	l127
  1208     0784                     u580:
  1209     0784                     l1297:
  1210                           
  1211                           ;main.c: 227:         ballYState = (ballDirY == 1) ? 0b00100000 : 0b00001000;
  1212     0784  0337               	decf	_ballDirY,w
  1213     0785  0438               	iorwf	_ballDirY+1,w
  1214     0786  1903               	btfsc	3,2
  1215     0787  2F89               	goto	u591
  1216     0788  2F8A               	goto	u590
  1217     0789                     u591:
  1218     0789  2F8F               	goto	l1301
  1219     078A                     u590:
  1220     078A                     l1299:
  1221     078A  3008               	movlw	8
  1222     078B  00AC               	movwf	_updateBallPosition$68
  1223     078C  3000               	movlw	0
  1224     078D  00AD               	movwf	_updateBallPosition$68+1
  1225     078E  2F93               	goto	l131
  1226     078F                     l1301:
  1227     078F  3020               	movlw	32
  1228     0790  00AC               	movwf	_updateBallPosition$68
  1229     0791  3000               	movlw	0
  1230     0792  00AD               	movwf	_updateBallPosition$68+1
  1231     0793                     l131:
  1232     0793  082C               	movf	_updateBallPosition$68,w
  1233     0794  00BB               	movwf	_ballYState
  1234                           
  1235                           ;main.c: 228:     } else if ((ballYState & 0b00100000) == 0b00100000) {
  1236     0795  2FC6               	goto	l1315
  1237     0796                     l127:
  1238     0796  1EBB               	btfss	_ballYState,5
  1239     0797  2F99               	goto	u601
  1240     0798  2F9A               	goto	u600
  1241     0799                     u601:
  1242     0799  2FAC               	goto	l133
  1243     079A                     u600:
  1244     079A                     l1303:
  1245                           
  1246                           ;main.c: 229:         ballYState = (ballDirY == 1) ? 0b01000000 : 0b00010000;
  1247     079A  0337               	decf	_ballDirY,w
  1248     079B  0438               	iorwf	_ballDirY+1,w
  1249     079C  1903               	btfsc	3,2
  1250     079D  2F9F               	goto	u611
  1251     079E  2FA0               	goto	u610
  1252     079F                     u611:
  1253     079F  2FA5               	goto	l1307
  1254     07A0                     u610:
  1255     07A0                     l1305:
  1256     07A0  3010               	movlw	16
  1257     07A1  00AE               	movwf	_updateBallPosition$69
  1258     07A2  3000               	movlw	0
  1259     07A3  00AF               	movwf	_updateBallPosition$69+1
  1260     07A4  2FA9               	goto	l137
  1261     07A5                     l1307:
  1262     07A5  3040               	movlw	64
  1263     07A6  00AE               	movwf	_updateBallPosition$69
  1264     07A7  3000               	movlw	0
  1265     07A8  00AF               	movwf	_updateBallPosition$69+1
  1266     07A9                     l137:
  1267     07A9  082E               	movf	_updateBallPosition$69,w
  1268     07AA  00BB               	movwf	_ballYState
  1269                           
  1270                           ;main.c: 230:     } else if ((ballYState & 0b01000000) == 0b01000000) {
  1271     07AB  2FC6               	goto	l1315
  1272     07AC                     l133:
  1273     07AC  1F3B               	btfss	_ballYState,6
  1274     07AD  2FAF               	goto	u621
  1275     07AE  2FB0               	goto	u620
  1276     07AF                     u621:
  1277     07AF  2FC6               	goto	l126
  1278     07B0                     u620:
  1279     07B0                     l1309:
  1280                           
  1281                           ;main.c: 231:         ballYState = (ballDirY == 1) ? 0b01000000 : 0b00100000;
  1282     07B0  0337               	decf	_ballDirY,w
  1283     07B1  0438               	iorwf	_ballDirY+1,w
  1284     07B2  1903               	btfsc	3,2
  1285     07B3  2FB5               	goto	u631
  1286     07B4  2FB6               	goto	u630
  1287     07B5                     u631:
  1288     07B5  2FBB               	goto	l1313
  1289     07B6                     u630:
  1290     07B6                     l1311:
  1291     07B6  3020               	movlw	32
  1292     07B7  00B0               	movwf	_updateBallPosition$70
  1293     07B8  3000               	movlw	0
  1294     07B9  00B1               	movwf	_updateBallPosition$70+1
  1295     07BA  2FBF               	goto	l143
  1296     07BB                     l1313:
  1297     07BB  3040               	movlw	64
  1298     07BC  00B0               	movwf	_updateBallPosition$70
  1299     07BD  3000               	movlw	0
  1300     07BE  00B1               	movwf	_updateBallPosition$70+1
  1301     07BF                     l143:
  1302     07BF  0830               	movf	_updateBallPosition$70,w
  1303     07C0  00BB               	movwf	_ballYState
  1304                           
  1305                           ;main.c: 232:         ballDirY = -1;
  1306     07C1  30FF               	movlw	255
  1307     07C2  00B7               	movwf	_ballDirY
  1308     07C3  30FF               	movlw	255
  1309     07C4  00B8               	movwf	_ballDirY+1
  1310     07C5  2FC6               	goto	l1315
  1311     07C6                     l126:
  1312     07C6                     l1315:
  1313                           
  1314                           ;main.c: 235:     if (ballX == 1 || ballX == 8) {
  1315     07C6  0335               	decf	_ballX,w
  1316     07C7  0436               	iorwf	_ballX+1,w
  1317     07C8  1903               	btfsc	3,2
  1318     07C9  2FCB               	goto	u641
  1319     07CA  2FCC               	goto	u640
  1320     07CB                     u641:
  1321     07CB  2FD3               	goto	l146
  1322     07CC                     u640:
  1323     07CC                     l1317:
  1324     07CC  3008               	movlw	8
  1325     07CD  0635               	xorwf	_ballX,w
  1326     07CE  0436               	iorwf	_ballX+1,w
  1327     07CF  1D03               	btfss	3,2
  1328     07D0  2FD2               	goto	u651
  1329     07D1  2FD3               	goto	u650
  1330     07D2                     u651:
  1331     07D2  2FD5               	goto	l1319
  1332     07D3                     u650:
  1333     07D3                     l146:
  1334                           
  1335                           ;main.c: 236:         isScore = 1;
  1336     07D3  01BD               	clrf	_isScore
  1337     07D4  0ABD               	incf	_isScore,f
  1338     07D5                     l1319:
  1339                           
  1340                           ;main.c: 239:     MAX7219_write(ballXprev, 0b00000000);
  1341     07D5  01F5               	clrf	MAX7219_write@data
  1342     07D6  0820               	movf	updateBallPosition@ballXprev,w
  1343     07D7  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  1344                           
  1345                           ;main.c: 240:     MAX7219_write(ballX, ballYState);
  1346     07DC  1283               	bcf	3,5	;RP0=0, select bank0
  1347     07DD  1303               	bcf	3,6	;RP1=0, select bank0
  1348     07DE  083B               	movf	_ballYState,w
  1349     07DF  00F5               	movwf	MAX7219_write@data
  1350     07E0  0835               	movf	_ballX,w
  1351     07E1  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  1352     07E6                     l147:
  1353     07E6  0008               	return
  1354     07E7                     __end_of_updateBallPosition:
  1355                           
  1356                           	psect	text2
  1357     0425                     __ptext2:	
  1358 ;; *************** function _readButton3 *****************
  1359 ;; Defined at:
  1360 ;;		line 78 in file "main.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;		None
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;		None
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  2    0[COMMON] int 
  1367 ;; Registers used:
  1368 ;;		wreg, status,0
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1374 ;;      Params:         2       0       0       0       0
  1375 ;;      Locals:         0       0       0       0       0
  1376 ;;      Temps:          2       0       0       0       0
  1377 ;;      Totals:         4       0       0       0       0
  1378 ;;Total ram usage:        4 bytes
  1379 ;; Hardware stack levels used: 1
  1380 ;; This function calls:
  1381 ;;		Nothing
  1382 ;; This function is called by:
  1383 ;;		_main
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387     0425                     _readButton3:	
  1388                           ;psect for function _readButton3
  1389                           
  1390     0425                     l1125:	
  1391                           ;incstack = 0
  1392                           ; Regs used in _readButton3: [wreg+status,0]
  1393                           
  1394                           
  1395                           ;main.c: 79:     return RB3;
  1396     0425  1003               	clrc
  1397     0426  1283               	bcf	3,5	;RP0=0, select bank0
  1398     0427  1303               	bcf	3,6	;RP1=0, select bank0
  1399     0428  1986               	btfsc	6,3	;volatile
  1400     0429  1403               	setc
  1401     042A  3000               	movlw	0
  1402     042B  1803               	skipnc
  1403     042C  3001               	movlw	1
  1404     042D  00F2               	movwf	??_readButton3
  1405     042E  01F3               	clrf	??_readButton3+1
  1406     042F  0872               	movf	??_readButton3,w
  1407     0430  00F0               	movwf	?_readButton3
  1408     0431  0873               	movf	??_readButton3+1,w
  1409     0432  00F1               	movwf	?_readButton3+1
  1410     0433                     l47:
  1411     0433  0008               	return
  1412     0434                     __end_of_readButton3:
  1413                           
  1414                           	psect	text3
  1415     0416                     __ptext3:	
  1416 ;; *************** function _readButton2 *****************
  1417 ;; Defined at:
  1418 ;;		line 74 in file "main.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;		None
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;		None
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  2    0[COMMON] int 
  1425 ;; Registers used:
  1426 ;;		wreg, status,0
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1432 ;;      Params:         2       0       0       0       0
  1433 ;;      Locals:         0       0       0       0       0
  1434 ;;      Temps:          2       0       0       0       0
  1435 ;;      Totals:         4       0       0       0       0
  1436 ;;Total ram usage:        4 bytes
  1437 ;; Hardware stack levels used: 1
  1438 ;; This function calls:
  1439 ;;		Nothing
  1440 ;; This function is called by:
  1441 ;;		_main
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444                           
  1445     0416                     _readButton2:	
  1446                           ;psect for function _readButton2
  1447                           
  1448     0416                     l1121:	
  1449                           ;incstack = 0
  1450                           ; Regs used in _readButton2: [wreg+status,0]
  1451                           
  1452                           
  1453                           ;main.c: 75:     return RB2;
  1454     0416  1003               	clrc
  1455     0417  1283               	bcf	3,5	;RP0=0, select bank0
  1456     0418  1303               	bcf	3,6	;RP1=0, select bank0
  1457     0419  1906               	btfsc	6,2	;volatile
  1458     041A  1403               	setc
  1459     041B  3000               	movlw	0
  1460     041C  1803               	skipnc
  1461     041D  3001               	movlw	1
  1462     041E  00F2               	movwf	??_readButton2
  1463     041F  01F3               	clrf	??_readButton2+1
  1464     0420  0872               	movf	??_readButton2,w
  1465     0421  00F0               	movwf	?_readButton2
  1466     0422  0873               	movf	??_readButton2+1,w
  1467     0423  00F1               	movwf	?_readButton2+1
  1468     0424                     l44:
  1469     0424  0008               	return
  1470     0425                     __end_of_readButton2:
  1471                           
  1472                           	psect	text4
  1473     0407                     __ptext4:	
  1474 ;; *************** function _readButton1 *****************
  1475 ;; Defined at:
  1476 ;;		line 70 in file "main.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;		None
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;		None
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  2    0[COMMON] int 
  1483 ;; Registers used:
  1484 ;;		wreg, status,0
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1490 ;;      Params:         2       0       0       0       0
  1491 ;;      Locals:         0       0       0       0       0
  1492 ;;      Temps:          2       0       0       0       0
  1493 ;;      Totals:         4       0       0       0       0
  1494 ;;Total ram usage:        4 bytes
  1495 ;; Hardware stack levels used: 1
  1496 ;; This function calls:
  1497 ;;		Nothing
  1498 ;; This function is called by:
  1499 ;;		_main
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503     0407                     _readButton1:	
  1504                           ;psect for function _readButton1
  1505                           
  1506     0407                     l1117:	
  1507                           ;incstack = 0
  1508                           ; Regs used in _readButton1: [wreg+status,0]
  1509                           
  1510                           
  1511                           ;main.c: 71:     return RB1;
  1512     0407  1003               	clrc
  1513     0408  1283               	bcf	3,5	;RP0=0, select bank0
  1514     0409  1303               	bcf	3,6	;RP1=0, select bank0
  1515     040A  1886               	btfsc	6,1	;volatile
  1516     040B  1403               	setc
  1517     040C  3000               	movlw	0
  1518     040D  1803               	skipnc
  1519     040E  3001               	movlw	1
  1520     040F  00F2               	movwf	??_readButton1
  1521     0410  01F3               	clrf	??_readButton1+1
  1522     0411  0872               	movf	??_readButton1,w
  1523     0412  00F0               	movwf	?_readButton1
  1524     0413  0873               	movf	??_readButton1+1,w
  1525     0414  00F1               	movwf	?_readButton1+1
  1526     0415                     l41:
  1527     0415  0008               	return
  1528     0416                     __end_of_readButton1:
  1529                           
  1530                           	psect	text5
  1531     03F8                     __ptext5:	
  1532 ;; *************** function _readButton0 *****************
  1533 ;; Defined at:
  1534 ;;		line 66 in file "main.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;		None
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;		None
  1539 ;; Return value:  Size  Location     Type
  1540 ;;                  2    0[COMMON] int 
  1541 ;; Registers used:
  1542 ;;		wreg, status,0
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1548 ;;      Params:         2       0       0       0       0
  1549 ;;      Locals:         0       0       0       0       0
  1550 ;;      Temps:          2       0       0       0       0
  1551 ;;      Totals:         4       0       0       0       0
  1552 ;;Total ram usage:        4 bytes
  1553 ;; Hardware stack levels used: 1
  1554 ;; This function calls:
  1555 ;;		Nothing
  1556 ;; This function is called by:
  1557 ;;		_main
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561     03F8                     _readButton0:	
  1562                           ;psect for function _readButton0
  1563                           
  1564     03F8                     l1113:	
  1565                           ;incstack = 0
  1566                           ; Regs used in _readButton0: [wreg+status,0]
  1567                           
  1568                           
  1569                           ;main.c: 67:     return RB0;
  1570     03F8  1003               	clrc
  1571     03F9  1283               	bcf	3,5	;RP0=0, select bank0
  1572     03FA  1303               	bcf	3,6	;RP1=0, select bank0
  1573     03FB  1806               	btfsc	6,0	;volatile
  1574     03FC  1403               	setc
  1575     03FD  3000               	movlw	0
  1576     03FE  1803               	skipnc
  1577     03FF  3001               	movlw	1
  1578     0400  00F2               	movwf	??_readButton0
  1579     0401  01F3               	clrf	??_readButton0+1
  1580     0402  0872               	movf	??_readButton0,w
  1581     0403  00F0               	movwf	?_readButton0
  1582     0404  0873               	movf	??_readButton0+1,w
  1583     0405  00F1               	movwf	?_readButton0+1
  1584     0406                     l38:
  1585     0406  0008               	return
  1586     0407                     __end_of_readButton0:
  1587                           
  1588                           	psect	text6
  1589     04C7                     __ptext6:	
  1590 ;; *************** function _initGame *****************
  1591 ;; Defined at:
  1592 ;;		line 53 in file "main.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;		None
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;		None
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  1    wreg      void 
  1599 ;; Registers used:
  1600 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1606 ;;      Params:         0       0       0       0       0
  1607 ;;      Locals:         0       0       0       0       0
  1608 ;;      Temps:          0       0       0       0       0
  1609 ;;      Totals:         0       0       0       0       0
  1610 ;;Total ram usage:        0 bytes
  1611 ;; Hardware stack levels used: 1
  1612 ;; Hardware stack levels required when called: 2
  1613 ;; This function calls:
  1614 ;;		_MAX7219_write
  1615 ;; This function is called by:
  1616 ;;		_main
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620     04C7                     _initGame:	
  1621                           ;psect for function _initGame
  1622                           
  1623     04C7                     l1099:	
  1624                           ;incstack = 0
  1625                           ; Regs used in _initGame: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1626                           
  1627                           
  1628                           ;main.c: 54:     ballX = 4;
  1629     04C7  3004               	movlw	4
  1630     04C8  1283               	bcf	3,5	;RP0=0, select bank0
  1631     04C9  1303               	bcf	3,6	;RP1=0, select bank0
  1632     04CA  00B5               	movwf	_ballX
  1633     04CB  3000               	movlw	0
  1634     04CC  00B6               	movwf	_ballX+1
  1635                           
  1636                           ;main.c: 55:     ballYState = 0b00001000;
  1637     04CD  3008               	movlw	8
  1638     04CE  00BB               	movwf	_ballYState
  1639     04CF                     l1101:
  1640                           
  1641                           ;main.c: 57:     MAX7219_write(8, 0b00000000);
  1642     04CF  01F5               	clrf	MAX7219_write@data
  1643     04D0  3008               	movlw	8
  1644     04D1  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  1645     04D6                     l1103:
  1646                           
  1647                           ;main.c: 58:     MAX7219_write(1, 0b00000000);
  1648     04D6  01F5               	clrf	MAX7219_write@data
  1649     04D7  3001               	movlw	1
  1650     04D8  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  1651     04DD                     l1105:
  1652                           
  1653                           ;main.c: 60:     MAX7219_write(7, p1State);
  1654     04DD  087D               	movf	_p1State,w
  1655     04DE  00F5               	movwf	MAX7219_write@data
  1656     04DF  3007               	movlw	7
  1657     04E0  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  1658     04E5                     l1107:
  1659                           
  1660                           ;main.c: 61:     MAX7219_write(2, p2State);
  1661     04E5  1283               	bcf	3,5	;RP0=0, select bank0
  1662     04E6  1303               	bcf	3,6	;RP1=0, select bank0
  1663     04E7  083C               	movf	_p2State,w
  1664     04E8  00F5               	movwf	MAX7219_write@data
  1665     04E9  3002               	movlw	2
  1666     04EA  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  1667     04EF                     l1109:
  1668                           
  1669                           ;main.c: 62:     MAX7219_write(ballX, ballYState);
  1670     04EF  1283               	bcf	3,5	;RP0=0, select bank0
  1671     04F0  1303               	bcf	3,6	;RP1=0, select bank0
  1672     04F1  083B               	movf	_ballYState,w
  1673     04F2  00F5               	movwf	MAX7219_write@data
  1674     04F3  0835               	movf	_ballX,w
  1675     04F4  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  1676     04F9                     l1111:
  1677                           
  1678                           ;main.c: 63:     isScore = 0;
  1679     04F9  1283               	bcf	3,5	;RP0=0, select bank0
  1680     04FA  1303               	bcf	3,6	;RP1=0, select bank0
  1681     04FB  01BD               	clrf	_isScore
  1682     04FC                     l35:
  1683     04FC  0008               	return
  1684     04FD                     __end_of_initGame:
  1685                           
  1686                           	psect	text7
  1687     062C                     __ptext7:	
  1688 ;; *************** function _buttonGoUp *****************
  1689 ;; Defined at:
  1690 ;;		line 82 in file "main.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;  player          2    7[COMMON] int 
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;		None
  1695 ;; Return value:  Size  Location     Type
  1696 ;;                  1    wreg      void 
  1697 ;; Registers used:
  1698 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1704 ;;      Params:         2       0       0       0       0
  1705 ;;      Locals:         0       0       0       0       0
  1706 ;;      Temps:          0       0       0       0       0
  1707 ;;      Totals:         2       0       0       0       0
  1708 ;;Total ram usage:        2 bytes
  1709 ;; Hardware stack levels used: 1
  1710 ;; Hardware stack levels required when called: 2
  1711 ;; This function calls:
  1712 ;;		_MAX7219_write
  1713 ;; This function is called by:
  1714 ;;		_main
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718     062C                     _buttonGoUp:	
  1719                           ;psect for function _buttonGoUp
  1720                           
  1721     062C                     l1129:	
  1722                           ;incstack = 0
  1723                           ; Regs used in _buttonGoUp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1724                           
  1725                           
  1726                           ;main.c: 83:     if (player == 1) {
  1727     062C  0377               	decf	buttonGoUp@player,w
  1728     062D  0478               	iorwf	buttonGoUp@player+1,w
  1729     062E  1D03               	btfss	3,2
  1730     062F  2E31               	goto	u421
  1731     0630  2E32               	goto	u420
  1732     0631                     u421:
  1733     0631  2EC8               	goto	l1187
  1734     0632                     u420:
  1735     0632  2E75               	goto	l1159
  1736     0633                     l1133:
  1737                           
  1738                           ;main.c: 86:                 p1State = 0b00001111;
  1739     0633  300F               	movlw	15
  1740     0634  00FD               	movwf	_p1State
  1741     0635                     l1135:
  1742                           
  1743                           ;main.c: 87:                 MAX7219_write(7, p1State);
  1744     0635  087D               	movf	_p1State,w
  1745     0636  00F5               	movwf	MAX7219_write@data
  1746     0637  3007               	movlw	7
  1747     0638  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  1748                           
  1749                           ;main.c: 88:                 break;
  1750     063D  2EDB               	goto	l68
  1751     063E                     l1137:
  1752                           
  1753                           ;main.c: 90:                 p1State = 0b00011110;
  1754     063E  301E               	movlw	30
  1755     063F  00FD               	movwf	_p1State
  1756     0640                     l1139:
  1757                           
  1758                           ;main.c: 91:                 MAX7219_write(7, p1State);
  1759     0640  087D               	movf	_p1State,w
  1760     0641  00F5               	movwf	MAX7219_write@data
  1761     0642  3007               	movlw	7
  1762     0643  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  1763                           
  1764                           ;main.c: 92:                 break;
  1765     0648  2EDB               	goto	l68
  1766     0649                     l1141:
  1767                           
  1768                           ;main.c: 94:                 p1State = 0b00111100;
  1769     0649  303C               	movlw	60
  1770     064A  00FD               	movwf	_p1State
  1771     064B                     l1143:
  1772                           
  1773                           ;main.c: 95:                 MAX7219_write(7, p1State);
  1774     064B  087D               	movf	_p1State,w
  1775     064C  00F5               	movwf	MAX7219_write@data
  1776     064D  3007               	movlw	7
  1777     064E  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  1778                           
  1779                           ;main.c: 96:                 break;
  1780     0653  2EDB               	goto	l68
  1781     0654                     l1145:
  1782                           
  1783                           ;main.c: 98:                 p1State = 0b01111000;
  1784     0654  3078               	movlw	120
  1785     0655  00FD               	movwf	_p1State
  1786     0656                     l1147:
  1787                           
  1788                           ;main.c: 99:                 MAX7219_write(7, p1State);
  1789     0656  087D               	movf	_p1State,w
  1790     0657  00F5               	movwf	MAX7219_write@data
  1791     0658  3007               	movlw	7
  1792     0659  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  1793                           
  1794                           ;main.c: 100:                 break;
  1795     065E  2EDB               	goto	l68
  1796     065F                     l1149:
  1797                           
  1798                           ;main.c: 102:                 p1State = 0b01111000;
  1799     065F  3078               	movlw	120
  1800     0660  00FD               	movwf	_p1State
  1801     0661                     l1151:
  1802                           
  1803                           ;main.c: 103:                 MAX7219_write(7, p1State);
  1804     0661  087D               	movf	_p1State,w
  1805     0662  00F5               	movwf	MAX7219_write@data
  1806     0663  3007               	movlw	7
  1807     0664  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  1808                           
  1809                           ;main.c: 104:                 break;
  1810     0669  2EDB               	goto	l68
  1811     066A                     l1153:
  1812                           
  1813                           ;main.c: 106:                 p1State = 0b00011110;
  1814     066A  301E               	movlw	30
  1815     066B  00FD               	movwf	_p1State
  1816     066C                     l1155:
  1817                           
  1818                           ;main.c: 107:                 MAX7219_write(7, p1State);
  1819     066C  087D               	movf	_p1State,w
  1820     066D  00F5               	movwf	MAX7219_write@data
  1821     066E  3007               	movlw	7
  1822     066F  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  1823                           
  1824                           ;main.c: 108:                 break;
  1825     0674  2EDB               	goto	l68
  1826     0675                     l1159:
  1827     0675  087D               	movf	_p1State,w
  1828                           
  1829                           ; Switch size 1, requested type "simple"
  1830                           ; Number of cases is 5, Range of values is 15 to 135
  1831                           ; switch strategies available:
  1832                           ; Name         Instructions Cycles
  1833                           ; simple_byte           16     9 (average)
  1834                           ; jumptable            263     9 (fixed)
  1835                           ;	Chosen strategy is simple_byte
  1836     0676  3A0F               	xorlw	15	; case 15
  1837     0677  1903               	skipnz
  1838     0678  2E3E               	goto	l1137
  1839     0679  3A11               	xorlw	17	; case 30
  1840     067A  1903               	skipnz
  1841     067B  2E49               	goto	l1141
  1842     067C  3A22               	xorlw	34	; case 60
  1843     067D  1903               	skipnz
  1844     067E  2E54               	goto	l1145
  1845     067F  3A44               	xorlw	68	; case 120
  1846     0680  1903               	skipnz
  1847     0681  2E5F               	goto	l1149
  1848     0682  3AFF               	xorlw	255	; case 135
  1849     0683  1903               	skipnz
  1850     0684  2E33               	goto	l1133
  1851     0685  2E6A               	goto	l1153
  1852     0686                     l1161:
  1853                           
  1854                           ;main.c: 113:                 p2State = 0b00001111;
  1855     0686  300F               	movlw	15
  1856     0687  00BC               	movwf	_p2State
  1857     0688                     l1163:
  1858                           
  1859                           ;main.c: 114:                 MAX7219_write(2, p2State);
  1860     0688  083C               	movf	_p2State,w
  1861     0689  00F5               	movwf	MAX7219_write@data
  1862     068A  3002               	movlw	2
  1863     068B  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  1864                           
  1865                           ;main.c: 115:                 break;
  1866     0690  2EDB               	goto	l68
  1867     0691                     l1165:
  1868                           
  1869                           ;main.c: 117:                 p2State = 0b00011110;
  1870     0691  301E               	movlw	30
  1871     0692  00BC               	movwf	_p2State
  1872     0693                     l1167:
  1873                           
  1874                           ;main.c: 118:                 MAX7219_write(2, p2State);
  1875     0693  083C               	movf	_p2State,w
  1876     0694  00F5               	movwf	MAX7219_write@data
  1877     0695  3002               	movlw	2
  1878     0696  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  1879                           
  1880                           ;main.c: 119:                 break;
  1881     069B  2EDB               	goto	l68
  1882     069C                     l1169:
  1883                           
  1884                           ;main.c: 121:                 p2State = 0b00111100;
  1885     069C  303C               	movlw	60
  1886     069D  00BC               	movwf	_p2State
  1887     069E                     l1171:
  1888                           
  1889                           ;main.c: 122:                 MAX7219_write(2, p2State);
  1890     069E  083C               	movf	_p2State,w
  1891     069F  00F5               	movwf	MAX7219_write@data
  1892     06A0  3002               	movlw	2
  1893     06A1  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  1894                           
  1895                           ;main.c: 123:                 break;
  1896     06A6  2EDB               	goto	l68
  1897     06A7                     l1173:
  1898                           
  1899                           ;main.c: 125:                 p2State = 0b01111000;
  1900     06A7  3078               	movlw	120
  1901     06A8  00BC               	movwf	_p2State
  1902     06A9                     l1175:
  1903                           
  1904                           ;main.c: 126:                 MAX7219_write(2, p2State);
  1905     06A9  083C               	movf	_p2State,w
  1906     06AA  00F5               	movwf	MAX7219_write@data
  1907     06AB  3002               	movlw	2
  1908     06AC  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  1909                           
  1910                           ;main.c: 127:                 break;
  1911     06B1  2EDB               	goto	l68
  1912     06B2                     l1177:
  1913                           
  1914                           ;main.c: 129:                 p2State = 0b01111000;
  1915     06B2  3078               	movlw	120
  1916     06B3  00BC               	movwf	_p2State
  1917     06B4                     l1179:
  1918                           
  1919                           ;main.c: 130:                 MAX7219_write(2, p2State);
  1920     06B4  083C               	movf	_p2State,w
  1921     06B5  00F5               	movwf	MAX7219_write@data
  1922     06B6  3002               	movlw	2
  1923     06B7  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  1924                           
  1925                           ;main.c: 131:                 break;
  1926     06BC  2EDB               	goto	l68
  1927     06BD                     l1181:
  1928                           
  1929                           ;main.c: 133:                 p2State = 0b00011110;
  1930     06BD  301E               	movlw	30
  1931     06BE  00BC               	movwf	_p2State
  1932     06BF                     l1183:
  1933                           
  1934                           ;main.c: 134:                 MAX7219_write(2, p2State);
  1935     06BF  083C               	movf	_p2State,w
  1936     06C0  00F5               	movwf	MAX7219_write@data
  1937     06C1  3002               	movlw	2
  1938     06C2  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  1939                           
  1940                           ;main.c: 135:                 break;
  1941     06C7  2EDB               	goto	l68
  1942     06C8                     l1187:
  1943     06C8  1283               	bcf	3,5	;RP0=0, select bank0
  1944     06C9  1303               	bcf	3,6	;RP1=0, select bank0
  1945     06CA  083C               	movf	_p2State,w
  1946                           
  1947                           ; Switch size 1, requested type "simple"
  1948                           ; Number of cases is 5, Range of values is 15 to 135
  1949                           ; switch strategies available:
  1950                           ; Name         Instructions Cycles
  1951                           ; simple_byte           16     9 (average)
  1952                           ; jumptable            263     9 (fixed)
  1953                           ;	Chosen strategy is simple_byte
  1954     06CB  3A0F               	xorlw	15	; case 15
  1955     06CC  1903               	skipnz
  1956     06CD  2E91               	goto	l1165
  1957     06CE  3A11               	xorlw	17	; case 30
  1958     06CF  1903               	skipnz
  1959     06D0  2E9C               	goto	l1169
  1960     06D1  3A22               	xorlw	34	; case 60
  1961     06D2  1903               	skipnz
  1962     06D3  2EA7               	goto	l1173
  1963     06D4  3A44               	xorlw	68	; case 120
  1964     06D5  1903               	skipnz
  1965     06D6  2EB2               	goto	l1177
  1966     06D7  3AFF               	xorlw	255	; case 135
  1967     06D8  1903               	skipnz
  1968     06D9  2E86               	goto	l1161
  1969     06DA  2EBD               	goto	l1181
  1970     06DB                     l68:
  1971     06DB  0008               	return
  1972     06DC                     __end_of_buttonGoUp:
  1973                           
  1974                           	psect	text8
  1975     057C                     __ptext8:	
  1976 ;; *************** function _buttonGoDown *****************
  1977 ;; Defined at:
  1978 ;;		line 140 in file "main.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;  player          2    7[COMMON] int 
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;		None
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  1    wreg      void 
  1985 ;; Registers used:
  1986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1992 ;;      Params:         2       0       0       0       0
  1993 ;;      Locals:         0       0       0       0       0
  1994 ;;      Temps:          0       0       0       0       0
  1995 ;;      Totals:         2       0       0       0       0
  1996 ;;Total ram usage:        2 bytes
  1997 ;; Hardware stack levels used: 1
  1998 ;; Hardware stack levels required when called: 2
  1999 ;; This function calls:
  2000 ;;		_MAX7219_write
  2001 ;; This function is called by:
  2002 ;;		_main
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006     057C                     _buttonGoDown:	
  2007                           ;psect for function _buttonGoDown
  2008                           
  2009     057C                     l1189:	
  2010                           ;incstack = 0
  2011                           ; Regs used in _buttonGoDown: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2012                           
  2013                           
  2014                           ;main.c: 141:     if (player == 1) {
  2015     057C  0377               	decf	buttonGoDown@player,w
  2016     057D  0478               	iorwf	buttonGoDown@player+1,w
  2017     057E  1D03               	btfss	3,2
  2018     057F  2D81               	goto	u431
  2019     0580  2D82               	goto	u430
  2020     0581                     u431:
  2021     0581  2E18               	goto	l1247
  2022     0582                     u430:
  2023     0582  2DC5               	goto	l1219
  2024     0583                     l1193:
  2025                           
  2026                           ;main.c: 144:                 p1State = 0b10000111;
  2027     0583  3087               	movlw	135
  2028     0584  00FD               	movwf	_p1State
  2029     0585                     l1195:
  2030                           
  2031                           ;main.c: 145:                 MAX7219_write(7, p1State);
  2032     0585  087D               	movf	_p1State,w
  2033     0586  00F5               	movwf	MAX7219_write@data
  2034     0587  3007               	movlw	7
  2035     0588  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  2036                           
  2037                           ;main.c: 146:                 break;
  2038     058D  2E2B               	goto	l89
  2039     058E                     l1197:
  2040                           
  2041                           ;main.c: 148:                 p1State = 0b10000111;
  2042     058E  3087               	movlw	135
  2043     058F  00FD               	movwf	_p1State
  2044     0590                     l1199:
  2045                           
  2046                           ;main.c: 149:                 MAX7219_write(7, p1State);
  2047     0590  087D               	movf	_p1State,w
  2048     0591  00F5               	movwf	MAX7219_write@data
  2049     0592  3007               	movlw	7
  2050     0593  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  2051                           
  2052                           ;main.c: 150:                 break;
  2053     0598  2E2B               	goto	l89
  2054     0599                     l1201:
  2055                           
  2056                           ;main.c: 152:                 p1State = 0b00001111;
  2057     0599  300F               	movlw	15
  2058     059A  00FD               	movwf	_p1State
  2059     059B                     l1203:
  2060                           
  2061                           ;main.c: 153:                 MAX7219_write(7, p1State);
  2062     059B  087D               	movf	_p1State,w
  2063     059C  00F5               	movwf	MAX7219_write@data
  2064     059D  3007               	movlw	7
  2065     059E  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  2066                           
  2067                           ;main.c: 154:                 break;
  2068     05A3  2E2B               	goto	l89
  2069     05A4                     l1205:
  2070                           
  2071                           ;main.c: 156:                 p1State = 0b00011110;
  2072     05A4  301E               	movlw	30
  2073     05A5  00FD               	movwf	_p1State
  2074     05A6                     l1207:
  2075                           
  2076                           ;main.c: 157:                 MAX7219_write(7, p1State);
  2077     05A6  087D               	movf	_p1State,w
  2078     05A7  00F5               	movwf	MAX7219_write@data
  2079     05A8  3007               	movlw	7
  2080     05A9  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  2081                           
  2082                           ;main.c: 158:                 break;
  2083     05AE  2E2B               	goto	l89
  2084     05AF                     l1209:
  2085                           
  2086                           ;main.c: 160:                 p1State = 0b00111100;
  2087     05AF  303C               	movlw	60
  2088     05B0  00FD               	movwf	_p1State
  2089     05B1                     l1211:
  2090                           
  2091                           ;main.c: 161:                 MAX7219_write(7, p1State);
  2092     05B1  087D               	movf	_p1State,w
  2093     05B2  00F5               	movwf	MAX7219_write@data
  2094     05B3  3007               	movlw	7
  2095     05B4  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  2096                           
  2097                           ;main.c: 162:                 break;
  2098     05B9  2E2B               	goto	l89
  2099     05BA                     l1213:
  2100                           
  2101                           ;main.c: 164:                 p1State = 0b00011110;
  2102     05BA  301E               	movlw	30
  2103     05BB  00FD               	movwf	_p1State
  2104     05BC                     l1215:
  2105                           
  2106                           ;main.c: 165:                 MAX7219_write(7, p1State);
  2107     05BC  087D               	movf	_p1State,w
  2108     05BD  00F5               	movwf	MAX7219_write@data
  2109     05BE  3007               	movlw	7
  2110     05BF  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  2111                           
  2112                           ;main.c: 166:                 break;
  2113     05C4  2E2B               	goto	l89
  2114     05C5                     l1219:
  2115     05C5  087D               	movf	_p1State,w
  2116                           
  2117                           ; Switch size 1, requested type "simple"
  2118                           ; Number of cases is 5, Range of values is 15 to 135
  2119                           ; switch strategies available:
  2120                           ; Name         Instructions Cycles
  2121                           ; simple_byte           16     9 (average)
  2122                           ; jumptable            263     9 (fixed)
  2123                           ;	Chosen strategy is simple_byte
  2124     05C6  3A0F               	xorlw	15	; case 15
  2125     05C7  1903               	skipnz
  2126     05C8  2D8E               	goto	l1197
  2127     05C9  3A11               	xorlw	17	; case 30
  2128     05CA  1903               	skipnz
  2129     05CB  2D99               	goto	l1201
  2130     05CC  3A22               	xorlw	34	; case 60
  2131     05CD  1903               	skipnz
  2132     05CE  2DA4               	goto	l1205
  2133     05CF  3A44               	xorlw	68	; case 120
  2134     05D0  1903               	skipnz
  2135     05D1  2DAF               	goto	l1209
  2136     05D2  3AFF               	xorlw	255	; case 135
  2137     05D3  1903               	skipnz
  2138     05D4  2D83               	goto	l1193
  2139     05D5  2DBA               	goto	l1213
  2140     05D6                     l1221:
  2141                           
  2142                           ;main.c: 171:                 p2State = 0b10000111;
  2143     05D6  3087               	movlw	135
  2144     05D7  00BC               	movwf	_p2State
  2145     05D8                     l1223:
  2146                           
  2147                           ;main.c: 172:                 MAX7219_write(2, p2State);
  2148     05D8  083C               	movf	_p2State,w
  2149     05D9  00F5               	movwf	MAX7219_write@data
  2150     05DA  3002               	movlw	2
  2151     05DB  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  2152                           
  2153                           ;main.c: 173:                 break;
  2154     05E0  2E2B               	goto	l89
  2155     05E1                     l1225:
  2156                           
  2157                           ;main.c: 175:                 p2State = 0b10000111;
  2158     05E1  3087               	movlw	135
  2159     05E2  00BC               	movwf	_p2State
  2160     05E3                     l1227:
  2161                           
  2162                           ;main.c: 176:                 MAX7219_write(2, p2State);
  2163     05E3  083C               	movf	_p2State,w
  2164     05E4  00F5               	movwf	MAX7219_write@data
  2165     05E5  3002               	movlw	2
  2166     05E6  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  2167                           
  2168                           ;main.c: 177:                 break;
  2169     05EB  2E2B               	goto	l89
  2170     05EC                     l1229:
  2171                           
  2172                           ;main.c: 179:                 p2State = 0b00001111;
  2173     05EC  300F               	movlw	15
  2174     05ED  00BC               	movwf	_p2State
  2175     05EE                     l1231:
  2176                           
  2177                           ;main.c: 180:                 MAX7219_write(2, p2State);
  2178     05EE  083C               	movf	_p2State,w
  2179     05EF  00F5               	movwf	MAX7219_write@data
  2180     05F0  3002               	movlw	2
  2181     05F1  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  2182                           
  2183                           ;main.c: 181:                 break;
  2184     05F6  2E2B               	goto	l89
  2185     05F7                     l1233:
  2186                           
  2187                           ;main.c: 183:                 p2State = 0b00011110;
  2188     05F7  301E               	movlw	30
  2189     05F8  00BC               	movwf	_p2State
  2190     05F9                     l1235:
  2191                           
  2192                           ;main.c: 184:                 MAX7219_write(2, p2State);
  2193     05F9  083C               	movf	_p2State,w
  2194     05FA  00F5               	movwf	MAX7219_write@data
  2195     05FB  3002               	movlw	2
  2196     05FC  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  2197                           
  2198                           ;main.c: 185:                 break;
  2199     0601  2E2B               	goto	l89
  2200     0602                     l1237:
  2201                           
  2202                           ;main.c: 187:                 p2State = 0b00111100;
  2203     0602  303C               	movlw	60
  2204     0603  00BC               	movwf	_p2State
  2205     0604                     l1239:
  2206                           
  2207                           ;main.c: 188:                 MAX7219_write(2, p2State);
  2208     0604  083C               	movf	_p2State,w
  2209     0605  00F5               	movwf	MAX7219_write@data
  2210     0606  3002               	movlw	2
  2211     0607  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  2212                           
  2213                           ;main.c: 189:                 break;
  2214     060C  2E2B               	goto	l89
  2215     060D                     l1241:
  2216                           
  2217                           ;main.c: 191:                 p2State = 0b00000010 | 0b00000100 | 0b00001000 | 0b0001000
      +                          0;
  2218     060D  301E               	movlw	30
  2219     060E  00BC               	movwf	_p2State
  2220     060F                     l1243:
  2221                           
  2222                           ;main.c: 192:                 MAX7219_write(2, p2State);
  2223     060F  083C               	movf	_p2State,w
  2224     0610  00F5               	movwf	MAX7219_write@data
  2225     0611  3002               	movlw	2
  2226     0612  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  2227                           
  2228                           ;main.c: 193:                 break;
  2229     0617  2E2B               	goto	l89
  2230     0618                     l1247:
  2231     0618  1283               	bcf	3,5	;RP0=0, select bank0
  2232     0619  1303               	bcf	3,6	;RP1=0, select bank0
  2233     061A  083C               	movf	_p2State,w
  2234                           
  2235                           ; Switch size 1, requested type "simple"
  2236                           ; Number of cases is 5, Range of values is 15 to 135
  2237                           ; switch strategies available:
  2238                           ; Name         Instructions Cycles
  2239                           ; simple_byte           16     9 (average)
  2240                           ; jumptable            263     9 (fixed)
  2241                           ;	Chosen strategy is simple_byte
  2242     061B  3A0F               	xorlw	15	; case 15
  2243     061C  1903               	skipnz
  2244     061D  2DE1               	goto	l1225
  2245     061E  3A11               	xorlw	17	; case 30
  2246     061F  1903               	skipnz
  2247     0620  2DEC               	goto	l1229
  2248     0621  3A22               	xorlw	34	; case 60
  2249     0622  1903               	skipnz
  2250     0623  2DF7               	goto	l1233
  2251     0624  3A44               	xorlw	68	; case 120
  2252     0625  1903               	skipnz
  2253     0626  2E02               	goto	l1237
  2254     0627  3AFF               	xorlw	255	; case 135
  2255     0628  1903               	skipnz
  2256     0629  2DD6               	goto	l1221
  2257     062A  2E0D               	goto	l1241
  2258     062B                     l89:
  2259     062B  0008               	return
  2260     062C                     __end_of_buttonGoDown:
  2261                           
  2262                           	psect	text9
  2263     045B                     __ptext9:	
  2264 ;; *************** function _MAX7219_init *****************
  2265 ;; Defined at:
  2266 ;;		line 12 in file "MAX7219.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;  noChips         1    wreg     unsigned char 
  2269 ;; Auto vars:     Size  Location     Type
  2270 ;;  noChips         1    7[COMMON] unsigned char 
  2271 ;; Return value:  Size  Location     Type
  2272 ;;                  1    wreg      void 
  2273 ;; Registers used:
  2274 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2280 ;;      Params:         0       0       0       0       0
  2281 ;;      Locals:         1       0       0       0       0
  2282 ;;      Temps:          0       0       0       0       0
  2283 ;;      Totals:         1       0       0       0       0
  2284 ;;Total ram usage:        1 bytes
  2285 ;; Hardware stack levels used: 1
  2286 ;; Hardware stack levels required when called: 3
  2287 ;; This function calls:
  2288 ;;		_MAX7219_config
  2289 ;;		_SPI_init
  2290 ;; This function is called by:
  2291 ;;		_main
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295     045B                     _MAX7219_init:	
  2296                           ;psect for function _MAX7219_init
  2297                           
  2298                           
  2299                           ;incstack = 0
  2300                           ; Regs used in _MAX7219_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2301                           ;MAX7219_init@noChips stored from wreg
  2302     045B  00F7               	movwf	MAX7219_init@noChips
  2303     045C                     l1321:
  2304                           
  2305                           ;MAX7219.c: 13:     SPI_init();
  2306     045C  120A  118A  23E8  120A  118A  	fcall	_SPI_init
  2307                           
  2308                           ;MAX7219.c: 14:     while (noChips)
  2309     0461  2C6A               	goto	l1325
  2310     0462                     l1323:
  2311                           
  2312                           ;MAX7219.c: 15:         MAX7219_config(--noChips);
  2313     0462  3001               	movlw	1
  2314     0463  02F7               	subwf	MAX7219_init@noChips,f
  2315     0464  0877               	movf	MAX7219_init@noChips,w
  2316     0465  120A  118A  2470  120A  118A  	fcall	_MAX7219_config
  2317     046A                     l1325:
  2318                           
  2319                           ;MAX7219.c: 14:     while (noChips)
  2320     046A  0877               	movf	MAX7219_init@noChips,w
  2321     046B  1D03               	btfss	3,2
  2322     046C  2C6E               	goto	u661
  2323     046D  2C6F               	goto	u660
  2324     046E                     u661:
  2325     046E  2C62               	goto	l1323
  2326     046F                     u660:
  2327     046F                     l178:
  2328     046F  0008               	return
  2329     0470                     __end_of_MAX7219_init:
  2330                           
  2331                           	psect	text10
  2332     03E8                     __ptext10:	
  2333 ;; *************** function _SPI_init *****************
  2334 ;; Defined at:
  2335 ;;		line 12 in file "Soft_SPI.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;		None
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;		None
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  1    wreg      void 
  2342 ;; Registers used:
  2343 ;;		None
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2349 ;;      Params:         0       0       0       0       0
  2350 ;;      Locals:         0       0       0       0       0
  2351 ;;      Temps:          0       0       0       0       0
  2352 ;;      Totals:         0       0       0       0       0
  2353 ;;Total ram usage:        0 bytes
  2354 ;; Hardware stack levels used: 1
  2355 ;; This function calls:
  2356 ;;		Nothing
  2357 ;; This function is called by:
  2358 ;;		_MAX7219_init
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362     03E8                     _SPI_init:	
  2363                           ;psect for function _SPI_init
  2364                           
  2365     03E8                     l1095:	
  2366                           ;incstack = 0
  2367                           ; Regs used in _SPI_init: []
  2368                           
  2369                           
  2370                           ;Soft_SPI.c: 13:     TRISC2 = 0;
  2371     03E8  1683               	bsf	3,5	;RP0=1, select bank1
  2372     03E9  1303               	bcf	3,6	;RP1=0, select bank1
  2373     03EA  1107               	bcf	7,2	;volatile
  2374                           
  2375                           ;Soft_SPI.c: 14:     TRISC0 = 0;
  2376     03EB  1007               	bcf	7,0	;volatile
  2377                           
  2378                           ;Soft_SPI.c: 15:     TRISC4 = 1;
  2379     03EC  1607               	bsf	7,4	;volatile
  2380                           
  2381                           ;Soft_SPI.c: 16:     TRISC1 = 0;
  2382     03ED  1087               	bcf	7,1	;volatile
  2383                           
  2384                           ;Soft_SPI.c: 17:     TRISC3 = 0;
  2385     03EE  1187               	bcf	7,3	;volatile
  2386     03EF                     l211:
  2387     03EF  0008               	return
  2388     03F0                     __end_of_SPI_init:
  2389                           
  2390                           	psect	text11
  2391     0470                     __ptext11:	
  2392 ;; *************** function _MAX7219_config *****************
  2393 ;; Defined at:
  2394 ;;		line 19 in file "MAX7219.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;  chip            1    wreg     unsigned char 
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;  chip            1    0[COMMON] unsigned char 
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  1    wreg      void 
  2401 ;; Registers used:
  2402 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2408 ;;      Params:         0       0       0       0       0
  2409 ;;      Locals:         0       0       0       0       0
  2410 ;;      Temps:          0       0       0       0       0
  2411 ;;      Totals:         0       0       0       0       0
  2412 ;;Total ram usage:        0 bytes
  2413 ;; Hardware stack levels used: 1
  2414 ;; Hardware stack levels required when called: 2
  2415 ;; This function calls:
  2416 ;;		_MAX7219_write
  2417 ;; This function is called by:
  2418 ;;		_MAX7219_init
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422     0470                     _MAX7219_config:	
  2423                           ;psect for function _MAX7219_config
  2424                           
  2425     0470                     l1097:	
  2426                           ;incstack = 0
  2427                           ; Regs used in _MAX7219_config: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2428                           
  2429                           
  2430                           ;MAX7219.c: 20:     MAX7219_write(0x09, 0x00);
  2431     0470  01F5               	clrf	MAX7219_write@data
  2432     0471  3009               	movlw	9
  2433     0472  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  2434                           
  2435                           ;MAX7219.c: 21:     MAX7219_write(0x0A, 0x05);
  2436     0477  3005               	movlw	5
  2437     0478  00F5               	movwf	MAX7219_write@data
  2438     0479  300A               	movlw	10
  2439     047A  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  2440                           
  2441                           ;MAX7219.c: 22:     MAX7219_write(0x0B, 0x07);
  2442     047F  3007               	movlw	7
  2443     0480  00F5               	movwf	MAX7219_write@data
  2444     0481  300B               	movlw	11
  2445     0482  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  2446                           
  2447                           ;MAX7219.c: 23:     MAX7219_write(0x0C, 0x01);
  2448     0487  01F5               	clrf	MAX7219_write@data
  2449     0488  0AF5               	incf	MAX7219_write@data,f
  2450     0489  300C               	movlw	12
  2451     048A  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  2452                           
  2453                           ;MAX7219.c: 24:     MAX7219_write(0x0F, 0x00);
  2454     048F  01F5               	clrf	MAX7219_write@data
  2455     0490  300F               	movlw	15
  2456     0491  120A  118A  2447  120A  118A  	fcall	_MAX7219_write
  2457     0496                     l181:
  2458     0496  0008               	return
  2459     0497                     __end_of_MAX7219_config:
  2460                           
  2461                           	psect	text12
  2462     0447                     __ptext12:	
  2463 ;; *************** function _MAX7219_write *****************
  2464 ;; Defined at:
  2465 ;;		line 28 in file "MAX7219.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;  regName         1    wreg     unsigned char 
  2468 ;;  data            1    5[COMMON] unsigned char 
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;  regName         1    6[COMMON] unsigned char 
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  1    wreg      void 
  2473 ;; Registers used:
  2474 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2480 ;;      Params:         1       0       0       0       0
  2481 ;;      Locals:         1       0       0       0       0
  2482 ;;      Temps:          0       0       0       0       0
  2483 ;;      Totals:         2       0       0       0       0
  2484 ;;Total ram usage:        2 bytes
  2485 ;; Hardware stack levels used: 1
  2486 ;; Hardware stack levels required when called: 1
  2487 ;; This function calls:
  2488 ;;		_SPI_write
  2489 ;; This function is called by:
  2490 ;;		_initGame
  2491 ;;		_buttonGoUp
  2492 ;;		_buttonGoDown
  2493 ;;		_updateBallPosition
  2494 ;;		_MAX7219_config
  2495 ;;		_MAX7219_displayText
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499     0447                     _MAX7219_write:	
  2500                           ;psect for function _MAX7219_write
  2501                           
  2502                           
  2503                           ;incstack = 0
  2504                           ; Regs used in _MAX7219_write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2505                           ;MAX7219_write@regName stored from wreg
  2506     0447  00F6               	movwf	MAX7219_write@regName
  2507     0448                     l1089:
  2508                           
  2509                           ;MAX7219.c: 29:     RC1 = 0;
  2510     0448  1283               	bcf	3,5	;RP0=0, select bank0
  2511     0449  1303               	bcf	3,6	;RP1=0, select bank0
  2512     044A  1087               	bcf	7,1	;volatile
  2513     044B                     l1091:
  2514                           
  2515                           ;MAX7219.c: 31:     SPI_write(regName);
  2516     044B  0876               	movf	MAX7219_write@regName,w
  2517     044C  120A  118A  2497  120A  118A  	fcall	_SPI_write
  2518                           
  2519                           ;MAX7219.c: 32:     SPI_write(data);
  2520     0451  0875               	movf	MAX7219_write@data,w
  2521     0452  120A  118A  2497  120A  118A  	fcall	_SPI_write
  2522     0457                     l1093:
  2523                           
  2524                           ;MAX7219.c: 34:     RC1 = 1;
  2525     0457  1283               	bcf	3,5	;RP0=0, select bank0
  2526     0458  1303               	bcf	3,6	;RP1=0, select bank0
  2527     0459  1487               	bsf	7,1	;volatile
  2528     045A                     l184:
  2529     045A  0008               	return
  2530     045B                     __end_of_MAX7219_write:
  2531                           
  2532                           	psect	text13
  2533     0497                     __ptext13:	
  2534 ;; *************** function _SPI_write *****************
  2535 ;; Defined at:
  2536 ;;		line 21 in file "Soft_SPI.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;  send            1    wreg     unsigned char 
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;  send            1    2[COMMON] unsigned char 
  2541 ;;  Tx              2    3[COMMON] int 
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  1    wreg      void 
  2544 ;; Registers used:
  2545 ;;		wreg, status,2, status,0, btemp+1
  2546 ;; Tracked objects:
  2547 ;;		On entry : 0/0
  2548 ;;		On exit  : 0/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2551 ;;      Params:         0       0       0       0       0
  2552 ;;      Locals:         3       0       0       0       0
  2553 ;;      Temps:          2       0       0       0       0
  2554 ;;      Totals:         5       0       0       0       0
  2555 ;;Total ram usage:        5 bytes
  2556 ;; Hardware stack levels used: 1
  2557 ;; This function calls:
  2558 ;;		Nothing
  2559 ;; This function is called by:
  2560 ;;		_MAX7219_write
  2561 ;;		_MAX7219_NoOperation
  2562 ;; This function uses a non-reentrant model
  2563 ;;
  2564                           
  2565     0497                     _SPI_write:	
  2566                           ;psect for function _SPI_write
  2567                           
  2568                           
  2569                           ;incstack = 0
  2570                           ; Regs used in _SPI_write: [wreg+status,2+status,0+btemp+1]
  2571                           ;SPI_write@send stored from wreg
  2572     0497  00F2               	movwf	SPI_write@send
  2573     0498                     l1075:
  2574                           
  2575                           ;Soft_SPI.c: 22:     for (int Tx = 0; Tx < 8; Tx++) {
  2576     0498  01F3               	clrf	SPI_write@Tx
  2577     0499  01F4               	clrf	SPI_write@Tx+1
  2578     049A                     l214:
  2579                           
  2580                           ;Soft_SPI.c: 23:         RC2 = 0;
  2581     049A  1283               	bcf	3,5	;RP0=0, select bank0
  2582     049B  1303               	bcf	3,6	;RP1=0, select bank0
  2583     049C  1107               	bcf	7,2	;volatile
  2584     049D                     l1081:
  2585                           
  2586                           ;Soft_SPI.c: 24:         RC0 = ((send << Tx) & 0x80) ? 1 : 0;
  2587     049D  0A73               	incf	SPI_write@Tx,w
  2588     049E  00FF               	movwf	btemp+1
  2589     049F  0872               	movf	SPI_write@send,w
  2590     04A0  00F0               	movwf	??_SPI_write
  2591     04A1  01F1               	clrf	??_SPI_write+1
  2592     04A2  2CA6               	goto	u384
  2593     04A3                     u385:
  2594     04A3  1003               	clrc
  2595     04A4  0DF0               	rlf	??_SPI_write,f
  2596     04A5  0DF1               	rlf	??_SPI_write+1,f
  2597     04A6                     u384:
  2598     04A6  0BFF               	decfsz	btemp+1,f
  2599     04A7  2CA3               	goto	u385
  2600     04A8  1BF0               	btfsc	??_SPI_write,7
  2601     04A9  2CAB               	goto	u391
  2602     04AA  2CAF               	goto	u390
  2603     04AB                     u391:
  2604     04AB  1283               	bcf	3,5	;RP0=0, select bank0
  2605     04AC  1303               	bcf	3,6	;RP1=0, select bank0
  2606     04AD  1407               	bsf	7,0	;volatile
  2607     04AE  2CB2               	goto	u404
  2608     04AF                     u390:
  2609     04AF  1283               	bcf	3,5	;RP0=0, select bank0
  2610     04B0  1303               	bcf	3,6	;RP1=0, select bank0
  2611     04B1  1007               	bcf	7,0	;volatile
  2612     04B2                     u404:
  2613     04B2                     l1083:
  2614                           
  2615                           ;Soft_SPI.c: 25:         RC2 = 1;
  2616     04B2  1507               	bsf	7,2	;volatile
  2617     04B3                     l1085:
  2618                           
  2619                           ;Soft_SPI.c: 26:     }
  2620     04B3  3001               	movlw	1
  2621     04B4  07F3               	addwf	SPI_write@Tx,f
  2622     04B5  1803               	skipnc
  2623     04B6  0AF4               	incf	SPI_write@Tx+1,f
  2624     04B7  3000               	movlw	0
  2625     04B8  07F4               	addwf	SPI_write@Tx+1,f
  2626     04B9                     l1087:
  2627     04B9  0874               	movf	SPI_write@Tx+1,w
  2628     04BA  3A80               	xorlw	128
  2629     04BB  00FF               	movwf	btemp+1
  2630     04BC  3080               	movlw	128
  2631     04BD  027F               	subwf	btemp+1,w
  2632     04BE  1D03               	skipz
  2633     04BF  2CC2               	goto	u415
  2634     04C0  3008               	movlw	8
  2635     04C1  0273               	subwf	SPI_write@Tx,w
  2636     04C2                     u415:
  2637     04C2  1C03               	skipc
  2638     04C3  2CC5               	goto	u411
  2639     04C4  2CC6               	goto	u410
  2640     04C5                     u411:
  2641     04C5  2C9A               	goto	l214
  2642     04C6                     u410:
  2643     04C6                     l216:
  2644     04C6  0008               	return
  2645     04C7                     __end_of_SPI_write:
  2646     007E                     btemp	set	126	;btemp
  2647     007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     21      30
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_buttonGoDown
    _main->_buttonGoUp
    _updateBallPosition->_MAX7219_write
    _initGame->_MAX7219_write
    _buttonGoUp->_MAX7219_write
    _buttonGoDown->_MAX7219_write
    _MAX7219_config->_MAX7219_write
    _MAX7219_write->_SPI_write

Critical Paths under _main in BANK0

    _main->_updateBallPosition

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     3      4   15337
                                              9 COMMON     4     0      4
                                             18 BANK0      3     3      0
                       _MAX7219_init
                       _buttonGoDown
                         _buttonGoUp
                           _initGame
                        _readButton0
                        _readButton1
                        _readButton2
                        _readButton3
                 _updateBallPosition
 ---------------------------------------------------------------------------------
 (1) _updateBallPosition                                  18    18      0    3161
                                              0 BANK0     18    18      0
                      _MAX7219_write
 ---------------------------------------------------------------------------------
 (1) _readButton3                                          4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _readButton2                                          4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _readButton1                                          4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _readButton0                                          4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _initGame                                             0     0      0    2946
                      _MAX7219_write
 ---------------------------------------------------------------------------------
 (1) _buttonGoUp                                           2     0      2    3120
                                              7 COMMON     2     0      2
                      _MAX7219_write
 ---------------------------------------------------------------------------------
 (1) _buttonGoDown                                         2     0      2    3120
                                              7 COMMON     2     0      2
                      _MAX7219_write
 ---------------------------------------------------------------------------------
 (1) _MAX7219_init                                         1     1      0    2990
                                              7 COMMON     1     1      0
                     _MAX7219_config
                           _SPI_init
 ---------------------------------------------------------------------------------
 (2) _SPI_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MAX7219_config                                       1     1      0    2946
                      _MAX7219_write
 ---------------------------------------------------------------------------------
 (2) _MAX7219_write                                        2     1      1    2946
                                              5 COMMON     2     1      1
                          _SPI_write
 ---------------------------------------------------------------------------------
 (3) _SPI_write                                            5     5      0      90
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MAX7219_init
     _MAX7219_config
       _MAX7219_write
         _SPI_write
     _SPI_init
   _buttonGoDown
     _MAX7219_write
   _buttonGoUp
     _MAX7219_write
   _initGame
     _MAX7219_write
   _readButton0
   _readButton1
   _readButton2
   _readButton3
   _updateBallPosition
     _MAX7219_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     15      1E       5       37.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2C      12        0.0%
ABS                  0      0      2C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat May 18 10:24:26 2024

                          pc 0002                           l41 0415                           l35 04FC  
                         l44 0424                           l38 0406                           l47 0433  
                         l68 06DB                           l89 062B                           l97 0728  
                         fsr 0004                          l101 0721                          l103 073E  
                        l121 0780                          l113 0751                          l211 03EF  
                        l131 0793                          l115 076A                          l107 073B  
                        l133 07AC                          l125 077D                          l109 0754  
                        l214 049A                          l126 07C6                          l143 07BF  
                        l127 0796                          l119 0767                          l216 04C6  
                        l137 07A9                          l146 07D3                          l147 07E6  
                        l181 0496                          l184 045A                          l178 046F  
                        _RB0 0030                          _RB1 0031                          _RB2 0032  
                        _RC0 0038                          _RB3 0033                          _RC1 0039  
                        _RC2 003A                          _RC4 003C                          u410 04C6  
                        u411 04C5                          u404 04B2                          u420 0632  
                        u500 072C                          u421 0631                          u501 072B  
                        u430 0582                          u510 0732                          u415 04C2  
                        u431 0581                          u511 0731                          u600 079A  
                        u520 0742                          u440 06E9                          u601 0799  
                        u521 0741                          u441 06E8                          u610 07A0  
                        u530 0748                          u450 06EF                          u611 079F  
                        u531 0747                          u451 06EE                          u620 07B0  
                        u540 0758                          u460 0701                          u700 0555  
                        u621 07AF                          u541 0757                          u461 0700  
                        u701 0554                          u390 04AF                          u630 07B6  
                        u550 075E                          u470 0707                          u710 0578  
                        u391 04AB                          u631 07B5                          u551 075D  
                        u471 0706                          u711 0577                          u384 04A6  
                        u640 07CC                          u560 076E                          u480 0712  
                        u385 04A3                          u641 07CB                          u561 076D  
                        u481 0711                          u650 07D3                          u570 0774  
                        u490 0718                          u651 07D2                          u571 0773  
                        u491 0717                          u660 046F                          u580 0784  
                        u661 046E                          u581 0783                          u590 078A  
                        u670 0519                          u591 0789                          u671 0518  
                        u680 052D                          u737 0566                          u681 052C  
                        u690 0541                          u691 0540                          indf 0000  
                       l1101 04CF                         l1111 04F9                         l1103 04D6  
                       l1201 0599                         l1105 04DD                         l1113 03F8  
                       l1121 0416                         l1211 05B1                         l1203 059B  
                       l1107 04E5                         l1221 05D6                         l1213 05BA  
                       l1205 05A4                         l1141 0649                         l1133 0633  
                       l1109 04EF                         l1117 0407                         l1125 0425  
                       l1301 078F                         l1231 05EE                         l1223 05D8  
                       l1215 05BC                         l1207 05A6                         l1151 0661  
                       l1143 064B                         l1135 0635                         l1311 07B6  
                       l1303 079A                         l1081 049D                         l1321 045C  
                       l1241 060D                         l1233 05F7                         l1225 05E1  
                       l1209 05AF                         l1161 0686                         l1153 066A  
                       l1145 0654                         l1137 063E                         l1129 062C  
                       l1313 07BB                         l1305 07A0                         l1083 04B2  
                       l1075 0498                         l1091 044B                         l1323 0462  
                       l1243 060F                         l1235 05F9                         l1227 05E3  
                       l1219 05C5                         l1171 069E                         l1163 0688  
                       l1155 066C                         l1147 0656                         l1139 0640  
                       l1307 07A5                         l1315 07C6                         l1251 06E2  
                       l1331 0502                         l1085 04B3                         l1093 0457  
                       l1325 046A                         l1237 0602                         l1229 05EC  
                       l1181 06BD                         l1173 06A7                         l1165 0691  
                       l1149 065F                         l1317 07CC                         l1309 07B0  
                       l1253 06E9                         l1341 052D                         l1333 0507  
                       l1087 04B9                         l1095 03E8                         l1239 0604  
                       l1247 0618                         l1183 06BF                         l1175 06A9  
                       l1167 0693                         l1159 0675                         l1319 07D5  
                       l1271 071D                         l1255 06EF                         l1263 0708  
                       l1351 055E                         l1343 0536                         l1335 050E  
                       l1327 04FD                         l1089 0448                         l1097 0470  
                       l1193 0583                         l1177 06B2                         l1169 069C  
                       l1281 0748                         l1273 072C                         l1265 070E  
                       l1257 06FA                         l1249 06DC                         l1353 056C  
                       l1345 0541                         l1337 0519                         l1329 0501  
                       l1195 0585                         l1179 06B4                         l1187 06C8  
                       l1099 04C7                         l1291 076E                         l1283 074D  
                       l1275 0732                         l1267 0712                         l1259 0701  
                       l1347 054A                         l1339 0522                         l1355 0571  
                       l1197 058E                         l1189 057C                         l1293 0774  
                       l1285 0758                         l1277 0737                         l1269 0718  
                       l1349 0555                         l1199 0590                         l1295 0779  
                       l1287 075E                         l1279 0742                         l1297 0784  
                       l1289 0763                         l1299 078A         MAX7219_write@regName 0076  
                       _main 04FD                         btemp 007E                         start 0000  
               ?_readButton0 0070                 ?_readButton1 0070                 ?_readButton2 0070  
               ?_readButton3 0070                        ?_main 0079                        _TRISB 0086  
                      _TRISC 0087                        _ballX 0035                        pclath 000A  
           __end_of_SPI_init 03F0                        status 0003                        wtemp0 007E  
       __end_of_MAX7219_init 0470              __initialization 07E7                 __end_of_main 057C  
                     ??_main 0032           _updateBallPosition 06DC                ?_buttonGoDown 0077  
        ?_updateBallPosition 0070                       _TRISC0 0438                       _TRISC1 0439  
                     _TRISC2 043A                       _TRISC3 043B                       _TRISC4 043C  
           __end_of_initGame 04FD         ??_updateBallPosition 0077                 __pdataCOMMON 007D  
         buttonGoDown@player 0077            __end_of_SPI_write 04C7               ??_buttonGoDown 0079  
      __end_of_MAX7219_write 045B      __end_of__initialization 07FC               __pcstackCOMMON 0070  
               __pidataBANK0 03F0                    ?_SPI_init 0070                   _ballYState 003B  
      _updateBallPosition$70 0030        _updateBallPosition$63 0022        _updateBallPosition$64 0024  
      _updateBallPosition$65 0026        _updateBallPosition$66 0028        _updateBallPosition$67 002A  
      _updateBallPosition$68 002C        _updateBallPosition$69 002E                   __pbssBANK0 003D  
                 __pmaintext 04FD                   ??_SPI_init 0070                 _MAX7219_init 045B  
          MAX7219_write@data 0075                    ?_initGame 0070                      _p1State 007D  
                    _p2State 003C           MAX7219_config@chip 0070         __end_of_buttonGoDown 062C  
                 _buttonGoUp 062C                      __ptext1 06DC                      __ptext2 0425  
                    __ptext3 0416                      __ptext4 0407                      __ptext5 03F8  
                    __ptext6 04C7                      __ptext7 062C                      __ptext8 057C  
                    __ptext9 045B                      _isScore 003D               _MAX7219_config 0470  
       end_of_initialization 07FC                   ??_initGame 0077       __end_of_MAX7219_config 0497  
                  _SPI_write 0497                  ?_buttonGoUp 0077                __pidataCOMMON 03E7  
            ?_MAX7219_config 0070          start_initialization 07E7                   ?_SPI_write 0070  
                 init_fetch0 0434                  __pdataBANK0 0035                ??_readButton0 0072  
              ??_readButton1 0072                ??_readButton2 0072                ??_readButton3 0072  
                  ___latbits 0002                __pcstackBANK0 0020                 _buttonGoDown 057C  
                SPI_write@Tx 0073                SPI_write@send 0072          __end_of_readButton0 0407  
        __end_of_readButton1 0416          __end_of_readButton2 0425          __end_of_readButton3 0434  
                ??_SPI_write 0070                _MAX7219_write 0447                     _SPI_init 03E8  
             ?_MAX7219_write 0075             ??_MAX7219_config 0077                 ??_buttonGoUp 0079  
                _readButton0 03F8                  _readButton1 0407                  _readButton2 0416  
                _readButton3 0425                     _ballDirX 0039                     _ballDirY 0037  
updateBallPosition@ballXprev 0020             buttonGoUp@player 0077                     __ptext10 03E8  
                   __ptext11 0470                     __ptext12 0447                     __ptext13 0497  
                   _initGame 04C7           __end_of_buttonGoUp 06DC   __end_of_updateBallPosition 07E7  
                   main@argc 0079                     main@argv 007B                ?_MAX7219_init 0070  
                   init_ram0 0438              ??_MAX7219_write 0076          MAX7219_init@noChips 0077  
             ??_MAX7219_init 0077  
