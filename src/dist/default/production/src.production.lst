

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat May 18 17:34:26 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	dabs	1,0x7E,2
    28     0000                     
    29                           ; Generated 12/10/2023 GMT
    30                           ; 
    31                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F877A Definitions
    61                           ; 
    62                           ; SFR Addresses
    63     0000                     	;# 
    64     0001                     	;# 
    65     0002                     	;# 
    66     0003                     	;# 
    67     0004                     	;# 
    68     0005                     	;# 
    69     0006                     	;# 
    70     0007                     	;# 
    71     0008                     	;# 
    72     0009                     	;# 
    73     000A                     	;# 
    74     000B                     	;# 
    75     000C                     	;# 
    76     000D                     	;# 
    77     000E                     	;# 
    78     000E                     	;# 
    79     000F                     	;# 
    80     0010                     	;# 
    81     0011                     	;# 
    82     0012                     	;# 
    83     0013                     	;# 
    84     0014                     	;# 
    85     0015                     	;# 
    86     0015                     	;# 
    87     0016                     	;# 
    88     0017                     	;# 
    89     0018                     	;# 
    90     0019                     	;# 
    91     001A                     	;# 
    92     001B                     	;# 
    93     001B                     	;# 
    94     001C                     	;# 
    95     001D                     	;# 
    96     001E                     	;# 
    97     001F                     	;# 
    98     0081                     	;# 
    99     0085                     	;# 
   100     0086                     	;# 
   101     0087                     	;# 
   102     0088                     	;# 
   103     0089                     	;# 
   104     008C                     	;# 
   105     008D                     	;# 
   106     008E                     	;# 
   107     0091                     	;# 
   108     0092                     	;# 
   109     0093                     	;# 
   110     0094                     	;# 
   111     0098                     	;# 
   112     0099                     	;# 
   113     009C                     	;# 
   114     009D                     	;# 
   115     009E                     	;# 
   116     009F                     	;# 
   117     010C                     	;# 
   118     010D                     	;# 
   119     010E                     	;# 
   120     010F                     	;# 
   121     018C                     	;# 
   122     018D                     	;# 
   123     0000                     	;# 
   124     0001                     	;# 
   125     0002                     	;# 
   126     0003                     	;# 
   127     0004                     	;# 
   128     0005                     	;# 
   129     0006                     	;# 
   130     0007                     	;# 
   131     0008                     	;# 
   132     0009                     	;# 
   133     000A                     	;# 
   134     000B                     	;# 
   135     000C                     	;# 
   136     000D                     	;# 
   137     000E                     	;# 
   138     000E                     	;# 
   139     000F                     	;# 
   140     0010                     	;# 
   141     0011                     	;# 
   142     0012                     	;# 
   143     0013                     	;# 
   144     0014                     	;# 
   145     0015                     	;# 
   146     0015                     	;# 
   147     0016                     	;# 
   148     0017                     	;# 
   149     0018                     	;# 
   150     0019                     	;# 
   151     001A                     	;# 
   152     001B                     	;# 
   153     001B                     	;# 
   154     001C                     	;# 
   155     001D                     	;# 
   156     001E                     	;# 
   157     001F                     	;# 
   158     0081                     	;# 
   159     0085                     	;# 
   160     0086                     	;# 
   161     0087                     	;# 
   162     0088                     	;# 
   163     0089                     	;# 
   164     008C                     	;# 
   165     008D                     	;# 
   166     008E                     	;# 
   167     0091                     	;# 
   168     0092                     	;# 
   169     0093                     	;# 
   170     0094                     	;# 
   171     0098                     	;# 
   172     0099                     	;# 
   173     009C                     	;# 
   174     009D                     	;# 
   175     009E                     	;# 
   176     009F                     	;# 
   177     010C                     	;# 
   178     010D                     	;# 
   179     010E                     	;# 
   180     010F                     	;# 
   181     018C                     	;# 
   182     018D                     	;# 
   183     0000                     	;# 
   184     0001                     	;# 
   185     0002                     	;# 
   186     0003                     	;# 
   187     0004                     	;# 
   188     0005                     	;# 
   189     0006                     	;# 
   190     0007                     	;# 
   191     0008                     	;# 
   192     0009                     	;# 
   193     000A                     	;# 
   194     000B                     	;# 
   195     000C                     	;# 
   196     000D                     	;# 
   197     000E                     	;# 
   198     000E                     	;# 
   199     000F                     	;# 
   200     0010                     	;# 
   201     0011                     	;# 
   202     0012                     	;# 
   203     0013                     	;# 
   204     0014                     	;# 
   205     0015                     	;# 
   206     0015                     	;# 
   207     0016                     	;# 
   208     0017                     	;# 
   209     0018                     	;# 
   210     0019                     	;# 
   211     001A                     	;# 
   212     001B                     	;# 
   213     001B                     	;# 
   214     001C                     	;# 
   215     001D                     	;# 
   216     001E                     	;# 
   217     001F                     	;# 
   218     0081                     	;# 
   219     0085                     	;# 
   220     0086                     	;# 
   221     0087                     	;# 
   222     0088                     	;# 
   223     0089                     	;# 
   224     008C                     	;# 
   225     008D                     	;# 
   226     008E                     	;# 
   227     0091                     	;# 
   228     0092                     	;# 
   229     0093                     	;# 
   230     0094                     	;# 
   231     0098                     	;# 
   232     0099                     	;# 
   233     009C                     	;# 
   234     009D                     	;# 
   235     009E                     	;# 
   236     009F                     	;# 
   237     010C                     	;# 
   238     010D                     	;# 
   239     010E                     	;# 
   240     010F                     	;# 
   241     018C                     	;# 
   242     018D                     	;# 
   243     0000                     	;# 
   244     0001                     	;# 
   245     0002                     	;# 
   246     0003                     	;# 
   247     0004                     	;# 
   248     0005                     	;# 
   249     0006                     	;# 
   250     0007                     	;# 
   251     0008                     	;# 
   252     0009                     	;# 
   253     000A                     	;# 
   254     000B                     	;# 
   255     000C                     	;# 
   256     000D                     	;# 
   257     000E                     	;# 
   258     000E                     	;# 
   259     000F                     	;# 
   260     0010                     	;# 
   261     0011                     	;# 
   262     0012                     	;# 
   263     0013                     	;# 
   264     0014                     	;# 
   265     0015                     	;# 
   266     0015                     	;# 
   267     0016                     	;# 
   268     0017                     	;# 
   269     0018                     	;# 
   270     0019                     	;# 
   271     001A                     	;# 
   272     001B                     	;# 
   273     001B                     	;# 
   274     001C                     	;# 
   275     001D                     	;# 
   276     001E                     	;# 
   277     001F                     	;# 
   278     0081                     	;# 
   279     0085                     	;# 
   280     0086                     	;# 
   281     0087                     	;# 
   282     0088                     	;# 
   283     0089                     	;# 
   284     008C                     	;# 
   285     008D                     	;# 
   286     008E                     	;# 
   287     0091                     	;# 
   288     0092                     	;# 
   289     0093                     	;# 
   290     0094                     	;# 
   291     0098                     	;# 
   292     0099                     	;# 
   293     009C                     	;# 
   294     009D                     	;# 
   295     009E                     	;# 
   296     009F                     	;# 
   297     010C                     	;# 
   298     010D                     	;# 
   299     010E                     	;# 
   300     010F                     	;# 
   301     018C                     	;# 
   302     018D                     	;# 
   303     0000                     	;# 
   304     0001                     	;# 
   305     0002                     	;# 
   306     0003                     	;# 
   307     0004                     	;# 
   308     0005                     	;# 
   309     0006                     	;# 
   310     0007                     	;# 
   311     0008                     	;# 
   312     0009                     	;# 
   313     000A                     	;# 
   314     000B                     	;# 
   315     000C                     	;# 
   316     000D                     	;# 
   317     000E                     	;# 
   318     000E                     	;# 
   319     000F                     	;# 
   320     0010                     	;# 
   321     0011                     	;# 
   322     0012                     	;# 
   323     0013                     	;# 
   324     0014                     	;# 
   325     0015                     	;# 
   326     0015                     	;# 
   327     0016                     	;# 
   328     0017                     	;# 
   329     0018                     	;# 
   330     0019                     	;# 
   331     001A                     	;# 
   332     001B                     	;# 
   333     001B                     	;# 
   334     001C                     	;# 
   335     001D                     	;# 
   336     001E                     	;# 
   337     001F                     	;# 
   338     0081                     	;# 
   339     0085                     	;# 
   340     0086                     	;# 
   341     0087                     	;# 
   342     0088                     	;# 
   343     0089                     	;# 
   344     008C                     	;# 
   345     008D                     	;# 
   346     008E                     	;# 
   347     0091                     	;# 
   348     0092                     	;# 
   349     0093                     	;# 
   350     0094                     	;# 
   351     0098                     	;# 
   352     0099                     	;# 
   353     009C                     	;# 
   354     009D                     	;# 
   355     009E                     	;# 
   356     009F                     	;# 
   357     010C                     	;# 
   358     010D                     	;# 
   359     010E                     	;# 
   360     010F                     	;# 
   361     018C                     	;# 
   362     018D                     	;# 
   363     0000                     	;# 
   364     0001                     	;# 
   365     0002                     	;# 
   366     0003                     	;# 
   367     0004                     	;# 
   368     0005                     	;# 
   369     0006                     	;# 
   370     0007                     	;# 
   371     0008                     	;# 
   372     0009                     	;# 
   373     000A                     	;# 
   374     000B                     	;# 
   375     000C                     	;# 
   376     000D                     	;# 
   377     000E                     	;# 
   378     000E                     	;# 
   379     000F                     	;# 
   380     0010                     	;# 
   381     0011                     	;# 
   382     0012                     	;# 
   383     0013                     	;# 
   384     0014                     	;# 
   385     0015                     	;# 
   386     0015                     	;# 
   387     0016                     	;# 
   388     0017                     	;# 
   389     0018                     	;# 
   390     0019                     	;# 
   391     001A                     	;# 
   392     001B                     	;# 
   393     001B                     	;# 
   394     001C                     	;# 
   395     001D                     	;# 
   396     001E                     	;# 
   397     001F                     	;# 
   398     0081                     	;# 
   399     0085                     	;# 
   400     0086                     	;# 
   401     0087                     	;# 
   402     0088                     	;# 
   403     0089                     	;# 
   404     008C                     	;# 
   405     008D                     	;# 
   406     008E                     	;# 
   407     0091                     	;# 
   408     0092                     	;# 
   409     0093                     	;# 
   410     0094                     	;# 
   411     0098                     	;# 
   412     0099                     	;# 
   413     009C                     	;# 
   414     009D                     	;# 
   415     009E                     	;# 
   416     009F                     	;# 
   417     010C                     	;# 
   418     010D                     	;# 
   419     010E                     	;# 
   420     010F                     	;# 
   421     018C                     	;# 
   422     018D                     	;# 
   423                           
   424                           	psect	idataCOMMON
   425     03EC                     __pidataCOMMON:
   426                           
   427                           ;initializer for _p1State
   428     03EC  341E               	retlw	30
   429                           
   430                           	psect	idataBANK0
   431     03F5                     __pidataBANK0:
   432                           
   433                           ;initializer for _ballX
   434     03F5  3404               	retlw	4
   435     03F6  3400               	retlw	0
   436                           
   437                           ;initializer for _ballDirY
   438     03F7  3401               	retlw	1
   439     03F8  3400               	retlw	0
   440                           
   441                           ;initializer for _ballDirX
   442     03F9  34FF               	retlw	255
   443     03FA  34FF               	retlw	255
   444                           
   445                           ;initializer for _ballYState
   446     03FB  3408               	retlw	8
   447                           
   448                           ;initializer for _p2State
   449     03FC  341E               	retlw	30
   450     003C                     _RC4	set	60
   451     0038                     _RC0	set	56
   452     003A                     _RC2	set	58
   453     0039                     _RC1	set	57
   454     0033                     _RB3	set	51
   455     0032                     _RB2	set	50
   456     0031                     _RB1	set	49
   457     0030                     _RB0	set	48
   458     0087                     _TRISC	set	135
   459     0086                     _TRISB	set	134
   460     043B                     _TRISC3	set	1083
   461     0439                     _TRISC1	set	1081
   462     043C                     _TRISC4	set	1084
   463     0438                     _TRISC0	set	1080
   464     043A                     _TRISC2	set	1082
   465                           
   466                           	psect	cinit
   467     07E7                     start_initialization:	
   468                           ; #config settings
   469                           
   470     07E7                     __initialization:
   471                           
   472                           ; Initialize objects allocated to BANK0
   473     07E7  1383               	bcf	3,7	;select IRP bank0
   474     07E8  303D               	movlw	low (__pdataBANK0+8)
   475     07E9  00FD               	movwf	btemp+-1
   476     07EA  3003               	movlw	high __pidataBANK0
   477     07EB  00FE               	movwf	btemp
   478     07EC  30F5               	movlw	low __pidataBANK0
   479     07ED  00FF               	movwf	btemp+1
   480     07EE  3035               	movlw	low __pdataBANK0
   481     07EF  0084               	movwf	4
   482     07F0  120A  118A  243D  120A  118A  	fcall	init_ram0
   483                           
   484                           ; Initialize objects allocated to COMMON
   485     07F5  120A  118A  23EC  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   486     07FA  00FD               	movwf	__pdataCOMMON& (0+127)
   487                           
   488                           ; Clear objects allocated to BANK0
   489     07FB  01BD               	clrf	__pbssBANK0& (0+127)
   490     07FC                     end_of_initialization:	
   491                           ;End of C runtime variable initialization code
   492                           
   493     07FC                     __end_of__initialization:
   494     07FC  0183               	clrf	3
   495     07FD  120A  118A  2D02   	ljmp	_main	;jump to C main() function
   496                           
   497                           	psect	dataCOMMON
   498     007D                     __pdataCOMMON:
   499     007D                     _p1State:
   500     007D                     	ds	1
   501                           
   502                           	psect	bssBANK0
   503     003D                     __pbssBANK0:
   504     003D                     _isScore:
   505     003D                     	ds	1
   506                           
   507                           	psect	dataBANK0
   508     0035                     __pdataBANK0:
   509     0035                     _ballX:
   510     0035                     	ds	2
   511     0037                     _ballDirY:
   512     0037                     	ds	2
   513     0039                     _ballDirX:
   514     0039                     	ds	2
   515     003B                     _ballYState:
   516     003B                     	ds	1
   517     003C                     _p2State:
   518     003C                     	ds	1
   519                           
   520                           	psect	inittext
   521     0439                     init_fetch0:	
   522                           ;	Called with low address in FSR and high address in W
   523                           
   524     0439  087E               	movf	btemp,w
   525     043A  008A               	movwf	10
   526     043B  087F               	movf	btemp+1,w
   527     043C  0082               	movwf	2
   528     043D                     init_ram0:	
   529                           ;Called with:
   530                           ;	high address of idata address in btemp 
   531                           ;	low address of idata address in btemp+1 
   532                           ;	low address of data in FSR
   533                           ;	high address + 1 of data in btemp-1
   534                           
   535     043D  120A  118A  2439  120A  118A  	fcall	init_fetch0
   536     0442  0080               	movwf	0
   537     0443  0A84               	incf	4,f
   538     0444  0804               	movf	4,w
   539     0445  067D               	xorwf	btemp+-1,w
   540     0446  1903               	btfsc	3,2
   541     0447  3400               	retlw	0
   542     0448  0AFF               	incf	btemp+1,f
   543     0449  1903               	btfsc	3,2
   544     044A  0AFE               	incf	btemp,f
   545     044B  2C3D               	goto	init_ram0
   546                           
   547                           	psect	cstackCOMMON
   548     0070                     __pcstackCOMMON:
   549     0070                     ?_MAX7219_init:
   550     0070                     ?_SPI_init:	
   551                           ; 1 bytes @ 0x0
   552                           
   553     0070                     ??_SPI_init:	
   554                           ; 1 bytes @ 0x0
   555                           
   556     0070                     ?_MAX7219_config:	
   557                           ; 1 bytes @ 0x0
   558                           
   559     0070                     ?_SPI_write:	
   560                           ; 1 bytes @ 0x0
   561                           
   562     0070                     ??_SPI_write:	
   563                           ; 1 bytes @ 0x0
   564                           
   565     0070                     ?_initGame:	
   566                           ; 1 bytes @ 0x0
   567                           
   568     0070                     ?_updateBallPosition:	
   569                           ; 1 bytes @ 0x0
   570                           
   571     0070                     ?_readButton0:	
   572                           ; 1 bytes @ 0x0
   573                           
   574     0070                     ?_readButton1:	
   575                           ; 2 bytes @ 0x0
   576                           
   577     0070                     ?_readButton2:	
   578                           ; 2 bytes @ 0x0
   579                           
   580     0070                     ?_readButton3:	
   581                           ; 2 bytes @ 0x0
   582                           
   583     0070                     MAX7219_config@chip:	
   584                           ; 2 bytes @ 0x0
   585                           
   586                           
   587                           ; 1 bytes @ 0x0
   588     0070                     	ds	2
   589     0072                     ??_readButton0:
   590     0072                     ??_readButton1:	
   591                           ; 1 bytes @ 0x2
   592                           
   593     0072                     ??_readButton2:	
   594                           ; 1 bytes @ 0x2
   595                           
   596     0072                     ??_readButton3:	
   597                           ; 1 bytes @ 0x2
   598                           
   599     0072                     SPI_write@send:	
   600                           ; 1 bytes @ 0x2
   601                           
   602                           
   603                           ; 1 bytes @ 0x2
   604     0072                     	ds	1
   605     0073                     SPI_write@Tx:
   606                           
   607                           ; 2 bytes @ 0x3
   608     0073                     	ds	2
   609     0075                     ?_MAX7219_write:
   610     0075                     MAX7219_write@data:	
   611                           ; 1 bytes @ 0x5
   612                           
   613                           
   614                           ; 1 bytes @ 0x5
   615     0075                     	ds	1
   616     0076                     ??_MAX7219_write:
   617     0076                     MAX7219_write@regName:	
   618                           ; 1 bytes @ 0x6
   619                           
   620                           
   621                           ; 1 bytes @ 0x6
   622     0076                     	ds	1
   623     0077                     ??_MAX7219_init:
   624     0077                     ??_MAX7219_config:	
   625                           ; 1 bytes @ 0x7
   626                           
   627     0077                     ??_initGame:	
   628                           ; 1 bytes @ 0x7
   629                           
   630     0077                     ?_buttonGoUp:	
   631                           ; 1 bytes @ 0x7
   632                           
   633     0077                     ?_buttonGoDown:	
   634                           ; 1 bytes @ 0x7
   635                           
   636     0077                     ??_updateBallPosition:	
   637                           ; 1 bytes @ 0x7
   638                           
   639     0077                     MAX7219_init@noChips:	
   640                           ; 1 bytes @ 0x7
   641                           
   642     0077                     buttonGoUp@player:	
   643                           ; 1 bytes @ 0x7
   644                           
   645     0077                     buttonGoDown@player:	
   646                           ; 2 bytes @ 0x7
   647                           
   648                           
   649                           ; 2 bytes @ 0x7
   650     0077                     	ds	2
   651     0079                     ??_buttonGoUp:
   652     0079                     ??_buttonGoDown:	
   653                           ; 1 bytes @ 0x9
   654                           
   655     0079                     ?_main:	
   656                           ; 1 bytes @ 0x9
   657                           
   658     0079                     main@argc:	
   659                           ; 2 bytes @ 0x9
   660                           
   661                           
   662                           ; 2 bytes @ 0x9
   663     0079                     	ds	2
   664     007B                     main@argv:
   665                           
   666                           ; 2 bytes @ 0xB
   667     007B                     	ds	2
   668                           
   669                           	psect	cstackBANK0
   670     0020                     __pcstackBANK0:
   671     0020                     updateBallPosition@ballXprev:
   672                           
   673                           ; 2 bytes @ 0x0
   674     0020                     	ds	2
   675     0022                     _updateBallPosition$63:
   676                           
   677                           ; 2 bytes @ 0x2
   678     0022                     	ds	2
   679     0024                     _updateBallPosition$64:
   680                           
   681                           ; 2 bytes @ 0x4
   682     0024                     	ds	2
   683     0026                     _updateBallPosition$65:
   684                           
   685                           ; 2 bytes @ 0x6
   686     0026                     	ds	2
   687     0028                     _updateBallPosition$66:
   688                           
   689                           ; 2 bytes @ 0x8
   690     0028                     	ds	2
   691     002A                     _updateBallPosition$67:
   692                           
   693                           ; 2 bytes @ 0xA
   694     002A                     	ds	2
   695     002C                     _updateBallPosition$68:
   696                           
   697                           ; 2 bytes @ 0xC
   698     002C                     	ds	2
   699     002E                     _updateBallPosition$69:
   700                           
   701                           ; 2 bytes @ 0xE
   702     002E                     	ds	2
   703     0030                     _updateBallPosition$70:
   704                           
   705                           ; 2 bytes @ 0x10
   706     0030                     	ds	2
   707     0032                     ??_main:
   708                           
   709                           ; 1 bytes @ 0x12
   710     0032                     	ds	3
   711                           
   712                           	psect	maintext
   713     0502                     __pmaintext:	
   714 ;;
   715 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   716 ;;
   717 ;; *************** function _main *****************
   718 ;; Defined at:
   719 ;;		line 241 in file "main.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;  argc            2    9[COMMON] int 
   722 ;;  argv            2   11[COMMON] PTR PTR unsigned char 
   723 ;; Auto vars:     Size  Location     Type
   724 ;;		None
   725 ;; Return value:  Size  Location     Type
   726 ;;                  2    9[COMMON] int 
   727 ;; Registers used:
   728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   729 ;; Tracked objects:
   730 ;;		On entry : B00/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   734 ;;      Params:         4       0       0       0       0
   735 ;;      Locals:         0       0       0       0       0
   736 ;;      Temps:          0       3       0       0       0
   737 ;;      Totals:         4       3       0       0       0
   738 ;;Total ram usage:        7 bytes
   739 ;; Hardware stack levels required when called: 4
   740 ;; This function calls:
   741 ;;		_MAX7219_init
   742 ;;		_buttonGoDown
   743 ;;		_buttonGoUp
   744 ;;		_initGame
   745 ;;		_readButton0
   746 ;;		_readButton1
   747 ;;		_readButton2
   748 ;;		_readButton3
   749 ;;		_updateBallPosition
   750 ;; This function is called by:
   751 ;;		Startup code after reset
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755     0502                     _main:	
   756                           ;psect for function _main
   757                           
   758     0502                     l1327:	
   759                           ;incstack = 0
   760                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   761                           
   762                           
   763                           ;main.c: 242:     TRISB = 0x0F;
   764     0502  300F               	movlw	15
   765     0503  1683               	bsf	3,5	;RP0=1, select bank1
   766     0504  1303               	bcf	3,6	;RP1=0, select bank1
   767     0505  0086               	movwf	6	;volatile
   768     0506                     l1329:
   769                           
   770                           ;main.c: 243:     TRISC = 0;
   771     0506  0187               	clrf	7	;volatile
   772     0507                     l1331:
   773                           
   774                           ;main.c: 245:         initGame();
   775     0507  120A  118A  24CC  120A  118A  	fcall	_initGame
   776     050C                     l1333:
   777                           
   778                           ;main.c: 246:         MAX7219_init(1);
   779     050C  3001               	movlw	1
   780     050D  120A  118A  2460  120A  118A  	fcall	_MAX7219_init
   781                           
   782                           ;main.c: 247:         while (!isScore) {
   783     0512  2D76               	goto	l1355
   784     0513                     l1335:
   785                           
   786                           ;main.c: 249:             if (readButton0() == 1) {
   787     0513  120A  118A  23FD  120A  118A  	fcall	_readButton0
   788     0518  0370               	decf	?_readButton0,w
   789     0519  0471               	iorwf	?_readButton0+1,w
   790     051A  1D03               	btfss	3,2
   791     051B  2D1D               	goto	u671
   792     051C  2D1E               	goto	u670
   793     051D                     u671:
   794     051D  2D27               	goto	l1339
   795     051E                     u670:
   796     051E                     l1337:
   797                           
   798                           ;main.c: 250:                 buttonGoUp(1);
   799     051E  3001               	movlw	1
   800     051F  00F7               	movwf	buttonGoUp@player
   801     0520  3000               	movlw	0
   802     0521  00F8               	movwf	buttonGoUp@player+1
   803     0522  120A  118A  2631  120A  118A  	fcall	_buttonGoUp
   804     0527                     l1339:
   805                           
   806                           ;main.c: 252:             if (readButton1() == 1) {
   807     0527  120A  118A  240C  120A  118A  	fcall	_readButton1
   808     052C  0370               	decf	?_readButton1,w
   809     052D  0471               	iorwf	?_readButton1+1,w
   810     052E  1D03               	btfss	3,2
   811     052F  2D31               	goto	u681
   812     0530  2D32               	goto	u680
   813     0531                     u681:
   814     0531  2D3B               	goto	l1343
   815     0532                     u680:
   816     0532                     l1341:
   817                           
   818                           ;main.c: 253:                 buttonGoDown(1);
   819     0532  3001               	movlw	1
   820     0533  00F7               	movwf	buttonGoDown@player
   821     0534  3000               	movlw	0
   822     0535  00F8               	movwf	buttonGoDown@player+1
   823     0536  120A  118A  2581  120A  118A  	fcall	_buttonGoDown
   824     053B                     l1343:
   825                           
   826                           ;main.c: 255:             if (readButton2() == 1) {
   827     053B  120A  118A  241B  120A  118A  	fcall	_readButton2
   828     0540  0370               	decf	?_readButton2,w
   829     0541  0471               	iorwf	?_readButton2+1,w
   830     0542  1D03               	btfss	3,2
   831     0543  2D45               	goto	u691
   832     0544  2D46               	goto	u690
   833     0545                     u691:
   834     0545  2D4F               	goto	l1347
   835     0546                     u690:
   836     0546                     l1345:
   837                           
   838                           ;main.c: 256:                 buttonGoUp(2);
   839     0546  3002               	movlw	2
   840     0547  00F7               	movwf	buttonGoUp@player
   841     0548  3000               	movlw	0
   842     0549  00F8               	movwf	buttonGoUp@player+1
   843     054A  120A  118A  2631  120A  118A  	fcall	_buttonGoUp
   844     054F                     l1347:
   845                           
   846                           ;main.c: 258:             if (readButton3() == 1) {
   847     054F  120A  118A  242A  120A  118A  	fcall	_readButton3
   848     0554  0370               	decf	?_readButton3,w
   849     0555  0471               	iorwf	?_readButton3+1,w
   850     0556  1D03               	btfss	3,2
   851     0557  2D59               	goto	u701
   852     0558  2D5A               	goto	u700
   853     0559                     u701:
   854     0559  2D63               	goto	l1351
   855     055A                     u700:
   856     055A                     l1349:
   857                           
   858                           ;main.c: 259:                 buttonGoDown(2);
   859     055A  3002               	movlw	2
   860     055B  00F7               	movwf	buttonGoDown@player
   861     055C  3000               	movlw	0
   862     055D  00F8               	movwf	buttonGoDown@player+1
   863     055E  120A  118A  2581  120A  118A  	fcall	_buttonGoDown
   864     0563                     l1351:
   865                           
   866                           ;main.c: 261:             _delay((unsigned long)((5)*(800000000/4000.0)));
   867     0563  3006               	movlw	6
   868     0564  1283               	bcf	3,5	;RP0=0, select bank0
   869     0565  1303               	bcf	3,6	;RP1=0, select bank0
   870     0566  00B4               	movwf	??_main+2
   871     0567  3013               	movlw	19
   872     0568  00B3               	movwf	??_main+1
   873     0569  30AD               	movlw	173
   874     056A  00B2               	movwf	??_main
   875     056B                     u737:
   876     056B  0BB2               	decfsz	??_main,f
   877     056C  2D6B               	goto	u737
   878     056D  0BB3               	decfsz	??_main+1,f
   879     056E  2D6B               	goto	u737
   880     056F  0BB4               	decfsz	??_main+2,f
   881     0570  2D6B               	goto	u737
   882     0571                     l1353:
   883                           
   884                           ;main.c: 262:             updateBallPosition();
   885     0571  120A  118A  26E1  120A  118A  	fcall	_updateBallPosition
   886     0576                     l1355:
   887                           
   888                           ;main.c: 247:         while (!isScore) {
   889     0576  1283               	bcf	3,5	;RP0=0, select bank0
   890     0577  1303               	bcf	3,6	;RP1=0, select bank0
   891     0578  083D               	movf	_isScore,w
   892     0579  1903               	btfsc	3,2
   893     057A  2D7C               	goto	u711
   894     057B  2D7D               	goto	u710
   895     057C                     u711:
   896     057C  2D13               	goto	l1335
   897     057D                     u710:
   898     057D  2D07               	goto	l1331
   899     057E  120A  118A  2800   	ljmp	start
   900     0581                     __end_of_main:
   901                           
   902                           	psect	text1
   903     06E1                     __ptext1:	
   904 ;; *************** function _updateBallPosition *****************
   905 ;; Defined at:
   906 ;;		line 198 in file "main.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;		None
   909 ;; Auto vars:     Size  Location     Type
   910 ;;  ballXprev       2    0[BANK0 ] int 
   911 ;; Return value:  Size  Location     Type
   912 ;;                  1    wreg      void 
   913 ;; Registers used:
   914 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   920 ;;      Params:         0       0       0       0       0
   921 ;;      Locals:         0      18       0       0       0
   922 ;;      Temps:          0       0       0       0       0
   923 ;;      Totals:         0      18       0       0       0
   924 ;;Total ram usage:       18 bytes
   925 ;; Hardware stack levels used: 1
   926 ;; Hardware stack levels required when called: 2
   927 ;; This function calls:
   928 ;;		_MAX7219_write
   929 ;; This function is called by:
   930 ;;		_main
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934     06E1                     _updateBallPosition:	
   935                           ;psect for function _updateBallPosition
   936                           
   937     06E1                     l1249:	
   938                           ;incstack = 0
   939                           ; Regs used in _updateBallPosition: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   940                           
   941                           
   942                           ;main.c: 199:     int ballXprev = ballX;
   943     06E1  1283               	bcf	3,5	;RP0=0, select bank0
   944     06E2  1303               	bcf	3,6	;RP1=0, select bank0
   945     06E3  0836               	movf	_ballX+1,w
   946     06E4  00A1               	movwf	updateBallPosition@ballXprev+1
   947     06E5  0835               	movf	_ballX,w
   948     06E6  00A0               	movwf	updateBallPosition@ballXprev
   949     06E7                     l1251:
   950                           
   951                           ;main.c: 201:     if (ballX == 2) {
   952     06E7  3002               	movlw	2
   953     06E8  0635               	xorwf	_ballX,w
   954     06E9  0436               	iorwf	_ballX+1,w
   955     06EA  1D03               	btfss	3,2
   956     06EB  2EED               	goto	u441
   957     06EC  2EEE               	goto	u440
   958     06ED                     u441:
   959     06ED  2EFA               	goto	l1257
   960     06EE                     u440:
   961     06EE                     l1253:
   962                           
   963                           ;main.c: 202:         if (p2State & ballYState) {
   964     06EE  083C               	movf	_p2State,w
   965     06EF  053B               	andwf	_ballYState,w
   966     06F0  1903               	btfsc	3,2
   967     06F1  2EF3               	goto	u451
   968     06F2  2EF4               	goto	u450
   969     06F3                     u451:
   970     06F3  2F08               	goto	l1263
   971     06F4                     u450:
   972     06F4                     l1255:
   973                           
   974                           ;main.c: 203:             ballDirX = -ballDirX;
   975     06F4  09B9               	comf	_ballDirX,f
   976     06F5  09BA               	comf	_ballDirX+1,f
   977     06F6  0AB9               	incf	_ballDirX,f
   978     06F7  1903               	skipnz
   979     06F8  0ABA               	incf	_ballDirX+1,f
   980     06F9  2F08               	goto	l1263
   981     06FA                     l1257:
   982     06FA  3007               	movlw	7
   983     06FB  0635               	xorwf	_ballX,w
   984     06FC  0436               	iorwf	_ballX+1,w
   985     06FD  1D03               	btfss	3,2
   986     06FE  2F00               	goto	u461
   987     06FF  2F01               	goto	u460
   988     0700                     u461:
   989     0700  2F08               	goto	l1263
   990     0701                     u460:
   991     0701                     l1259:
   992                           
   993                           ;main.c: 207:         if (p1State & ballYState) {
   994     0701  087D               	movf	_p1State,w
   995     0702  053B               	andwf	_ballYState,w
   996     0703  1903               	btfsc	3,2
   997     0704  2F06               	goto	u471
   998     0705  2F07               	goto	u470
   999     0706                     u471:
  1000     0706  2F08               	goto	l1263
  1001     0707                     u470:
  1002     0707  2EF4               	goto	l1255
  1003     0708                     l1263:
  1004                           
  1005                           ;main.c: 211:     ballX += ballDirX;
  1006     0708  0839               	movf	_ballDirX,w
  1007     0709  07B5               	addwf	_ballX,f
  1008     070A  1803               	skipnc
  1009     070B  0AB6               	incf	_ballX+1,f
  1010     070C  083A               	movf	_ballDirX+1,w
  1011     070D  07B6               	addwf	_ballX+1,f
  1012     070E                     l1265:
  1013                           
  1014                           ;main.c: 213:     if ((ballYState & 0b10000000) == 0b10000000) {
  1015     070E  1FBB               	btfss	_ballYState,7
  1016     070F  2F11               	goto	u481
  1017     0710  2F12               	goto	u480
  1018     0711                     u481:
  1019     0711  2F28               	goto	l97
  1020     0712                     u480:
  1021     0712                     l1267:
  1022                           
  1023                           ;main.c: 214:         ballYState = (ballDirY == 1) ? 0b00000001 : 0b10000000;
  1024     0712  0337               	decf	_ballDirY,w
  1025     0713  0438               	iorwf	_ballDirY+1,w
  1026     0714  1903               	btfsc	3,2
  1027     0715  2F17               	goto	u491
  1028     0716  2F18               	goto	u490
  1029     0717                     u491:
  1030     0717  2F1D               	goto	l1271
  1031     0718                     u490:
  1032     0718                     l1269:
  1033     0718  3080               	movlw	128
  1034     0719  00A2               	movwf	_updateBallPosition$63
  1035     071A  3000               	movlw	0
  1036     071B  00A3               	movwf	_updateBallPosition$63+1
  1037     071C  2F21               	goto	l101
  1038     071D                     l1271:
  1039     071D  3001               	movlw	1
  1040     071E  00A2               	movwf	_updateBallPosition$63
  1041     071F  3000               	movlw	0
  1042     0720  00A3               	movwf	_updateBallPosition$63+1
  1043     0721                     l101:
  1044     0721  0822               	movf	_updateBallPosition$63,w
  1045     0722  00BB               	movwf	_ballYState
  1046                           
  1047                           ;main.c: 215:         ballDirY = 1;
  1048     0723  3001               	movlw	1
  1049     0724  00B7               	movwf	_ballDirY
  1050     0725  3000               	movlw	0
  1051     0726  00B8               	movwf	_ballDirY+1
  1052                           
  1053                           ;main.c: 216:     } else if ((ballYState & 0b00000001) == 0b00000001) {
  1054     0727  2FC6               	goto	l1315
  1055     0728                     l97:
  1056     0728  1C3B               	btfss	_ballYState,0
  1057     0729  2F2B               	goto	u501
  1058     072A  2F2C               	goto	u500
  1059     072B                     u501:
  1060     072B  2F3E               	goto	l103
  1061     072C                     u500:
  1062     072C                     l1273:
  1063                           
  1064                           ;main.c: 217:         ballYState = (ballDirY == 1) ? 0b00000010 : 0b10000000;
  1065     072C  0337               	decf	_ballDirY,w
  1066     072D  0438               	iorwf	_ballDirY+1,w
  1067     072E  1903               	btfsc	3,2
  1068     072F  2F31               	goto	u511
  1069     0730  2F32               	goto	u510
  1070     0731                     u511:
  1071     0731  2F37               	goto	l1277
  1072     0732                     u510:
  1073     0732                     l1275:
  1074     0732  3080               	movlw	128
  1075     0733  00A4               	movwf	_updateBallPosition$64
  1076     0734  3000               	movlw	0
  1077     0735  00A5               	movwf	_updateBallPosition$64+1
  1078     0736  2F3B               	goto	l107
  1079     0737                     l1277:
  1080     0737  3002               	movlw	2
  1081     0738  00A4               	movwf	_updateBallPosition$64
  1082     0739  3000               	movlw	0
  1083     073A  00A5               	movwf	_updateBallPosition$64+1
  1084     073B                     l107:
  1085     073B  0824               	movf	_updateBallPosition$64,w
  1086     073C  00BB               	movwf	_ballYState
  1087                           
  1088                           ;main.c: 218:     } else if ((ballYState & 0b00000010) == 0b00000010) {
  1089     073D  2FC6               	goto	l1315
  1090     073E                     l103:
  1091     073E  1CBB               	btfss	_ballYState,1
  1092     073F  2F41               	goto	u521
  1093     0740  2F42               	goto	u520
  1094     0741                     u521:
  1095     0741  2F54               	goto	l109
  1096     0742                     u520:
  1097     0742                     l1279:
  1098                           
  1099                           ;main.c: 219:         ballYState = (ballDirY == 1) ? 0b00000100 : 0b00000001;
  1100     0742  0337               	decf	_ballDirY,w
  1101     0743  0438               	iorwf	_ballDirY+1,w
  1102     0744  1903               	btfsc	3,2
  1103     0745  2F47               	goto	u531
  1104     0746  2F48               	goto	u530
  1105     0747                     u531:
  1106     0747  2F4D               	goto	l1283
  1107     0748                     u530:
  1108     0748                     l1281:
  1109     0748  3001               	movlw	1
  1110     0749  00A6               	movwf	_updateBallPosition$65
  1111     074A  3000               	movlw	0
  1112     074B  00A7               	movwf	_updateBallPosition$65+1
  1113     074C  2F51               	goto	l113
  1114     074D                     l1283:
  1115     074D  3004               	movlw	4
  1116     074E  00A6               	movwf	_updateBallPosition$65
  1117     074F  3000               	movlw	0
  1118     0750  00A7               	movwf	_updateBallPosition$65+1
  1119     0751                     l113:
  1120     0751  0826               	movf	_updateBallPosition$65,w
  1121     0752  00BB               	movwf	_ballYState
  1122                           
  1123                           ;main.c: 220:     } else if ((ballYState & 0b00000100) == 0b00000100) {
  1124     0753  2FC6               	goto	l1315
  1125     0754                     l109:
  1126     0754  1D3B               	btfss	_ballYState,2
  1127     0755  2F57               	goto	u541
  1128     0756  2F58               	goto	u540
  1129     0757                     u541:
  1130     0757  2F6A               	goto	l115
  1131     0758                     u540:
  1132     0758                     l1285:
  1133                           
  1134                           ;main.c: 221:         ballYState = (ballDirY == 1) ? 0b00001000 : 0b00000010;
  1135     0758  0337               	decf	_ballDirY,w
  1136     0759  0438               	iorwf	_ballDirY+1,w
  1137     075A  1903               	btfsc	3,2
  1138     075B  2F5D               	goto	u551
  1139     075C  2F5E               	goto	u550
  1140     075D                     u551:
  1141     075D  2F63               	goto	l1289
  1142     075E                     u550:
  1143     075E                     l1287:
  1144     075E  3002               	movlw	2
  1145     075F  00A8               	movwf	_updateBallPosition$66
  1146     0760  3000               	movlw	0
  1147     0761  00A9               	movwf	_updateBallPosition$66+1
  1148     0762  2F67               	goto	l119
  1149     0763                     l1289:
  1150     0763  3008               	movlw	8
  1151     0764  00A8               	movwf	_updateBallPosition$66
  1152     0765  3000               	movlw	0
  1153     0766  00A9               	movwf	_updateBallPosition$66+1
  1154     0767                     l119:
  1155     0767  0828               	movf	_updateBallPosition$66,w
  1156     0768  00BB               	movwf	_ballYState
  1157                           
  1158                           ;main.c: 222:     } else if ((ballYState & 0b00001000) == 0b00001000) {
  1159     0769  2FC6               	goto	l1315
  1160     076A                     l115:
  1161     076A  1DBB               	btfss	_ballYState,3
  1162     076B  2F6D               	goto	u561
  1163     076C  2F6E               	goto	u560
  1164     076D                     u561:
  1165     076D  2F80               	goto	l121
  1166     076E                     u560:
  1167     076E                     l1291:
  1168                           
  1169                           ;main.c: 223:         ballYState = (ballDirY == 1) ? 0b00010000 : 0b00000100;
  1170     076E  0337               	decf	_ballDirY,w
  1171     076F  0438               	iorwf	_ballDirY+1,w
  1172     0770  1903               	btfsc	3,2
  1173     0771  2F73               	goto	u571
  1174     0772  2F74               	goto	u570
  1175     0773                     u571:
  1176     0773  2F79               	goto	l1295
  1177     0774                     u570:
  1178     0774                     l1293:
  1179     0774  3004               	movlw	4
  1180     0775  00AA               	movwf	_updateBallPosition$67
  1181     0776  3000               	movlw	0
  1182     0777  00AB               	movwf	_updateBallPosition$67+1
  1183     0778  2F7D               	goto	l125
  1184     0779                     l1295:
  1185     0779  3010               	movlw	16
  1186     077A  00AA               	movwf	_updateBallPosition$67
  1187     077B  3000               	movlw	0
  1188     077C  00AB               	movwf	_updateBallPosition$67+1
  1189     077D                     l125:
  1190     077D  082A               	movf	_updateBallPosition$67,w
  1191     077E  00BB               	movwf	_ballYState
  1192                           
  1193                           ;main.c: 224:     } else if ((ballYState & 0b00010000) == 0b00010000) {
  1194     077F  2FC6               	goto	l1315
  1195     0780                     l121:
  1196     0780  1E3B               	btfss	_ballYState,4
  1197     0781  2F83               	goto	u581
  1198     0782  2F84               	goto	u580
  1199     0783                     u581:
  1200     0783  2F96               	goto	l127
  1201     0784                     u580:
  1202     0784                     l1297:
  1203                           
  1204                           ;main.c: 225:         ballYState = (ballDirY == 1) ? 0b00100000 : 0b00001000;
  1205     0784  0337               	decf	_ballDirY,w
  1206     0785  0438               	iorwf	_ballDirY+1,w
  1207     0786  1903               	btfsc	3,2
  1208     0787  2F89               	goto	u591
  1209     0788  2F8A               	goto	u590
  1210     0789                     u591:
  1211     0789  2F8F               	goto	l1301
  1212     078A                     u590:
  1213     078A                     l1299:
  1214     078A  3008               	movlw	8
  1215     078B  00AC               	movwf	_updateBallPosition$68
  1216     078C  3000               	movlw	0
  1217     078D  00AD               	movwf	_updateBallPosition$68+1
  1218     078E  2F93               	goto	l131
  1219     078F                     l1301:
  1220     078F  3020               	movlw	32
  1221     0790  00AC               	movwf	_updateBallPosition$68
  1222     0791  3000               	movlw	0
  1223     0792  00AD               	movwf	_updateBallPosition$68+1
  1224     0793                     l131:
  1225     0793  082C               	movf	_updateBallPosition$68,w
  1226     0794  00BB               	movwf	_ballYState
  1227                           
  1228                           ;main.c: 226:     } else if ((ballYState & 0b00100000) == 0b00100000) {
  1229     0795  2FC6               	goto	l1315
  1230     0796                     l127:
  1231     0796  1EBB               	btfss	_ballYState,5
  1232     0797  2F99               	goto	u601
  1233     0798  2F9A               	goto	u600
  1234     0799                     u601:
  1235     0799  2FAC               	goto	l133
  1236     079A                     u600:
  1237     079A                     l1303:
  1238                           
  1239                           ;main.c: 227:         ballYState = (ballDirY == 1) ? 0b01000000 : 0b00010000;
  1240     079A  0337               	decf	_ballDirY,w
  1241     079B  0438               	iorwf	_ballDirY+1,w
  1242     079C  1903               	btfsc	3,2
  1243     079D  2F9F               	goto	u611
  1244     079E  2FA0               	goto	u610
  1245     079F                     u611:
  1246     079F  2FA5               	goto	l1307
  1247     07A0                     u610:
  1248     07A0                     l1305:
  1249     07A0  3010               	movlw	16
  1250     07A1  00AE               	movwf	_updateBallPosition$69
  1251     07A2  3000               	movlw	0
  1252     07A3  00AF               	movwf	_updateBallPosition$69+1
  1253     07A4  2FA9               	goto	l137
  1254     07A5                     l1307:
  1255     07A5  3040               	movlw	64
  1256     07A6  00AE               	movwf	_updateBallPosition$69
  1257     07A7  3000               	movlw	0
  1258     07A8  00AF               	movwf	_updateBallPosition$69+1
  1259     07A9                     l137:
  1260     07A9  082E               	movf	_updateBallPosition$69,w
  1261     07AA  00BB               	movwf	_ballYState
  1262                           
  1263                           ;main.c: 228:     } else if ((ballYState & 0b01000000) == 0b01000000) {
  1264     07AB  2FC6               	goto	l1315
  1265     07AC                     l133:
  1266     07AC  1F3B               	btfss	_ballYState,6
  1267     07AD  2FAF               	goto	u621
  1268     07AE  2FB0               	goto	u620
  1269     07AF                     u621:
  1270     07AF  2FC6               	goto	l126
  1271     07B0                     u620:
  1272     07B0                     l1309:
  1273                           
  1274                           ;main.c: 229:         ballYState = (ballDirY == 1) ? 0b01000000 : 0b00100000;
  1275     07B0  0337               	decf	_ballDirY,w
  1276     07B1  0438               	iorwf	_ballDirY+1,w
  1277     07B2  1903               	btfsc	3,2
  1278     07B3  2FB5               	goto	u631
  1279     07B4  2FB6               	goto	u630
  1280     07B5                     u631:
  1281     07B5  2FBB               	goto	l1313
  1282     07B6                     u630:
  1283     07B6                     l1311:
  1284     07B6  3020               	movlw	32
  1285     07B7  00B0               	movwf	_updateBallPosition$70
  1286     07B8  3000               	movlw	0
  1287     07B9  00B1               	movwf	_updateBallPosition$70+1
  1288     07BA  2FBF               	goto	l143
  1289     07BB                     l1313:
  1290     07BB  3040               	movlw	64
  1291     07BC  00B0               	movwf	_updateBallPosition$70
  1292     07BD  3000               	movlw	0
  1293     07BE  00B1               	movwf	_updateBallPosition$70+1
  1294     07BF                     l143:
  1295     07BF  0830               	movf	_updateBallPosition$70,w
  1296     07C0  00BB               	movwf	_ballYState
  1297                           
  1298                           ;main.c: 230:         ballDirY = -1;
  1299     07C1  30FF               	movlw	255
  1300     07C2  00B7               	movwf	_ballDirY
  1301     07C3  30FF               	movlw	255
  1302     07C4  00B8               	movwf	_ballDirY+1
  1303     07C5  2FC6               	goto	l1315
  1304     07C6                     l126:
  1305     07C6                     l1315:
  1306                           
  1307                           ;main.c: 233:     if (ballX == 1 || ballX == 8) {
  1308     07C6  0335               	decf	_ballX,w
  1309     07C7  0436               	iorwf	_ballX+1,w
  1310     07C8  1903               	btfsc	3,2
  1311     07C9  2FCB               	goto	u641
  1312     07CA  2FCC               	goto	u640
  1313     07CB                     u641:
  1314     07CB  2FD3               	goto	l146
  1315     07CC                     u640:
  1316     07CC                     l1317:
  1317     07CC  3008               	movlw	8
  1318     07CD  0635               	xorwf	_ballX,w
  1319     07CE  0436               	iorwf	_ballX+1,w
  1320     07CF  1D03               	btfss	3,2
  1321     07D0  2FD2               	goto	u651
  1322     07D1  2FD3               	goto	u650
  1323     07D2                     u651:
  1324     07D2  2FD5               	goto	l1319
  1325     07D3                     u650:
  1326     07D3                     l146:
  1327                           
  1328                           ;main.c: 234:         isScore = 1;
  1329     07D3  01BD               	clrf	_isScore
  1330     07D4  0ABD               	incf	_isScore,f
  1331     07D5                     l1319:
  1332                           
  1333                           ;main.c: 237:     MAX7219_write(ballXprev, 0b00000000);
  1334     07D5  01F5               	clrf	MAX7219_write@data
  1335     07D6  0820               	movf	updateBallPosition@ballXprev,w
  1336     07D7  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  1337                           
  1338                           ;main.c: 238:     MAX7219_write(ballX, ballYState);
  1339     07DC  1283               	bcf	3,5	;RP0=0, select bank0
  1340     07DD  1303               	bcf	3,6	;RP1=0, select bank0
  1341     07DE  083B               	movf	_ballYState,w
  1342     07DF  00F5               	movwf	MAX7219_write@data
  1343     07E0  0835               	movf	_ballX,w
  1344     07E1  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  1345     07E6                     l147:
  1346     07E6  0008               	return
  1347     07E7                     __end_of_updateBallPosition:
  1348                           
  1349                           	psect	text2
  1350     042A                     __ptext2:	
  1351 ;; *************** function _readButton3 *****************
  1352 ;; Defined at:
  1353 ;;		line 78 in file "main.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;		None
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;		None
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  2    0[COMMON] int 
  1360 ;; Registers used:
  1361 ;;		wreg, status,0
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1367 ;;      Params:         2       0       0       0       0
  1368 ;;      Locals:         0       0       0       0       0
  1369 ;;      Temps:          2       0       0       0       0
  1370 ;;      Totals:         4       0       0       0       0
  1371 ;;Total ram usage:        4 bytes
  1372 ;; Hardware stack levels used: 1
  1373 ;; This function calls:
  1374 ;;		Nothing
  1375 ;; This function is called by:
  1376 ;;		_main
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380     042A                     _readButton3:	
  1381                           ;psect for function _readButton3
  1382                           
  1383     042A                     l1125:	
  1384                           ;incstack = 0
  1385                           ; Regs used in _readButton3: [wreg+status,0]
  1386                           
  1387                           
  1388                           ;main.c: 79:     return RB3;
  1389     042A  1003               	clrc
  1390     042B  1283               	bcf	3,5	;RP0=0, select bank0
  1391     042C  1303               	bcf	3,6	;RP1=0, select bank0
  1392     042D  1986               	btfsc	6,3	;volatile
  1393     042E  1403               	setc
  1394     042F  3000               	movlw	0
  1395     0430  1803               	skipnc
  1396     0431  3001               	movlw	1
  1397     0432  00F2               	movwf	??_readButton3
  1398     0433  01F3               	clrf	??_readButton3+1
  1399     0434  0872               	movf	??_readButton3,w
  1400     0435  00F0               	movwf	?_readButton3
  1401     0436  0873               	movf	??_readButton3+1,w
  1402     0437  00F1               	movwf	?_readButton3+1
  1403     0438                     l47:
  1404     0438  0008               	return
  1405     0439                     __end_of_readButton3:
  1406                           
  1407                           	psect	text3
  1408     041B                     __ptext3:	
  1409 ;; *************** function _readButton2 *****************
  1410 ;; Defined at:
  1411 ;;		line 74 in file "main.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;		None
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;		None
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  2    0[COMMON] int 
  1418 ;; Registers used:
  1419 ;;		wreg, status,0
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1425 ;;      Params:         2       0       0       0       0
  1426 ;;      Locals:         0       0       0       0       0
  1427 ;;      Temps:          2       0       0       0       0
  1428 ;;      Totals:         4       0       0       0       0
  1429 ;;Total ram usage:        4 bytes
  1430 ;; Hardware stack levels used: 1
  1431 ;; This function calls:
  1432 ;;		Nothing
  1433 ;; This function is called by:
  1434 ;;		_main
  1435 ;; This function uses a non-reentrant model
  1436 ;;
  1437                           
  1438     041B                     _readButton2:	
  1439                           ;psect for function _readButton2
  1440                           
  1441     041B                     l1121:	
  1442                           ;incstack = 0
  1443                           ; Regs used in _readButton2: [wreg+status,0]
  1444                           
  1445                           
  1446                           ;main.c: 75:     return RB2;
  1447     041B  1003               	clrc
  1448     041C  1283               	bcf	3,5	;RP0=0, select bank0
  1449     041D  1303               	bcf	3,6	;RP1=0, select bank0
  1450     041E  1906               	btfsc	6,2	;volatile
  1451     041F  1403               	setc
  1452     0420  3000               	movlw	0
  1453     0421  1803               	skipnc
  1454     0422  3001               	movlw	1
  1455     0423  00F2               	movwf	??_readButton2
  1456     0424  01F3               	clrf	??_readButton2+1
  1457     0425  0872               	movf	??_readButton2,w
  1458     0426  00F0               	movwf	?_readButton2
  1459     0427  0873               	movf	??_readButton2+1,w
  1460     0428  00F1               	movwf	?_readButton2+1
  1461     0429                     l44:
  1462     0429  0008               	return
  1463     042A                     __end_of_readButton2:
  1464                           
  1465                           	psect	text4
  1466     040C                     __ptext4:	
  1467 ;; *************** function _readButton1 *****************
  1468 ;; Defined at:
  1469 ;;		line 70 in file "main.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;		None
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;		None
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  2    0[COMMON] int 
  1476 ;; Registers used:
  1477 ;;		wreg, status,0
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1483 ;;      Params:         2       0       0       0       0
  1484 ;;      Locals:         0       0       0       0       0
  1485 ;;      Temps:          2       0       0       0       0
  1486 ;;      Totals:         4       0       0       0       0
  1487 ;;Total ram usage:        4 bytes
  1488 ;; Hardware stack levels used: 1
  1489 ;; This function calls:
  1490 ;;		Nothing
  1491 ;; This function is called by:
  1492 ;;		_main
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496     040C                     _readButton1:	
  1497                           ;psect for function _readButton1
  1498                           
  1499     040C                     l1117:	
  1500                           ;incstack = 0
  1501                           ; Regs used in _readButton1: [wreg+status,0]
  1502                           
  1503                           
  1504                           ;main.c: 71:     return RB1;
  1505     040C  1003               	clrc
  1506     040D  1283               	bcf	3,5	;RP0=0, select bank0
  1507     040E  1303               	bcf	3,6	;RP1=0, select bank0
  1508     040F  1886               	btfsc	6,1	;volatile
  1509     0410  1403               	setc
  1510     0411  3000               	movlw	0
  1511     0412  1803               	skipnc
  1512     0413  3001               	movlw	1
  1513     0414  00F2               	movwf	??_readButton1
  1514     0415  01F3               	clrf	??_readButton1+1
  1515     0416  0872               	movf	??_readButton1,w
  1516     0417  00F0               	movwf	?_readButton1
  1517     0418  0873               	movf	??_readButton1+1,w
  1518     0419  00F1               	movwf	?_readButton1+1
  1519     041A                     l41:
  1520     041A  0008               	return
  1521     041B                     __end_of_readButton1:
  1522                           
  1523                           	psect	text5
  1524     03FD                     __ptext5:	
  1525 ;; *************** function _readButton0 *****************
  1526 ;; Defined at:
  1527 ;;		line 66 in file "main.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;		None
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;		None
  1532 ;; Return value:  Size  Location     Type
  1533 ;;                  2    0[COMMON] int 
  1534 ;; Registers used:
  1535 ;;		wreg, status,0
  1536 ;; Tracked objects:
  1537 ;;		On entry : 0/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1541 ;;      Params:         2       0       0       0       0
  1542 ;;      Locals:         0       0       0       0       0
  1543 ;;      Temps:          2       0       0       0       0
  1544 ;;      Totals:         4       0       0       0       0
  1545 ;;Total ram usage:        4 bytes
  1546 ;; Hardware stack levels used: 1
  1547 ;; This function calls:
  1548 ;;		Nothing
  1549 ;; This function is called by:
  1550 ;;		_main
  1551 ;; This function uses a non-reentrant model
  1552 ;;
  1553                           
  1554     03FD                     _readButton0:	
  1555                           ;psect for function _readButton0
  1556                           
  1557     03FD                     l1113:	
  1558                           ;incstack = 0
  1559                           ; Regs used in _readButton0: [wreg+status,0]
  1560                           
  1561                           
  1562                           ;main.c: 67:     return RB0;
  1563     03FD  1003               	clrc
  1564     03FE  1283               	bcf	3,5	;RP0=0, select bank0
  1565     03FF  1303               	bcf	3,6	;RP1=0, select bank0
  1566     0400  1806               	btfsc	6,0	;volatile
  1567     0401  1403               	setc
  1568     0402  3000               	movlw	0
  1569     0403  1803               	skipnc
  1570     0404  3001               	movlw	1
  1571     0405  00F2               	movwf	??_readButton0
  1572     0406  01F3               	clrf	??_readButton0+1
  1573     0407  0872               	movf	??_readButton0,w
  1574     0408  00F0               	movwf	?_readButton0
  1575     0409  0873               	movf	??_readButton0+1,w
  1576     040A  00F1               	movwf	?_readButton0+1
  1577     040B                     l38:
  1578     040B  0008               	return
  1579     040C                     __end_of_readButton0:
  1580                           
  1581                           	psect	text6
  1582     04CC                     __ptext6:	
  1583 ;; *************** function _initGame *****************
  1584 ;; Defined at:
  1585 ;;		line 53 in file "main.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;		None
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;		None
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  1    wreg      void 
  1592 ;; Registers used:
  1593 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1599 ;;      Params:         0       0       0       0       0
  1600 ;;      Locals:         0       0       0       0       0
  1601 ;;      Temps:          0       0       0       0       0
  1602 ;;      Totals:         0       0       0       0       0
  1603 ;;Total ram usage:        0 bytes
  1604 ;; Hardware stack levels used: 1
  1605 ;; Hardware stack levels required when called: 2
  1606 ;; This function calls:
  1607 ;;		_MAX7219_write
  1608 ;; This function is called by:
  1609 ;;		_main
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613     04CC                     _initGame:	
  1614                           ;psect for function _initGame
  1615                           
  1616     04CC                     l1099:	
  1617                           ;incstack = 0
  1618                           ; Regs used in _initGame: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1619                           
  1620                           
  1621                           ;main.c: 54:     ballX = 4;
  1622     04CC  3004               	movlw	4
  1623     04CD  1283               	bcf	3,5	;RP0=0, select bank0
  1624     04CE  1303               	bcf	3,6	;RP1=0, select bank0
  1625     04CF  00B5               	movwf	_ballX
  1626     04D0  3000               	movlw	0
  1627     04D1  00B6               	movwf	_ballX+1
  1628                           
  1629                           ;main.c: 55:     ballYState = 0b00001000;
  1630     04D2  3008               	movlw	8
  1631     04D3  00BB               	movwf	_ballYState
  1632     04D4                     l1101:
  1633                           
  1634                           ;main.c: 57:     MAX7219_write(8, 0b00000000);
  1635     04D4  01F5               	clrf	MAX7219_write@data
  1636     04D5  3008               	movlw	8
  1637     04D6  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  1638     04DB                     l1103:
  1639                           
  1640                           ;main.c: 58:     MAX7219_write(1, 0b00000000);
  1641     04DB  01F5               	clrf	MAX7219_write@data
  1642     04DC  3001               	movlw	1
  1643     04DD  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  1644     04E2                     l1105:
  1645                           
  1646                           ;main.c: 60:     MAX7219_write(7, p1State);
  1647     04E2  087D               	movf	_p1State,w
  1648     04E3  00F5               	movwf	MAX7219_write@data
  1649     04E4  3007               	movlw	7
  1650     04E5  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  1651     04EA                     l1107:
  1652                           
  1653                           ;main.c: 61:     MAX7219_write(2, p2State);
  1654     04EA  1283               	bcf	3,5	;RP0=0, select bank0
  1655     04EB  1303               	bcf	3,6	;RP1=0, select bank0
  1656     04EC  083C               	movf	_p2State,w
  1657     04ED  00F5               	movwf	MAX7219_write@data
  1658     04EE  3002               	movlw	2
  1659     04EF  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  1660     04F4                     l1109:
  1661                           
  1662                           ;main.c: 62:     MAX7219_write(ballX, ballYState);
  1663     04F4  1283               	bcf	3,5	;RP0=0, select bank0
  1664     04F5  1303               	bcf	3,6	;RP1=0, select bank0
  1665     04F6  083B               	movf	_ballYState,w
  1666     04F7  00F5               	movwf	MAX7219_write@data
  1667     04F8  0835               	movf	_ballX,w
  1668     04F9  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  1669     04FE                     l1111:
  1670                           
  1671                           ;main.c: 63:     isScore = 0;
  1672     04FE  1283               	bcf	3,5	;RP0=0, select bank0
  1673     04FF  1303               	bcf	3,6	;RP1=0, select bank0
  1674     0500  01BD               	clrf	_isScore
  1675     0501                     l35:
  1676     0501  0008               	return
  1677     0502                     __end_of_initGame:
  1678                           
  1679                           	psect	text7
  1680     0631                     __ptext7:	
  1681 ;; *************** function _buttonGoUp *****************
  1682 ;; Defined at:
  1683 ;;		line 82 in file "main.c"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;  player          2    7[COMMON] int 
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;		None
  1688 ;; Return value:  Size  Location     Type
  1689 ;;                  1    wreg      void 
  1690 ;; Registers used:
  1691 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1692 ;; Tracked objects:
  1693 ;;		On entry : 0/0
  1694 ;;		On exit  : 0/0
  1695 ;;		Unchanged: 0/0
  1696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1697 ;;      Params:         2       0       0       0       0
  1698 ;;      Locals:         0       0       0       0       0
  1699 ;;      Temps:          0       0       0       0       0
  1700 ;;      Totals:         2       0       0       0       0
  1701 ;;Total ram usage:        2 bytes
  1702 ;; Hardware stack levels used: 1
  1703 ;; Hardware stack levels required when called: 2
  1704 ;; This function calls:
  1705 ;;		_MAX7219_write
  1706 ;; This function is called by:
  1707 ;;		_main
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711     0631                     _buttonGoUp:	
  1712                           ;psect for function _buttonGoUp
  1713                           
  1714     0631                     l1129:	
  1715                           ;incstack = 0
  1716                           ; Regs used in _buttonGoUp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1717                           
  1718                           
  1719                           ;main.c: 83:     if (player == 1) {
  1720     0631  0377               	decf	buttonGoUp@player,w
  1721     0632  0478               	iorwf	buttonGoUp@player+1,w
  1722     0633  1D03               	btfss	3,2
  1723     0634  2E36               	goto	u421
  1724     0635  2E37               	goto	u420
  1725     0636                     u421:
  1726     0636  2ECD               	goto	l1187
  1727     0637                     u420:
  1728     0637  2E7A               	goto	l1159
  1729     0638                     l1133:
  1730                           
  1731                           ;main.c: 86:                 p1State = 0b00001111;
  1732     0638  300F               	movlw	15
  1733     0639  00FD               	movwf	_p1State
  1734     063A                     l1135:
  1735                           
  1736                           ;main.c: 87:                 MAX7219_write(7, p1State);
  1737     063A  087D               	movf	_p1State,w
  1738     063B  00F5               	movwf	MAX7219_write@data
  1739     063C  3007               	movlw	7
  1740     063D  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  1741                           
  1742                           ;main.c: 88:                 break;
  1743     0642  2EE0               	goto	l68
  1744     0643                     l1137:
  1745                           
  1746                           ;main.c: 90:                 p1State = 0b00011110;
  1747     0643  301E               	movlw	30
  1748     0644  00FD               	movwf	_p1State
  1749     0645                     l1139:
  1750                           
  1751                           ;main.c: 91:                 MAX7219_write(7, p1State);
  1752     0645  087D               	movf	_p1State,w
  1753     0646  00F5               	movwf	MAX7219_write@data
  1754     0647  3007               	movlw	7
  1755     0648  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  1756                           
  1757                           ;main.c: 92:                 break;
  1758     064D  2EE0               	goto	l68
  1759     064E                     l1141:
  1760                           
  1761                           ;main.c: 94:                 p1State = 0b00111100;
  1762     064E  303C               	movlw	60
  1763     064F  00FD               	movwf	_p1State
  1764     0650                     l1143:
  1765                           
  1766                           ;main.c: 95:                 MAX7219_write(7, p1State);
  1767     0650  087D               	movf	_p1State,w
  1768     0651  00F5               	movwf	MAX7219_write@data
  1769     0652  3007               	movlw	7
  1770     0653  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  1771                           
  1772                           ;main.c: 96:                 break;
  1773     0658  2EE0               	goto	l68
  1774     0659                     l1145:
  1775                           
  1776                           ;main.c: 98:                 p1State = 0b01111000;
  1777     0659  3078               	movlw	120
  1778     065A  00FD               	movwf	_p1State
  1779     065B                     l1147:
  1780                           
  1781                           ;main.c: 99:                 MAX7219_write(7, p1State);
  1782     065B  087D               	movf	_p1State,w
  1783     065C  00F5               	movwf	MAX7219_write@data
  1784     065D  3007               	movlw	7
  1785     065E  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  1786                           
  1787                           ;main.c: 100:                 break;
  1788     0663  2EE0               	goto	l68
  1789     0664                     l1149:
  1790                           
  1791                           ;main.c: 102:                 p1State = 0b01111000;
  1792     0664  3078               	movlw	120
  1793     0665  00FD               	movwf	_p1State
  1794     0666                     l1151:
  1795                           
  1796                           ;main.c: 103:                 MAX7219_write(7, p1State);
  1797     0666  087D               	movf	_p1State,w
  1798     0667  00F5               	movwf	MAX7219_write@data
  1799     0668  3007               	movlw	7
  1800     0669  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  1801                           
  1802                           ;main.c: 104:                 break;
  1803     066E  2EE0               	goto	l68
  1804     066F                     l1153:
  1805                           
  1806                           ;main.c: 106:                 p1State = 0b00011110;
  1807     066F  301E               	movlw	30
  1808     0670  00FD               	movwf	_p1State
  1809     0671                     l1155:
  1810                           
  1811                           ;main.c: 107:                 MAX7219_write(7, p1State);
  1812     0671  087D               	movf	_p1State,w
  1813     0672  00F5               	movwf	MAX7219_write@data
  1814     0673  3007               	movlw	7
  1815     0674  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  1816                           
  1817                           ;main.c: 108:                 break;
  1818     0679  2EE0               	goto	l68
  1819     067A                     l1159:
  1820     067A  087D               	movf	_p1State,w
  1821                           
  1822                           ; Switch size 1, requested type "simple"
  1823                           ; Number of cases is 5, Range of values is 15 to 135
  1824                           ; switch strategies available:
  1825                           ; Name         Instructions Cycles
  1826                           ; simple_byte           16     9 (average)
  1827                           ; jumptable            263     9 (fixed)
  1828                           ;	Chosen strategy is simple_byte
  1829     067B  3A0F               	xorlw	15	; case 15
  1830     067C  1903               	skipnz
  1831     067D  2E43               	goto	l1137
  1832     067E  3A11               	xorlw	17	; case 30
  1833     067F  1903               	skipnz
  1834     0680  2E4E               	goto	l1141
  1835     0681  3A22               	xorlw	34	; case 60
  1836     0682  1903               	skipnz
  1837     0683  2E59               	goto	l1145
  1838     0684  3A44               	xorlw	68	; case 120
  1839     0685  1903               	skipnz
  1840     0686  2E64               	goto	l1149
  1841     0687  3AFF               	xorlw	255	; case 135
  1842     0688  1903               	skipnz
  1843     0689  2E38               	goto	l1133
  1844     068A  2E6F               	goto	l1153
  1845     068B                     l1161:
  1846                           
  1847                           ;main.c: 113:                 p2State = 0b00001111;
  1848     068B  300F               	movlw	15
  1849     068C  00BC               	movwf	_p2State
  1850     068D                     l1163:
  1851                           
  1852                           ;main.c: 114:                 MAX7219_write(2, p2State);
  1853     068D  083C               	movf	_p2State,w
  1854     068E  00F5               	movwf	MAX7219_write@data
  1855     068F  3002               	movlw	2
  1856     0690  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  1857                           
  1858                           ;main.c: 115:                 break;
  1859     0695  2EE0               	goto	l68
  1860     0696                     l1165:
  1861                           
  1862                           ;main.c: 117:                 p2State = 0b00011110;
  1863     0696  301E               	movlw	30
  1864     0697  00BC               	movwf	_p2State
  1865     0698                     l1167:
  1866                           
  1867                           ;main.c: 118:                 MAX7219_write(2, p2State);
  1868     0698  083C               	movf	_p2State,w
  1869     0699  00F5               	movwf	MAX7219_write@data
  1870     069A  3002               	movlw	2
  1871     069B  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  1872                           
  1873                           ;main.c: 119:                 break;
  1874     06A0  2EE0               	goto	l68
  1875     06A1                     l1169:
  1876                           
  1877                           ;main.c: 121:                 p2State = 0b00111100;
  1878     06A1  303C               	movlw	60
  1879     06A2  00BC               	movwf	_p2State
  1880     06A3                     l1171:
  1881                           
  1882                           ;main.c: 122:                 MAX7219_write(2, p2State);
  1883     06A3  083C               	movf	_p2State,w
  1884     06A4  00F5               	movwf	MAX7219_write@data
  1885     06A5  3002               	movlw	2
  1886     06A6  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  1887                           
  1888                           ;main.c: 123:                 break;
  1889     06AB  2EE0               	goto	l68
  1890     06AC                     l1173:
  1891                           
  1892                           ;main.c: 125:                 p2State = 0b01111000;
  1893     06AC  3078               	movlw	120
  1894     06AD  00BC               	movwf	_p2State
  1895     06AE                     l1175:
  1896                           
  1897                           ;main.c: 126:                 MAX7219_write(2, p2State);
  1898     06AE  083C               	movf	_p2State,w
  1899     06AF  00F5               	movwf	MAX7219_write@data
  1900     06B0  3002               	movlw	2
  1901     06B1  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  1902                           
  1903                           ;main.c: 127:                 break;
  1904     06B6  2EE0               	goto	l68
  1905     06B7                     l1177:
  1906                           
  1907                           ;main.c: 129:                 p2State = 0b01111000;
  1908     06B7  3078               	movlw	120
  1909     06B8  00BC               	movwf	_p2State
  1910     06B9                     l1179:
  1911                           
  1912                           ;main.c: 130:                 MAX7219_write(2, p2State);
  1913     06B9  083C               	movf	_p2State,w
  1914     06BA  00F5               	movwf	MAX7219_write@data
  1915     06BB  3002               	movlw	2
  1916     06BC  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  1917                           
  1918                           ;main.c: 131:                 break;
  1919     06C1  2EE0               	goto	l68
  1920     06C2                     l1181:
  1921                           
  1922                           ;main.c: 133:                 p2State = 0b00011110;
  1923     06C2  301E               	movlw	30
  1924     06C3  00BC               	movwf	_p2State
  1925     06C4                     l1183:
  1926                           
  1927                           ;main.c: 134:                 MAX7219_write(2, p2State);
  1928     06C4  083C               	movf	_p2State,w
  1929     06C5  00F5               	movwf	MAX7219_write@data
  1930     06C6  3002               	movlw	2
  1931     06C7  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  1932                           
  1933                           ;main.c: 135:                 break;
  1934     06CC  2EE0               	goto	l68
  1935     06CD                     l1187:
  1936     06CD  1283               	bcf	3,5	;RP0=0, select bank0
  1937     06CE  1303               	bcf	3,6	;RP1=0, select bank0
  1938     06CF  083C               	movf	_p2State,w
  1939                           
  1940                           ; Switch size 1, requested type "simple"
  1941                           ; Number of cases is 5, Range of values is 15 to 135
  1942                           ; switch strategies available:
  1943                           ; Name         Instructions Cycles
  1944                           ; simple_byte           16     9 (average)
  1945                           ; jumptable            263     9 (fixed)
  1946                           ;	Chosen strategy is simple_byte
  1947     06D0  3A0F               	xorlw	15	; case 15
  1948     06D1  1903               	skipnz
  1949     06D2  2E96               	goto	l1165
  1950     06D3  3A11               	xorlw	17	; case 30
  1951     06D4  1903               	skipnz
  1952     06D5  2EA1               	goto	l1169
  1953     06D6  3A22               	xorlw	34	; case 60
  1954     06D7  1903               	skipnz
  1955     06D8  2EAC               	goto	l1173
  1956     06D9  3A44               	xorlw	68	; case 120
  1957     06DA  1903               	skipnz
  1958     06DB  2EB7               	goto	l1177
  1959     06DC  3AFF               	xorlw	255	; case 135
  1960     06DD  1903               	skipnz
  1961     06DE  2E8B               	goto	l1161
  1962     06DF  2EC2               	goto	l1181
  1963     06E0                     l68:
  1964     06E0  0008               	return
  1965     06E1                     __end_of_buttonGoUp:
  1966                           
  1967                           	psect	text8
  1968     0581                     __ptext8:	
  1969 ;; *************** function _buttonGoDown *****************
  1970 ;; Defined at:
  1971 ;;		line 140 in file "main.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;  player          2    7[COMMON] int 
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;		None
  1976 ;; Return value:  Size  Location     Type
  1977 ;;                  1    wreg      void 
  1978 ;; Registers used:
  1979 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1985 ;;      Params:         2       0       0       0       0
  1986 ;;      Locals:         0       0       0       0       0
  1987 ;;      Temps:          0       0       0       0       0
  1988 ;;      Totals:         2       0       0       0       0
  1989 ;;Total ram usage:        2 bytes
  1990 ;; Hardware stack levels used: 1
  1991 ;; Hardware stack levels required when called: 2
  1992 ;; This function calls:
  1993 ;;		_MAX7219_write
  1994 ;; This function is called by:
  1995 ;;		_main
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999     0581                     _buttonGoDown:	
  2000                           ;psect for function _buttonGoDown
  2001                           
  2002     0581                     l1189:	
  2003                           ;incstack = 0
  2004                           ; Regs used in _buttonGoDown: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2005                           
  2006                           
  2007                           ;main.c: 141:     if (player == 1) {
  2008     0581  0377               	decf	buttonGoDown@player,w
  2009     0582  0478               	iorwf	buttonGoDown@player+1,w
  2010     0583  1D03               	btfss	3,2
  2011     0584  2D86               	goto	u431
  2012     0585  2D87               	goto	u430
  2013     0586                     u431:
  2014     0586  2E1D               	goto	l1247
  2015     0587                     u430:
  2016     0587  2DCA               	goto	l1219
  2017     0588                     l1193:
  2018                           
  2019                           ;main.c: 144:                 p1State = 0b10000111;
  2020     0588  3087               	movlw	135
  2021     0589  00FD               	movwf	_p1State
  2022     058A                     l1195:
  2023                           
  2024                           ;main.c: 145:                 MAX7219_write(7, p1State);
  2025     058A  087D               	movf	_p1State,w
  2026     058B  00F5               	movwf	MAX7219_write@data
  2027     058C  3007               	movlw	7
  2028     058D  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  2029                           
  2030                           ;main.c: 146:                 break;
  2031     0592  2E30               	goto	l89
  2032     0593                     l1197:
  2033                           
  2034                           ;main.c: 148:                 p1State = 0b10000111;
  2035     0593  3087               	movlw	135
  2036     0594  00FD               	movwf	_p1State
  2037     0595                     l1199:
  2038                           
  2039                           ;main.c: 149:                 MAX7219_write(7, p1State);
  2040     0595  087D               	movf	_p1State,w
  2041     0596  00F5               	movwf	MAX7219_write@data
  2042     0597  3007               	movlw	7
  2043     0598  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  2044                           
  2045                           ;main.c: 150:                 break;
  2046     059D  2E30               	goto	l89
  2047     059E                     l1201:
  2048                           
  2049                           ;main.c: 152:                 p1State = 0b00001111;
  2050     059E  300F               	movlw	15
  2051     059F  00FD               	movwf	_p1State
  2052     05A0                     l1203:
  2053                           
  2054                           ;main.c: 153:                 MAX7219_write(7, p1State);
  2055     05A0  087D               	movf	_p1State,w
  2056     05A1  00F5               	movwf	MAX7219_write@data
  2057     05A2  3007               	movlw	7
  2058     05A3  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  2059                           
  2060                           ;main.c: 154:                 break;
  2061     05A8  2E30               	goto	l89
  2062     05A9                     l1205:
  2063                           
  2064                           ;main.c: 156:                 p1State = 0b00011110;
  2065     05A9  301E               	movlw	30
  2066     05AA  00FD               	movwf	_p1State
  2067     05AB                     l1207:
  2068                           
  2069                           ;main.c: 157:                 MAX7219_write(7, p1State);
  2070     05AB  087D               	movf	_p1State,w
  2071     05AC  00F5               	movwf	MAX7219_write@data
  2072     05AD  3007               	movlw	7
  2073     05AE  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  2074                           
  2075                           ;main.c: 158:                 break;
  2076     05B3  2E30               	goto	l89
  2077     05B4                     l1209:
  2078                           
  2079                           ;main.c: 160:                 p1State = 0b00111100;
  2080     05B4  303C               	movlw	60
  2081     05B5  00FD               	movwf	_p1State
  2082     05B6                     l1211:
  2083                           
  2084                           ;main.c: 161:                 MAX7219_write(7, p1State);
  2085     05B6  087D               	movf	_p1State,w
  2086     05B7  00F5               	movwf	MAX7219_write@data
  2087     05B8  3007               	movlw	7
  2088     05B9  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  2089                           
  2090                           ;main.c: 162:                 break;
  2091     05BE  2E30               	goto	l89
  2092     05BF                     l1213:
  2093                           
  2094                           ;main.c: 164:                 p1State = 0b00011110;
  2095     05BF  301E               	movlw	30
  2096     05C0  00FD               	movwf	_p1State
  2097     05C1                     l1215:
  2098                           
  2099                           ;main.c: 165:                 MAX7219_write(7, p1State);
  2100     05C1  087D               	movf	_p1State,w
  2101     05C2  00F5               	movwf	MAX7219_write@data
  2102     05C3  3007               	movlw	7
  2103     05C4  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  2104                           
  2105                           ;main.c: 166:                 break;
  2106     05C9  2E30               	goto	l89
  2107     05CA                     l1219:
  2108     05CA  087D               	movf	_p1State,w
  2109                           
  2110                           ; Switch size 1, requested type "simple"
  2111                           ; Number of cases is 5, Range of values is 15 to 135
  2112                           ; switch strategies available:
  2113                           ; Name         Instructions Cycles
  2114                           ; simple_byte           16     9 (average)
  2115                           ; jumptable            263     9 (fixed)
  2116                           ;	Chosen strategy is simple_byte
  2117     05CB  3A0F               	xorlw	15	; case 15
  2118     05CC  1903               	skipnz
  2119     05CD  2D93               	goto	l1197
  2120     05CE  3A11               	xorlw	17	; case 30
  2121     05CF  1903               	skipnz
  2122     05D0  2D9E               	goto	l1201
  2123     05D1  3A22               	xorlw	34	; case 60
  2124     05D2  1903               	skipnz
  2125     05D3  2DA9               	goto	l1205
  2126     05D4  3A44               	xorlw	68	; case 120
  2127     05D5  1903               	skipnz
  2128     05D6  2DB4               	goto	l1209
  2129     05D7  3AFF               	xorlw	255	; case 135
  2130     05D8  1903               	skipnz
  2131     05D9  2D88               	goto	l1193
  2132     05DA  2DBF               	goto	l1213
  2133     05DB                     l1221:
  2134                           
  2135                           ;main.c: 171:                 p2State = 0b10000111;
  2136     05DB  3087               	movlw	135
  2137     05DC  00BC               	movwf	_p2State
  2138     05DD                     l1223:
  2139                           
  2140                           ;main.c: 172:                 MAX7219_write(2, p2State);
  2141     05DD  083C               	movf	_p2State,w
  2142     05DE  00F5               	movwf	MAX7219_write@data
  2143     05DF  3002               	movlw	2
  2144     05E0  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  2145                           
  2146                           ;main.c: 173:                 break;
  2147     05E5  2E30               	goto	l89
  2148     05E6                     l1225:
  2149                           
  2150                           ;main.c: 175:                 p2State = 0b10000111;
  2151     05E6  3087               	movlw	135
  2152     05E7  00BC               	movwf	_p2State
  2153     05E8                     l1227:
  2154                           
  2155                           ;main.c: 176:                 MAX7219_write(2, p2State);
  2156     05E8  083C               	movf	_p2State,w
  2157     05E9  00F5               	movwf	MAX7219_write@data
  2158     05EA  3002               	movlw	2
  2159     05EB  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  2160                           
  2161                           ;main.c: 177:                 break;
  2162     05F0  2E30               	goto	l89
  2163     05F1                     l1229:
  2164                           
  2165                           ;main.c: 179:                 p2State = 0b00001111;
  2166     05F1  300F               	movlw	15
  2167     05F2  00BC               	movwf	_p2State
  2168     05F3                     l1231:
  2169                           
  2170                           ;main.c: 180:                 MAX7219_write(2, p2State);
  2171     05F3  083C               	movf	_p2State,w
  2172     05F4  00F5               	movwf	MAX7219_write@data
  2173     05F5  3002               	movlw	2
  2174     05F6  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  2175                           
  2176                           ;main.c: 181:                 break;
  2177     05FB  2E30               	goto	l89
  2178     05FC                     l1233:
  2179                           
  2180                           ;main.c: 183:                 p2State = 0b00011110;
  2181     05FC  301E               	movlw	30
  2182     05FD  00BC               	movwf	_p2State
  2183     05FE                     l1235:
  2184                           
  2185                           ;main.c: 184:                 MAX7219_write(2, p2State);
  2186     05FE  083C               	movf	_p2State,w
  2187     05FF  00F5               	movwf	MAX7219_write@data
  2188     0600  3002               	movlw	2
  2189     0601  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  2190                           
  2191                           ;main.c: 185:                 break;
  2192     0606  2E30               	goto	l89
  2193     0607                     l1237:
  2194                           
  2195                           ;main.c: 187:                 p2State = 0b00111100;
  2196     0607  303C               	movlw	60
  2197     0608  00BC               	movwf	_p2State
  2198     0609                     l1239:
  2199                           
  2200                           ;main.c: 188:                 MAX7219_write(2, p2State);
  2201     0609  083C               	movf	_p2State,w
  2202     060A  00F5               	movwf	MAX7219_write@data
  2203     060B  3002               	movlw	2
  2204     060C  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  2205                           
  2206                           ;main.c: 189:                 break;
  2207     0611  2E30               	goto	l89
  2208     0612                     l1241:
  2209                           
  2210                           ;main.c: 191:                 p2State = 0b00000010 | 0b00000100 | 0b00001000 | 0b0001000
      +                          0;
  2211     0612  301E               	movlw	30
  2212     0613  00BC               	movwf	_p2State
  2213     0614                     l1243:
  2214                           
  2215                           ;main.c: 192:                 MAX7219_write(2, p2State);
  2216     0614  083C               	movf	_p2State,w
  2217     0615  00F5               	movwf	MAX7219_write@data
  2218     0616  3002               	movlw	2
  2219     0617  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  2220                           
  2221                           ;main.c: 193:                 break;
  2222     061C  2E30               	goto	l89
  2223     061D                     l1247:
  2224     061D  1283               	bcf	3,5	;RP0=0, select bank0
  2225     061E  1303               	bcf	3,6	;RP1=0, select bank0
  2226     061F  083C               	movf	_p2State,w
  2227                           
  2228                           ; Switch size 1, requested type "simple"
  2229                           ; Number of cases is 5, Range of values is 15 to 135
  2230                           ; switch strategies available:
  2231                           ; Name         Instructions Cycles
  2232                           ; simple_byte           16     9 (average)
  2233                           ; jumptable            263     9 (fixed)
  2234                           ;	Chosen strategy is simple_byte
  2235     0620  3A0F               	xorlw	15	; case 15
  2236     0621  1903               	skipnz
  2237     0622  2DE6               	goto	l1225
  2238     0623  3A11               	xorlw	17	; case 30
  2239     0624  1903               	skipnz
  2240     0625  2DF1               	goto	l1229
  2241     0626  3A22               	xorlw	34	; case 60
  2242     0627  1903               	skipnz
  2243     0628  2DFC               	goto	l1233
  2244     0629  3A44               	xorlw	68	; case 120
  2245     062A  1903               	skipnz
  2246     062B  2E07               	goto	l1237
  2247     062C  3AFF               	xorlw	255	; case 135
  2248     062D  1903               	skipnz
  2249     062E  2DDB               	goto	l1221
  2250     062F  2E12               	goto	l1241
  2251     0630                     l89:
  2252     0630  0008               	return
  2253     0631                     __end_of_buttonGoDown:
  2254                           
  2255                           	psect	text9
  2256     0460                     __ptext9:	
  2257 ;; *************** function _MAX7219_init *****************
  2258 ;; Defined at:
  2259 ;;		line 12 in file "MAX7219.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;  noChips         1    wreg     unsigned char 
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;  noChips         1    7[COMMON] unsigned char 
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1    wreg      void 
  2266 ;; Registers used:
  2267 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2273 ;;      Params:         0       0       0       0       0
  2274 ;;      Locals:         1       0       0       0       0
  2275 ;;      Temps:          0       0       0       0       0
  2276 ;;      Totals:         1       0       0       0       0
  2277 ;;Total ram usage:        1 bytes
  2278 ;; Hardware stack levels used: 1
  2279 ;; Hardware stack levels required when called: 3
  2280 ;; This function calls:
  2281 ;;		_MAX7219_config
  2282 ;;		_SPI_init
  2283 ;; This function is called by:
  2284 ;;		_main
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288     0460                     _MAX7219_init:	
  2289                           ;psect for function _MAX7219_init
  2290                           
  2291                           
  2292                           ;incstack = 0
  2293                           ; Regs used in _MAX7219_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2294                           ;MAX7219_init@noChips stored from wreg
  2295     0460  00F7               	movwf	MAX7219_init@noChips
  2296     0461                     l1321:
  2297                           
  2298                           ;MAX7219.c: 13:     SPI_init();
  2299     0461  120A  118A  23ED  120A  118A  	fcall	_SPI_init
  2300                           
  2301                           ;MAX7219.c: 14:     while (noChips)
  2302     0466  2C6F               	goto	l1325
  2303     0467                     l1323:
  2304                           
  2305                           ;MAX7219.c: 15:         MAX7219_config(--noChips);
  2306     0467  3001               	movlw	1
  2307     0468  02F7               	subwf	MAX7219_init@noChips,f
  2308     0469  0877               	movf	MAX7219_init@noChips,w
  2309     046A  120A  118A  2475  120A  118A  	fcall	_MAX7219_config
  2310     046F                     l1325:
  2311                           
  2312                           ;MAX7219.c: 14:     while (noChips)
  2313     046F  0877               	movf	MAX7219_init@noChips,w
  2314     0470  1D03               	btfss	3,2
  2315     0471  2C73               	goto	u661
  2316     0472  2C74               	goto	u660
  2317     0473                     u661:
  2318     0473  2C67               	goto	l1323
  2319     0474                     u660:
  2320     0474                     l178:
  2321     0474  0008               	return
  2322     0475                     __end_of_MAX7219_init:
  2323                           
  2324                           	psect	text10
  2325     03ED                     __ptext10:	
  2326 ;; *************** function _SPI_init *****************
  2327 ;; Defined at:
  2328 ;;		line 12 in file "Soft_SPI.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;		None
  2331 ;; Auto vars:     Size  Location     Type
  2332 ;;		None
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  1    wreg      void 
  2335 ;; Registers used:
  2336 ;;		None
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2342 ;;      Params:         0       0       0       0       0
  2343 ;;      Locals:         0       0       0       0       0
  2344 ;;      Temps:          0       0       0       0       0
  2345 ;;      Totals:         0       0       0       0       0
  2346 ;;Total ram usage:        0 bytes
  2347 ;; Hardware stack levels used: 1
  2348 ;; This function calls:
  2349 ;;		Nothing
  2350 ;; This function is called by:
  2351 ;;		_MAX7219_init
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355     03ED                     _SPI_init:	
  2356                           ;psect for function _SPI_init
  2357                           
  2358     03ED                     l1095:	
  2359                           ;incstack = 0
  2360                           ; Regs used in _SPI_init: []
  2361                           
  2362                           
  2363                           ;Soft_SPI.c: 13:     TRISC2 = 0;
  2364     03ED  1683               	bsf	3,5	;RP0=1, select bank1
  2365     03EE  1303               	bcf	3,6	;RP1=0, select bank1
  2366     03EF  1107               	bcf	7,2	;volatile
  2367                           
  2368                           ;Soft_SPI.c: 14:     TRISC0 = 0;
  2369     03F0  1007               	bcf	7,0	;volatile
  2370                           
  2371                           ;Soft_SPI.c: 15:     TRISC4 = 1;
  2372     03F1  1607               	bsf	7,4	;volatile
  2373                           
  2374                           ;Soft_SPI.c: 16:     TRISC1 = 0;
  2375     03F2  1087               	bcf	7,1	;volatile
  2376                           
  2377                           ;Soft_SPI.c: 17:     TRISC3 = 0;
  2378     03F3  1187               	bcf	7,3	;volatile
  2379     03F4                     l211:
  2380     03F4  0008               	return
  2381     03F5                     __end_of_SPI_init:
  2382                           
  2383                           	psect	text11
  2384     0475                     __ptext11:	
  2385 ;; *************** function _MAX7219_config *****************
  2386 ;; Defined at:
  2387 ;;		line 19 in file "MAX7219.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;  chip            1    wreg     unsigned char 
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;  chip            1    0[COMMON] unsigned char 
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  1    wreg      void 
  2394 ;; Registers used:
  2395 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2401 ;;      Params:         0       0       0       0       0
  2402 ;;      Locals:         0       0       0       0       0
  2403 ;;      Temps:          0       0       0       0       0
  2404 ;;      Totals:         0       0       0       0       0
  2405 ;;Total ram usage:        0 bytes
  2406 ;; Hardware stack levels used: 1
  2407 ;; Hardware stack levels required when called: 2
  2408 ;; This function calls:
  2409 ;;		_MAX7219_write
  2410 ;; This function is called by:
  2411 ;;		_MAX7219_init
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415     0475                     _MAX7219_config:	
  2416                           ;psect for function _MAX7219_config
  2417                           
  2418     0475                     l1097:	
  2419                           ;incstack = 0
  2420                           ; Regs used in _MAX7219_config: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2421                           
  2422                           
  2423                           ;MAX7219.c: 20:     MAX7219_write(0x09, 0x00);
  2424     0475  01F5               	clrf	MAX7219_write@data
  2425     0476  3009               	movlw	9
  2426     0477  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  2427                           
  2428                           ;MAX7219.c: 21:     MAX7219_write(0x0A, 0x05);
  2429     047C  3005               	movlw	5
  2430     047D  00F5               	movwf	MAX7219_write@data
  2431     047E  300A               	movlw	10
  2432     047F  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  2433                           
  2434                           ;MAX7219.c: 22:     MAX7219_write(0x0B, 0x07);
  2435     0484  3007               	movlw	7
  2436     0485  00F5               	movwf	MAX7219_write@data
  2437     0486  300B               	movlw	11
  2438     0487  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  2439                           
  2440                           ;MAX7219.c: 23:     MAX7219_write(0x0C, 0x01);
  2441     048C  01F5               	clrf	MAX7219_write@data
  2442     048D  0AF5               	incf	MAX7219_write@data,f
  2443     048E  300C               	movlw	12
  2444     048F  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  2445                           
  2446                           ;MAX7219.c: 24:     MAX7219_write(0x0F, 0x00);
  2447     0494  01F5               	clrf	MAX7219_write@data
  2448     0495  300F               	movlw	15
  2449     0496  120A  118A  244C  120A  118A  	fcall	_MAX7219_write
  2450     049B                     l181:
  2451     049B  0008               	return
  2452     049C                     __end_of_MAX7219_config:
  2453                           
  2454                           	psect	text12
  2455     044C                     __ptext12:	
  2456 ;; *************** function _MAX7219_write *****************
  2457 ;; Defined at:
  2458 ;;		line 28 in file "MAX7219.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  regName         1    wreg     unsigned char 
  2461 ;;  data            1    5[COMMON] unsigned char 
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;  regName         1    6[COMMON] unsigned char 
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  1    wreg      void 
  2466 ;; Registers used:
  2467 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2473 ;;      Params:         1       0       0       0       0
  2474 ;;      Locals:         1       0       0       0       0
  2475 ;;      Temps:          0       0       0       0       0
  2476 ;;      Totals:         2       0       0       0       0
  2477 ;;Total ram usage:        2 bytes
  2478 ;; Hardware stack levels used: 1
  2479 ;; Hardware stack levels required when called: 1
  2480 ;; This function calls:
  2481 ;;		_SPI_write
  2482 ;; This function is called by:
  2483 ;;		_initGame
  2484 ;;		_buttonGoUp
  2485 ;;		_buttonGoDown
  2486 ;;		_updateBallPosition
  2487 ;;		_MAX7219_config
  2488 ;;		_MAX7219_displayText
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491                           
  2492     044C                     _MAX7219_write:	
  2493                           ;psect for function _MAX7219_write
  2494                           
  2495                           
  2496                           ;incstack = 0
  2497                           ; Regs used in _MAX7219_write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2498                           ;MAX7219_write@regName stored from wreg
  2499     044C  00F6               	movwf	MAX7219_write@regName
  2500     044D                     l1089:
  2501                           
  2502                           ;MAX7219.c: 29:     RC1 = 0;
  2503     044D  1283               	bcf	3,5	;RP0=0, select bank0
  2504     044E  1303               	bcf	3,6	;RP1=0, select bank0
  2505     044F  1087               	bcf	7,1	;volatile
  2506     0450                     l1091:
  2507                           
  2508                           ;MAX7219.c: 31:     SPI_write(regName);
  2509     0450  0876               	movf	MAX7219_write@regName,w
  2510     0451  120A  118A  249C  120A  118A  	fcall	_SPI_write
  2511                           
  2512                           ;MAX7219.c: 32:     SPI_write(data);
  2513     0456  0875               	movf	MAX7219_write@data,w
  2514     0457  120A  118A  249C  120A  118A  	fcall	_SPI_write
  2515     045C                     l1093:
  2516                           
  2517                           ;MAX7219.c: 34:     RC1 = 1;
  2518     045C  1283               	bcf	3,5	;RP0=0, select bank0
  2519     045D  1303               	bcf	3,6	;RP1=0, select bank0
  2520     045E  1487               	bsf	7,1	;volatile
  2521     045F                     l184:
  2522     045F  0008               	return
  2523     0460                     __end_of_MAX7219_write:
  2524                           
  2525                           	psect	text13
  2526     049C                     __ptext13:	
  2527 ;; *************** function _SPI_write *****************
  2528 ;; Defined at:
  2529 ;;		line 21 in file "Soft_SPI.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;  send            1    wreg     unsigned char 
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;  send            1    2[COMMON] unsigned char 
  2534 ;;  Tx              2    3[COMMON] int 
  2535 ;; Return value:  Size  Location     Type
  2536 ;;                  1    wreg      void 
  2537 ;; Registers used:
  2538 ;;		wreg, status,2, status,0, btemp+1
  2539 ;; Tracked objects:
  2540 ;;		On entry : 0/0
  2541 ;;		On exit  : 0/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2544 ;;      Params:         0       0       0       0       0
  2545 ;;      Locals:         3       0       0       0       0
  2546 ;;      Temps:          2       0       0       0       0
  2547 ;;      Totals:         5       0       0       0       0
  2548 ;;Total ram usage:        5 bytes
  2549 ;; Hardware stack levels used: 1
  2550 ;; This function calls:
  2551 ;;		Nothing
  2552 ;; This function is called by:
  2553 ;;		_MAX7219_write
  2554 ;;		_MAX7219_NoOperation
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558     049C                     _SPI_write:	
  2559                           ;psect for function _SPI_write
  2560                           
  2561                           
  2562                           ;incstack = 0
  2563                           ; Regs used in _SPI_write: [wreg+status,2+status,0+btemp+1]
  2564                           ;SPI_write@send stored from wreg
  2565     049C  00F2               	movwf	SPI_write@send
  2566     049D                     l1075:
  2567                           
  2568                           ;Soft_SPI.c: 22:     for (int Tx = 0; Tx < 8; Tx++) {
  2569     049D  01F3               	clrf	SPI_write@Tx
  2570     049E  01F4               	clrf	SPI_write@Tx+1
  2571     049F                     l214:
  2572                           
  2573                           ;Soft_SPI.c: 23:         RC2 = 0;
  2574     049F  1283               	bcf	3,5	;RP0=0, select bank0
  2575     04A0  1303               	bcf	3,6	;RP1=0, select bank0
  2576     04A1  1107               	bcf	7,2	;volatile
  2577     04A2                     l1081:
  2578                           
  2579                           ;Soft_SPI.c: 24:         RC0 = ((send << Tx) & 0x80) ? 1 : 0;
  2580     04A2  0A73               	incf	SPI_write@Tx,w
  2581     04A3  00FF               	movwf	btemp+1
  2582     04A4  0872               	movf	SPI_write@send,w
  2583     04A5  00F0               	movwf	??_SPI_write
  2584     04A6  01F1               	clrf	??_SPI_write+1
  2585     04A7  2CAB               	goto	u384
  2586     04A8                     u385:
  2587     04A8  1003               	clrc
  2588     04A9  0DF0               	rlf	??_SPI_write,f
  2589     04AA  0DF1               	rlf	??_SPI_write+1,f
  2590     04AB                     u384:
  2591     04AB  0BFF               	decfsz	btemp+1,f
  2592     04AC  2CA8               	goto	u385
  2593     04AD  1BF0               	btfsc	??_SPI_write,7
  2594     04AE  2CB0               	goto	u391
  2595     04AF  2CB4               	goto	u390
  2596     04B0                     u391:
  2597     04B0  1283               	bcf	3,5	;RP0=0, select bank0
  2598     04B1  1303               	bcf	3,6	;RP1=0, select bank0
  2599     04B2  1407               	bsf	7,0	;volatile
  2600     04B3  2CB7               	goto	u404
  2601     04B4                     u390:
  2602     04B4  1283               	bcf	3,5	;RP0=0, select bank0
  2603     04B5  1303               	bcf	3,6	;RP1=0, select bank0
  2604     04B6  1007               	bcf	7,0	;volatile
  2605     04B7                     u404:
  2606     04B7                     l1083:
  2607                           
  2608                           ;Soft_SPI.c: 25:         RC2 = 1;
  2609     04B7  1507               	bsf	7,2	;volatile
  2610     04B8                     l1085:
  2611                           
  2612                           ;Soft_SPI.c: 26:     }
  2613     04B8  3001               	movlw	1
  2614     04B9  07F3               	addwf	SPI_write@Tx,f
  2615     04BA  1803               	skipnc
  2616     04BB  0AF4               	incf	SPI_write@Tx+1,f
  2617     04BC  3000               	movlw	0
  2618     04BD  07F4               	addwf	SPI_write@Tx+1,f
  2619     04BE                     l1087:
  2620     04BE  0874               	movf	SPI_write@Tx+1,w
  2621     04BF  3A80               	xorlw	128
  2622     04C0  00FF               	movwf	btemp+1
  2623     04C1  3080               	movlw	128
  2624     04C2  027F               	subwf	btemp+1,w
  2625     04C3  1D03               	skipz
  2626     04C4  2CC7               	goto	u415
  2627     04C5  3008               	movlw	8
  2628     04C6  0273               	subwf	SPI_write@Tx,w
  2629     04C7                     u415:
  2630     04C7  1C03               	skipc
  2631     04C8  2CCA               	goto	u411
  2632     04C9  2CCB               	goto	u410
  2633     04CA                     u411:
  2634     04CA  2C9F               	goto	l214
  2635     04CB                     u410:
  2636     04CB                     l216:
  2637     04CB  0008               	return
  2638     04CC                     __end_of_SPI_write:
  2639     007E                     btemp	set	126	;btemp
  2640     007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     21      30
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_buttonGoDown
    _main->_buttonGoUp
    _updateBallPosition->_MAX7219_write
    _initGame->_MAX7219_write
    _buttonGoUp->_MAX7219_write
    _buttonGoDown->_MAX7219_write
    _MAX7219_config->_MAX7219_write
    _MAX7219_write->_SPI_write

Critical Paths under _main in BANK0

    _main->_updateBallPosition

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     3      4   15337
                                              9 COMMON     4     0      4
                                             18 BANK0      3     3      0
                       _MAX7219_init
                       _buttonGoDown
                         _buttonGoUp
                           _initGame
                        _readButton0
                        _readButton1
                        _readButton2
                        _readButton3
                 _updateBallPosition
 ---------------------------------------------------------------------------------
 (1) _updateBallPosition                                  18    18      0    3161
                                              0 BANK0     18    18      0
                      _MAX7219_write
 ---------------------------------------------------------------------------------
 (1) _readButton3                                          4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _readButton2                                          4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _readButton1                                          4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _readButton0                                          4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _initGame                                             0     0      0    2946
                      _MAX7219_write
 ---------------------------------------------------------------------------------
 (1) _buttonGoUp                                           2     0      2    3120
                                              7 COMMON     2     0      2
                      _MAX7219_write
 ---------------------------------------------------------------------------------
 (1) _buttonGoDown                                         2     0      2    3120
                                              7 COMMON     2     0      2
                      _MAX7219_write
 ---------------------------------------------------------------------------------
 (1) _MAX7219_init                                         1     1      0    2990
                                              7 COMMON     1     1      0
                     _MAX7219_config
                           _SPI_init
 ---------------------------------------------------------------------------------
 (2) _SPI_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MAX7219_config                                       1     1      0    2946
                      _MAX7219_write
 ---------------------------------------------------------------------------------
 (2) _MAX7219_write                                        2     1      1    2946
                                              5 COMMON     2     1      1
                          _SPI_write
 ---------------------------------------------------------------------------------
 (3) _SPI_write                                            5     5      0      90
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MAX7219_init
     _MAX7219_config
       _MAX7219_write
         _SPI_write
     _SPI_init
   _buttonGoDown
     _MAX7219_write
   _buttonGoUp
     _MAX7219_write
   _initGame
     _MAX7219_write
   _readButton0
   _readButton1
   _readButton2
   _readButton3
   _updateBallPosition
     _MAX7219_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     15      1E       5       37.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2C      12        0.0%
ABS                  0      0      2C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat May 18 17:34:26 2024

                          pc 0002                           l41 041A                           l35 0501  
                         l44 0429                           l38 040B                           l47 0438  
                         l68 06E0                           l89 0630                           l97 0728  
                         fsr 0004                          l101 0721                          l103 073E  
                        l121 0780                          l113 0751                          l211 03F4  
                        l131 0793                          l115 076A                          l107 073B  
                        l133 07AC                          l125 077D                          l109 0754  
                        l214 049F                          l126 07C6                          l143 07BF  
                        l127 0796                          l119 0767                          l216 04CB  
                        l137 07A9                          l146 07D3                          l147 07E6  
                        l181 049B                          l184 045F                          l178 0474  
                        _RB0 0030                          _RB1 0031                          _RB2 0032  
                        _RC0 0038                          _RB3 0033                          _RC1 0039  
                        _RC2 003A                          _RC4 003C                          u410 04CB  
                        u411 04CA                          u404 04B7                          u420 0637  
                        u500 072C                          u421 0636                          u501 072B  
                        u430 0587                          u510 0732                          u415 04C7  
                        u431 0586                          u511 0731                          u600 079A  
                        u520 0742                          u440 06EE                          u601 0799  
                        u521 0741                          u441 06ED                          u610 07A0  
                        u530 0748                          u450 06F4                          u611 079F  
                        u531 0747                          u451 06F3                          u620 07B0  
                        u540 0758                          u460 0701                          u700 055A  
                        u621 07AF                          u541 0757                          u461 0700  
                        u701 0559                          u390 04B4                          u630 07B6  
                        u550 075E                          u470 0707                          u710 057D  
                        u391 04B0                          u631 07B5                          u551 075D  
                        u471 0706                          u711 057C                          u384 04AB  
                        u640 07CC                          u560 076E                          u480 0712  
                        u385 04A8                          u641 07CB                          u561 076D  
                        u481 0711                          u650 07D3                          u570 0774  
                        u490 0718                          u651 07D2                          u571 0773  
                        u491 0717                          u660 0474                          u580 0784  
                        u661 0473                          u581 0783                          u590 078A  
                        u670 051E                          u591 0789                          u671 051D  
                        u680 0532                          u737 056B                          u681 0531  
                        u690 0546                          u691 0545                          indf 0000  
                       l1101 04D4                         l1111 04FE                         l1103 04DB  
                       l1201 059E                         l1105 04E2                         l1113 03FD  
                       l1121 041B                         l1211 05B6                         l1203 05A0  
                       l1107 04EA                         l1221 05DB                         l1213 05BF  
                       l1205 05A9                         l1141 064E                         l1133 0638  
                       l1109 04F4                         l1117 040C                         l1125 042A  
                       l1301 078F                         l1231 05F3                         l1223 05DD  
                       l1215 05C1                         l1207 05AB                         l1151 0666  
                       l1143 0650                         l1135 063A                         l1311 07B6  
                       l1303 079A                         l1081 04A2                         l1321 0461  
                       l1241 0612                         l1233 05FC                         l1225 05E6  
                       l1209 05B4                         l1161 068B                         l1153 066F  
                       l1145 0659                         l1137 0643                         l1129 0631  
                       l1313 07BB                         l1305 07A0                         l1083 04B7  
                       l1075 049D                         l1091 0450                         l1323 0467  
                       l1243 0614                         l1235 05FE                         l1227 05E8  
                       l1219 05CA                         l1171 06A3                         l1163 068D  
                       l1155 0671                         l1147 065B                         l1139 0645  
                       l1307 07A5                         l1315 07C6                         l1251 06E7  
                       l1331 0507                         l1085 04B8                         l1093 045C  
                       l1325 046F                         l1237 0607                         l1229 05F1  
                       l1181 06C2                         l1173 06AC                         l1165 0696  
                       l1149 0664                         l1317 07CC                         l1309 07B0  
                       l1253 06EE                         l1341 0532                         l1333 050C  
                       l1087 04BE                         l1095 03ED                         l1239 0609  
                       l1247 061D                         l1183 06C4                         l1175 06AE  
                       l1167 0698                         l1159 067A                         l1319 07D5  
                       l1271 071D                         l1255 06F4                         l1263 0708  
                       l1351 0563                         l1343 053B                         l1335 0513  
                       l1327 0502                         l1089 044D                         l1097 0475  
                       l1193 0588                         l1177 06B7                         l1169 06A1  
                       l1281 0748                         l1273 072C                         l1265 070E  
                       l1257 06FA                         l1249 06E1                         l1353 0571  
                       l1345 0546                         l1337 051E                         l1329 0506  
                       l1195 058A                         l1179 06B9                         l1187 06CD  
                       l1099 04CC                         l1291 076E                         l1283 074D  
                       l1275 0732                         l1267 0712                         l1259 0701  
                       l1347 054F                         l1339 0527                         l1355 0576  
                       l1197 0593                         l1189 0581                         l1293 0774  
                       l1285 0758                         l1277 0737                         l1269 0718  
                       l1349 055A                         l1199 0595                         l1295 0779  
                       l1287 075E                         l1279 0742                         l1297 0784  
                       l1289 0763                         l1299 078A         MAX7219_write@regName 0076  
                       _main 0502                         btemp 007E                         start 0000  
               ?_readButton0 0070                 ?_readButton1 0070                 ?_readButton2 0070  
               ?_readButton3 0070                        ?_main 0079                        _TRISB 0086  
                      _TRISC 0087                        _ballX 0035                        pclath 000A  
           __end_of_SPI_init 03F5                        status 0003                        wtemp0 007E  
       __end_of_MAX7219_init 0475              __initialization 07E7                 __end_of_main 0581  
                     ??_main 0032           _updateBallPosition 06E1                ?_buttonGoDown 0077  
        ?_updateBallPosition 0070                       _TRISC0 0438                       _TRISC1 0439  
                     _TRISC2 043A                       _TRISC3 043B                       _TRISC4 043C  
           __end_of_initGame 0502         ??_updateBallPosition 0077                 __pdataCOMMON 007D  
         buttonGoDown@player 0077            __end_of_SPI_write 04CC               ??_buttonGoDown 0079  
      __end_of_MAX7219_write 0460      __end_of__initialization 07FC               __pcstackCOMMON 0070  
               __pidataBANK0 03F5                    ?_SPI_init 0070                   _ballYState 003B  
      _updateBallPosition$70 0030        _updateBallPosition$63 0022        _updateBallPosition$64 0024  
      _updateBallPosition$65 0026        _updateBallPosition$66 0028        _updateBallPosition$67 002A  
      _updateBallPosition$68 002C        _updateBallPosition$69 002E                   __pbssBANK0 003D  
                 __pmaintext 0502                   ??_SPI_init 0070                 _MAX7219_init 0460  
          MAX7219_write@data 0075                    ?_initGame 0070                      _p1State 007D  
                    _p2State 003C           MAX7219_config@chip 0070         __end_of_buttonGoDown 0631  
                 _buttonGoUp 0631                      __ptext1 06E1                      __ptext2 042A  
                    __ptext3 041B                      __ptext4 040C                      __ptext5 03FD  
                    __ptext6 04CC                      __ptext7 0631                      __ptext8 0581  
                    __ptext9 0460                      _isScore 003D               _MAX7219_config 0475  
       end_of_initialization 07FC                   ??_initGame 0077       __end_of_MAX7219_config 049C  
                  _SPI_write 049C                  ?_buttonGoUp 0077                __pidataCOMMON 03EC  
            ?_MAX7219_config 0070          start_initialization 07E7                   ?_SPI_write 0070  
                 init_fetch0 0439                  __pdataBANK0 0035                ??_readButton0 0072  
              ??_readButton1 0072                ??_readButton2 0072                ??_readButton3 0072  
                  ___latbits 0002                __pcstackBANK0 0020                 _buttonGoDown 0581  
                SPI_write@Tx 0073                SPI_write@send 0072          __end_of_readButton0 040C  
        __end_of_readButton1 041B          __end_of_readButton2 042A          __end_of_readButton3 0439  
                ??_SPI_write 0070                _MAX7219_write 044C                     _SPI_init 03ED  
             ?_MAX7219_write 0075             ??_MAX7219_config 0077                 ??_buttonGoUp 0079  
                _readButton0 03FD                  _readButton1 040C                  _readButton2 041B  
                _readButton3 042A                     _ballDirX 0039                     _ballDirY 0037  
updateBallPosition@ballXprev 0020             buttonGoUp@player 0077                     __ptext10 03ED  
                   __ptext11 0475                     __ptext12 044C                     __ptext13 049C  
                   _initGame 04CC           __end_of_buttonGoUp 06E1   __end_of_updateBallPosition 07E7  
                   main@argc 0079                     main@argv 007B                ?_MAX7219_init 0070  
                   init_ram0 043D              ??_MAX7219_write 0076          MAX7219_init@noChips 0077  
             ??_MAX7219_init 0077  
