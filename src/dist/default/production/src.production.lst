

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu May 16 11:26:06 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	dabs	1,0x7E,2
    28     0000                     
    29                           ; Generated 12/10/2023 GMT
    30                           ; 
    31                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F877A Definitions
    61                           ; 
    62                           ; SFR Addresses
    63     0000                     	;# 
    64     0001                     	;# 
    65     0002                     	;# 
    66     0003                     	;# 
    67     0004                     	;# 
    68     0005                     	;# 
    69     0006                     	;# 
    70     0007                     	;# 
    71     0008                     	;# 
    72     0009                     	;# 
    73     000A                     	;# 
    74     000B                     	;# 
    75     000C                     	;# 
    76     000D                     	;# 
    77     000E                     	;# 
    78     000E                     	;# 
    79     000F                     	;# 
    80     0010                     	;# 
    81     0011                     	;# 
    82     0012                     	;# 
    83     0013                     	;# 
    84     0014                     	;# 
    85     0015                     	;# 
    86     0015                     	;# 
    87     0016                     	;# 
    88     0017                     	;# 
    89     0018                     	;# 
    90     0019                     	;# 
    91     001A                     	;# 
    92     001B                     	;# 
    93     001B                     	;# 
    94     001C                     	;# 
    95     001D                     	;# 
    96     001E                     	;# 
    97     001F                     	;# 
    98     0081                     	;# 
    99     0085                     	;# 
   100     0086                     	;# 
   101     0087                     	;# 
   102     0088                     	;# 
   103     0089                     	;# 
   104     008C                     	;# 
   105     008D                     	;# 
   106     008E                     	;# 
   107     0091                     	;# 
   108     0092                     	;# 
   109     0093                     	;# 
   110     0094                     	;# 
   111     0098                     	;# 
   112     0099                     	;# 
   113     009C                     	;# 
   114     009D                     	;# 
   115     009E                     	;# 
   116     009F                     	;# 
   117     010C                     	;# 
   118     010D                     	;# 
   119     010E                     	;# 
   120     010F                     	;# 
   121     018C                     	;# 
   122     018D                     	;# 
   123     0000                     	;# 
   124     0001                     	;# 
   125     0002                     	;# 
   126     0003                     	;# 
   127     0004                     	;# 
   128     0005                     	;# 
   129     0006                     	;# 
   130     0007                     	;# 
   131     0008                     	;# 
   132     0009                     	;# 
   133     000A                     	;# 
   134     000B                     	;# 
   135     000C                     	;# 
   136     000D                     	;# 
   137     000E                     	;# 
   138     000E                     	;# 
   139     000F                     	;# 
   140     0010                     	;# 
   141     0011                     	;# 
   142     0012                     	;# 
   143     0013                     	;# 
   144     0014                     	;# 
   145     0015                     	;# 
   146     0015                     	;# 
   147     0016                     	;# 
   148     0017                     	;# 
   149     0018                     	;# 
   150     0019                     	;# 
   151     001A                     	;# 
   152     001B                     	;# 
   153     001B                     	;# 
   154     001C                     	;# 
   155     001D                     	;# 
   156     001E                     	;# 
   157     001F                     	;# 
   158     0081                     	;# 
   159     0085                     	;# 
   160     0086                     	;# 
   161     0087                     	;# 
   162     0088                     	;# 
   163     0089                     	;# 
   164     008C                     	;# 
   165     008D                     	;# 
   166     008E                     	;# 
   167     0091                     	;# 
   168     0092                     	;# 
   169     0093                     	;# 
   170     0094                     	;# 
   171     0098                     	;# 
   172     0099                     	;# 
   173     009C                     	;# 
   174     009D                     	;# 
   175     009E                     	;# 
   176     009F                     	;# 
   177     010C                     	;# 
   178     010D                     	;# 
   179     010E                     	;# 
   180     010F                     	;# 
   181     018C                     	;# 
   182     018D                     	;# 
   183     0000                     	;# 
   184     0001                     	;# 
   185     0002                     	;# 
   186     0003                     	;# 
   187     0004                     	;# 
   188     0005                     	;# 
   189     0006                     	;# 
   190     0007                     	;# 
   191     0008                     	;# 
   192     0009                     	;# 
   193     000A                     	;# 
   194     000B                     	;# 
   195     000C                     	;# 
   196     000D                     	;# 
   197     000E                     	;# 
   198     000E                     	;# 
   199     000F                     	;# 
   200     0010                     	;# 
   201     0011                     	;# 
   202     0012                     	;# 
   203     0013                     	;# 
   204     0014                     	;# 
   205     0015                     	;# 
   206     0015                     	;# 
   207     0016                     	;# 
   208     0017                     	;# 
   209     0018                     	;# 
   210     0019                     	;# 
   211     001A                     	;# 
   212     001B                     	;# 
   213     001B                     	;# 
   214     001C                     	;# 
   215     001D                     	;# 
   216     001E                     	;# 
   217     001F                     	;# 
   218     0081                     	;# 
   219     0085                     	;# 
   220     0086                     	;# 
   221     0087                     	;# 
   222     0088                     	;# 
   223     0089                     	;# 
   224     008C                     	;# 
   225     008D                     	;# 
   226     008E                     	;# 
   227     0091                     	;# 
   228     0092                     	;# 
   229     0093                     	;# 
   230     0094                     	;# 
   231     0098                     	;# 
   232     0099                     	;# 
   233     009C                     	;# 
   234     009D                     	;# 
   235     009E                     	;# 
   236     009F                     	;# 
   237     010C                     	;# 
   238     010D                     	;# 
   239     010E                     	;# 
   240     010F                     	;# 
   241     018C                     	;# 
   242     018D                     	;# 
   243     0000                     	;# 
   244     0001                     	;# 
   245     0002                     	;# 
   246     0003                     	;# 
   247     0004                     	;# 
   248     0005                     	;# 
   249     0006                     	;# 
   250     0007                     	;# 
   251     0008                     	;# 
   252     0009                     	;# 
   253     000A                     	;# 
   254     000B                     	;# 
   255     000C                     	;# 
   256     000D                     	;# 
   257     000E                     	;# 
   258     000E                     	;# 
   259     000F                     	;# 
   260     0010                     	;# 
   261     0011                     	;# 
   262     0012                     	;# 
   263     0013                     	;# 
   264     0014                     	;# 
   265     0015                     	;# 
   266     0015                     	;# 
   267     0016                     	;# 
   268     0017                     	;# 
   269     0018                     	;# 
   270     0019                     	;# 
   271     001A                     	;# 
   272     001B                     	;# 
   273     001B                     	;# 
   274     001C                     	;# 
   275     001D                     	;# 
   276     001E                     	;# 
   277     001F                     	;# 
   278     0081                     	;# 
   279     0085                     	;# 
   280     0086                     	;# 
   281     0087                     	;# 
   282     0088                     	;# 
   283     0089                     	;# 
   284     008C                     	;# 
   285     008D                     	;# 
   286     008E                     	;# 
   287     0091                     	;# 
   288     0092                     	;# 
   289     0093                     	;# 
   290     0094                     	;# 
   291     0098                     	;# 
   292     0099                     	;# 
   293     009C                     	;# 
   294     009D                     	;# 
   295     009E                     	;# 
   296     009F                     	;# 
   297     010C                     	;# 
   298     010D                     	;# 
   299     010E                     	;# 
   300     010F                     	;# 
   301     018C                     	;# 
   302     018D                     	;# 
   303     0000                     	;# 
   304     0001                     	;# 
   305     0002                     	;# 
   306     0003                     	;# 
   307     0004                     	;# 
   308     0005                     	;# 
   309     0006                     	;# 
   310     0007                     	;# 
   311     0008                     	;# 
   312     0009                     	;# 
   313     000A                     	;# 
   314     000B                     	;# 
   315     000C                     	;# 
   316     000D                     	;# 
   317     000E                     	;# 
   318     000E                     	;# 
   319     000F                     	;# 
   320     0010                     	;# 
   321     0011                     	;# 
   322     0012                     	;# 
   323     0013                     	;# 
   324     0014                     	;# 
   325     0015                     	;# 
   326     0015                     	;# 
   327     0016                     	;# 
   328     0017                     	;# 
   329     0018                     	;# 
   330     0019                     	;# 
   331     001A                     	;# 
   332     001B                     	;# 
   333     001B                     	;# 
   334     001C                     	;# 
   335     001D                     	;# 
   336     001E                     	;# 
   337     001F                     	;# 
   338     0081                     	;# 
   339     0085                     	;# 
   340     0086                     	;# 
   341     0087                     	;# 
   342     0088                     	;# 
   343     0089                     	;# 
   344     008C                     	;# 
   345     008D                     	;# 
   346     008E                     	;# 
   347     0091                     	;# 
   348     0092                     	;# 
   349     0093                     	;# 
   350     0094                     	;# 
   351     0098                     	;# 
   352     0099                     	;# 
   353     009C                     	;# 
   354     009D                     	;# 
   355     009E                     	;# 
   356     009F                     	;# 
   357     010C                     	;# 
   358     010D                     	;# 
   359     010E                     	;# 
   360     010F                     	;# 
   361     018C                     	;# 
   362     018D                     	;# 
   363     0000                     	;# 
   364     0001                     	;# 
   365     0002                     	;# 
   366     0003                     	;# 
   367     0004                     	;# 
   368     0005                     	;# 
   369     0006                     	;# 
   370     0007                     	;# 
   371     0008                     	;# 
   372     0009                     	;# 
   373     000A                     	;# 
   374     000B                     	;# 
   375     000C                     	;# 
   376     000D                     	;# 
   377     000E                     	;# 
   378     000E                     	;# 
   379     000F                     	;# 
   380     0010                     	;# 
   381     0011                     	;# 
   382     0012                     	;# 
   383     0013                     	;# 
   384     0014                     	;# 
   385     0015                     	;# 
   386     0015                     	;# 
   387     0016                     	;# 
   388     0017                     	;# 
   389     0018                     	;# 
   390     0019                     	;# 
   391     001A                     	;# 
   392     001B                     	;# 
   393     001B                     	;# 
   394     001C                     	;# 
   395     001D                     	;# 
   396     001E                     	;# 
   397     001F                     	;# 
   398     0081                     	;# 
   399     0085                     	;# 
   400     0086                     	;# 
   401     0087                     	;# 
   402     0088                     	;# 
   403     0089                     	;# 
   404     008C                     	;# 
   405     008D                     	;# 
   406     008E                     	;# 
   407     0091                     	;# 
   408     0092                     	;# 
   409     0093                     	;# 
   410     0094                     	;# 
   411     0098                     	;# 
   412     0099                     	;# 
   413     009C                     	;# 
   414     009D                     	;# 
   415     009E                     	;# 
   416     009F                     	;# 
   417     010C                     	;# 
   418     010D                     	;# 
   419     010E                     	;# 
   420     010F                     	;# 
   421     018C                     	;# 
   422     018D                     	;# 
   423                           
   424                           	psect	idataBANK0
   425     057B                     __pidataBANK0:
   426                           
   427                           ;initializer for _ballX
   428     057B  3404               	retlw	4
   429     057C  3400               	retlw	0
   430                           
   431                           ;initializer for _ballDirY
   432     057D  3401               	retlw	1
   433     057E  3400               	retlw	0
   434                           
   435                           ;initializer for _ballDirX
   436     057F  34FF               	retlw	255
   437     0580  34FF               	retlw	255
   438                           
   439                           ;initializer for _ballYState
   440     0581  3408               	retlw	8
   441                           
   442                           ;initializer for _p2State
   443     0582  341E               	retlw	30
   444                           
   445                           ;initializer for _p1State
   446     0583  341E               	retlw	30
   447     0006                     _PORTB	set	6
   448     0006                     _PORTBbits	set	6
   449     0039                     _RC1	set	57
   450     003C                     _RC4	set	60
   451     0038                     _RC0	set	56
   452     003A                     _RC2	set	58
   453     0087                     _TRISC	set	135
   454     0086                     _TRISB	set	134
   455     043B                     _TRISC3	set	1083
   456     0439                     _TRISC1	set	1081
   457     043C                     _TRISC4	set	1084
   458     0438                     _TRISC0	set	1080
   459     043A                     _TRISC2	set	1082
   460                           
   461                           	psect	cinit
   462     07EA                     start_initialization:	
   463                           ; #config settings
   464                           
   465     07EA                     __initialization:
   466                           
   467                           ; Initialize objects allocated to BANK0
   468     07EA  1383               	bcf	3,7	;select IRP bank0
   469     07EB  3029               	movlw	low (__pdataBANK0+9)
   470     07EC  00FD               	movwf	btemp+-1
   471     07ED  3005               	movlw	high __pidataBANK0
   472     07EE  00FE               	movwf	btemp
   473     07EF  307B               	movlw	low __pidataBANK0
   474     07F0  00FF               	movwf	btemp+1
   475     07F1  3020               	movlw	low __pdataBANK0
   476     07F2  0084               	movwf	4
   477     07F3  120A  118A  25DE  120A  118A  	fcall	init_ram0
   478                           
   479                           ; Clear objects allocated to BANK0
   480     07F8  01B0               	clrf	__pbssBANK0& (0+127)
   481     07F9  01B1               	clrf	(__pbssBANK0+1)& (0+127)
   482     07FA  01B2               	clrf	(__pbssBANK0+2)& (0+127)
   483     07FB  01B3               	clrf	(__pbssBANK0+3)& (0+127)
   484     07FC                     end_of_initialization:	
   485                           ;End of C runtime variable initialization code
   486                           
   487     07FC                     __end_of__initialization:
   488     07FC  0183               	clrf	3
   489     07FD  120A  118A  2F5F   	ljmp	_main	;jump to C main() function
   490                           
   491                           	psect	bssBANK0
   492     0030                     __pbssBANK0:
   493     0030                     _button3pressed:
   494     0030                     	ds	1
   495     0031                     _button2pressed:
   496     0031                     	ds	1
   497     0032                     _button1pressed:
   498     0032                     	ds	1
   499     0033                     _button0pressed:
   500     0033                     	ds	1
   501                           
   502                           	psect	dataBANK0
   503     0020                     __pdataBANK0:
   504     0020                     _ballX:
   505     0020                     	ds	2
   506     0022                     _ballDirY:
   507     0022                     	ds	2
   508     0024                     _ballDirX:
   509     0024                     	ds	2
   510     0026                     _ballYState:
   511     0026                     	ds	1
   512     0027                     _p2State:
   513     0027                     	ds	1
   514     0028                     _p1State:
   515     0028                     	ds	1
   516                           
   517                           	psect	inittext
   518     05DA                     init_fetch0:	
   519                           ;	Called with low address in FSR and high address in W
   520                           
   521     05DA  087E               	movf	btemp,w
   522     05DB  008A               	movwf	10
   523     05DC  087F               	movf	btemp+1,w
   524     05DD  0082               	movwf	2
   525     05DE                     init_ram0:	
   526                           ;Called with:
   527                           ;	high address of idata address in btemp 
   528                           ;	low address of idata address in btemp+1 
   529                           ;	low address of data in FSR
   530                           ;	high address + 1 of data in btemp-1
   531                           
   532     05DE  120A  118A  25DA  120A  118A  	fcall	init_fetch0
   533     05E3  0080               	movwf	0
   534     05E4  0A84               	incf	4,f
   535     05E5  0804               	movf	4,w
   536     05E6  067D               	xorwf	btemp+-1,w
   537     05E7  1903               	btfsc	3,2
   538     05E8  3400               	retlw	0
   539     05E9  0AFF               	incf	btemp+1,f
   540     05EA  1903               	btfsc	3,2
   541     05EB  0AFE               	incf	btemp,f
   542     05EC  2DDE               	goto	init_ram0
   543                           
   544                           	psect	cstackCOMMON
   545     0070                     __pcstackCOMMON:
   546     0070                     ?_MAX7219_init:
   547     0070                     ?_MAX7219_config:	
   548                           ; 1 bytes @ 0x0
   549                           
   550     0070                     ?_readButton0State:	
   551                           ; 1 bytes @ 0x0
   552                           
   553     0070                     ??_readButton0State:	
   554                           ; 1 bytes @ 0x0
   555                           
   556     0070                     ?_readButton1State:	
   557                           ; 1 bytes @ 0x0
   558                           
   559     0070                     ??_readButton1State:	
   560                           ; 1 bytes @ 0x0
   561                           
   562     0070                     ?_readButton2State:	
   563                           ; 1 bytes @ 0x0
   564                           
   565     0070                     ??_readButton2State:	
   566                           ; 1 bytes @ 0x0
   567                           
   568     0070                     ?_readButton3State:	
   569                           ; 1 bytes @ 0x0
   570                           
   571     0070                     ??_readButton3State:	
   572                           ; 1 bytes @ 0x0
   573                           
   574     0070                     ?_initPorts:	
   575                           ; 1 bytes @ 0x0
   576                           
   577     0070                     ?_initGame:	
   578                           ; 1 bytes @ 0x0
   579                           
   580     0070                     ?_buttonGoUp:	
   581                           ; 1 bytes @ 0x0
   582                           
   583     0070                     ??_buttonGoUp:	
   584                           ; 1 bytes @ 0x0
   585                           
   586     0070                     ?_buttonGoDown:	
   587                           ; 1 bytes @ 0x0
   588                           
   589     0070                     ??_buttonGoDown:	
   590                           ; 1 bytes @ 0x0
   591                           
   592     0070                     ?_updateBallPosition:	
   593                           ; 1 bytes @ 0x0
   594                           
   595     0070                     ?_SPI_init:	
   596                           ; 1 bytes @ 0x0
   597                           
   598     0070                     ??_SPI_init:	
   599                           ; 1 bytes @ 0x0
   600                           
   601     0070                     ?_SPI_write:	
   602                           ; 1 bytes @ 0x0
   603                           
   604     0070                     ??_SPI_write:	
   605                           ; 1 bytes @ 0x0
   606                           
   607     0070                     MAX7219_config@chip:	
   608                           ; 1 bytes @ 0x0
   609                           
   610                           
   611                           ; 1 bytes @ 0x0
   612     0070                     	ds	1
   613     0071                     buttonGoUp@currentState:
   614     0071                     buttonGoDown@currentState:	
   615                           ; 1 bytes @ 0x1
   616                           
   617                           
   618                           ; 1 bytes @ 0x1
   619     0071                     	ds	1
   620     0072                     SPI_write@send:
   621                           
   622                           ; 1 bytes @ 0x2
   623     0072                     	ds	1
   624     0073                     SPI_write@Tx:
   625                           
   626                           ; 2 bytes @ 0x3
   627     0073                     	ds	2
   628     0075                     ?_MAX7219_write:
   629     0075                     MAX7219_write@data:	
   630                           ; 1 bytes @ 0x5
   631                           
   632                           
   633                           ; 1 bytes @ 0x5
   634     0075                     	ds	1
   635     0076                     ??_MAX7219_write:
   636     0076                     MAX7219_write@regName:	
   637                           ; 1 bytes @ 0x6
   638                           
   639                           
   640                           ; 1 bytes @ 0x6
   641     0076                     	ds	1
   642     0077                     ??_MAX7219_init:
   643     0077                     ??_MAX7219_config:	
   644                           ; 1 bytes @ 0x7
   645                           
   646     0077                     ??_initGame:	
   647                           ; 1 bytes @ 0x7
   648                           
   649     0077                     ?_updatePlayerPosition:	
   650                           ; 1 bytes @ 0x7
   651                           
   652     0077                     ??_updateBallPosition:	
   653                           ; 1 bytes @ 0x7
   654                           
   655     0077                     MAX7219_init@noChips:	
   656                           ; 1 bytes @ 0x7
   657                           
   658     0077                     updatePlayerPosition@player:	
   659                           ; 1 bytes @ 0x7
   660                           
   661                           
   662                           ; 2 bytes @ 0x7
   663     0077                     	ds	1
   664     0078                     ??_initPorts:
   665                           
   666                           ; 1 bytes @ 0x8
   667     0078                     	ds	1
   668     0079                     updatePlayerPosition@direction:
   669                           
   670                           ; 2 bytes @ 0x9
   671     0079                     	ds	1
   672     007A                     updateBallPosition@ballXprev:
   673                           
   674                           ; 2 bytes @ 0xA
   675     007A                     	ds	1
   676     007B                     ??_updatePlayerPosition:
   677                           
   678                           ; 1 bytes @ 0xB
   679     007B                     	ds	1
   680     007C                     _updateBallPosition$98:
   681                           
   682                           ; 2 bytes @ 0xC
   683     007C                     	ds	2
   684                           
   685                           	psect	cstackBANK0
   686     0029                     __pcstackBANK0:
   687     0029                     ?_main:
   688     0029                     main@argc:	
   689                           ; 2 bytes @ 0x0
   690                           
   691                           
   692                           ; 2 bytes @ 0x0
   693     0029                     	ds	2
   694     002B                     main@argv:
   695                           
   696                           ; 2 bytes @ 0x2
   697     002B                     	ds	2
   698     002D                     ??_main:
   699                           
   700                           ; 1 bytes @ 0x4
   701     002D                     	ds	3
   702                           
   703                           	psect	maintext
   704     075F                     __pmaintext:	
   705 ;;
   706 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   707 ;;
   708 ;; *************** function _main *****************
   709 ;; Defined at:
   710 ;;		line 139 in file "main.c"
   711 ;; Parameters:    Size  Location     Type
   712 ;;  argc            2    0[BANK0 ] int 
   713 ;;  argv            2    2[BANK0 ] PTR PTR unsigned char 
   714 ;; Auto vars:     Size  Location     Type
   715 ;;		None
   716 ;; Return value:  Size  Location     Type
   717 ;;                  2    0[BANK0 ] int 
   718 ;; Registers used:
   719 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   720 ;; Tracked objects:
   721 ;;		On entry : B00/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   725 ;;      Params:         0       4       0       0       0
   726 ;;      Locals:         0       0       0       0       0
   727 ;;      Temps:          0       3       0       0       0
   728 ;;      Totals:         0       7       0       0       0
   729 ;;Total ram usage:        7 bytes
   730 ;; Hardware stack levels required when called: 5
   731 ;; This function calls:
   732 ;;		_initGame
   733 ;;		_initPorts
   734 ;;		_readButton0State
   735 ;;		_readButton1State
   736 ;;		_readButton2State
   737 ;;		_readButton3State
   738 ;;		_updateBallPosition
   739 ;;		_updatePlayerPosition
   740 ;; This function is called by:
   741 ;;		Startup code after reset
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745     075F                     _main:	
   746                           ;psect for function _main
   747                           
   748     075F                     l1083:	
   749                           ;incstack = 0
   750                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   751                           
   752                           
   753                           ;main.c: 140:     initPorts();
   754     075F  120A  118A  25CB  120A  118A  	fcall	_initPorts
   755                           
   756                           ;main.c: 141:     initGame();
   757     0764  120A  118A  2616  120A  118A  	fcall	_initGame
   758     0769                     l1085:
   759                           
   760                           ;main.c: 145:         _delay((unsigned long)((10)*(800000000/4000.0)));
   761     0769  300B               	movlw	11
   762     076A  1283               	bcf	3,5	;RP0=0, select bank0
   763     076B  1303               	bcf	3,6	;RP1=0, select bank0
   764     076C  00AF               	movwf	??_main+2
   765     076D  3026               	movlw	38
   766     076E  00AE               	movwf	??_main+1
   767     076F  305D               	movlw	93
   768     0770  00AD               	movwf	??_main
   769     0771                     u517:
   770     0771  0BAD               	decfsz	??_main,f
   771     0772  2F71               	goto	u517
   772     0773  0BAE               	decfsz	??_main+1,f
   773     0774  2F71               	goto	u517
   774     0775  0BAF               	decfsz	??_main+2,f
   775     0776  2F71               	goto	u517
   776     0777                     l1087:
   777                           
   778                           ;main.c: 146:         button0pressed = readButton0State();
   779     0777  120A  118A  2584  120A  118A  	fcall	_readButton0State
   780     077C  1283               	bcf	3,5	;RP0=0, select bank0
   781     077D  1303               	bcf	3,6	;RP1=0, select bank0
   782     077E  00B3               	movwf	_button0pressed
   783     077F                     l1089:
   784                           
   785                           ;main.c: 147:         button1pressed = readButton1State();
   786     077F  120A  118A  258F  120A  118A  	fcall	_readButton1State
   787     0784  1283               	bcf	3,5	;RP0=0, select bank0
   788     0785  1303               	bcf	3,6	;RP1=0, select bank0
   789     0786  00B2               	movwf	_button1pressed
   790     0787                     l1091:
   791                           
   792                           ;main.c: 148:         button2pressed = readButton2State();
   793     0787  120A  118A  259A  120A  118A  	fcall	_readButton2State
   794     078C  1283               	bcf	3,5	;RP0=0, select bank0
   795     078D  1303               	bcf	3,6	;RP1=0, select bank0
   796     078E  00B1               	movwf	_button2pressed
   797     078F                     l1093:
   798                           
   799                           ;main.c: 149:         button3pressed = readButton3State();
   800     078F  120A  118A  25A5  120A  118A  	fcall	_readButton3State
   801     0794  1283               	bcf	3,5	;RP0=0, select bank0
   802     0795  1303               	bcf	3,6	;RP1=0, select bank0
   803     0796  00B0               	movwf	_button3pressed
   804     0797                     l1095:
   805                           
   806                           ;main.c: 152:         if (button0pressed) {
   807     0797  0833               	movf	_button0pressed,w
   808     0798  1903               	btfsc	3,2
   809     0799  2F9B               	goto	u461
   810     079A  2F9C               	goto	u460
   811     079B                     u461:
   812     079B  2FAA               	goto	l1099
   813     079C                     u460:
   814     079C                     l1097:
   815                           
   816                           ;main.c: 153:             updatePlayerPosition(1, 1);
   817     079C  3001               	movlw	1
   818     079D  00F7               	movwf	updatePlayerPosition@player
   819     079E  3000               	movlw	0
   820     079F  00F8               	movwf	updatePlayerPosition@player+1
   821     07A0  3001               	movlw	1
   822     07A1  00F9               	movwf	updatePlayerPosition@direction
   823     07A2  3000               	movlw	0
   824     07A3  00FA               	movwf	updatePlayerPosition@direction+1
   825     07A4  120A  118A  2692  120A  118A  	fcall	_updatePlayerPosition
   826                           
   827                           ;main.c: 154:         } else if (button1pressed) {
   828     07A9  2FBB               	goto	l1103
   829     07AA                     l1099:
   830     07AA  0832               	movf	_button1pressed,w
   831     07AB  1903               	btfsc	3,2
   832     07AC  2FAE               	goto	u471
   833     07AD  2FAF               	goto	u470
   834     07AE                     u471:
   835     07AE  2FBB               	goto	l1103
   836     07AF                     u470:
   837     07AF                     l1101:
   838                           
   839                           ;main.c: 155:             updatePlayerPosition(1, 0);
   840     07AF  3001               	movlw	1
   841     07B0  00F7               	movwf	updatePlayerPosition@player
   842     07B1  3000               	movlw	0
   843     07B2  00F8               	movwf	updatePlayerPosition@player+1
   844     07B3  3000               	movlw	0
   845     07B4  00F9               	movwf	updatePlayerPosition@direction
   846     07B5  00FA               	movwf	updatePlayerPosition@direction+1
   847     07B6  120A  118A  2692  120A  118A  	fcall	_updatePlayerPosition
   848     07BB                     l1103:
   849                           
   850                           ;main.c: 159:         if (button2pressed) {
   851     07BB  1283               	bcf	3,5	;RP0=0, select bank0
   852     07BC  1303               	bcf	3,6	;RP1=0, select bank0
   853     07BD  0831               	movf	_button2pressed,w
   854     07BE  1903               	btfsc	3,2
   855     07BF  2FC1               	goto	u481
   856     07C0  2FC2               	goto	u480
   857     07C1                     u481:
   858     07C1  2FD0               	goto	l1107
   859     07C2                     u480:
   860     07C2                     l1105:
   861                           
   862                           ;main.c: 160:             updatePlayerPosition(2, 1);
   863     07C2  3002               	movlw	2
   864     07C3  00F7               	movwf	updatePlayerPosition@player
   865     07C4  3000               	movlw	0
   866     07C5  00F8               	movwf	updatePlayerPosition@player+1
   867     07C6  3001               	movlw	1
   868     07C7  00F9               	movwf	updatePlayerPosition@direction
   869     07C8  3000               	movlw	0
   870     07C9  00FA               	movwf	updatePlayerPosition@direction+1
   871     07CA  120A  118A  2692  120A  118A  	fcall	_updatePlayerPosition
   872                           
   873                           ;main.c: 161:         } else if (button3pressed) {
   874     07CF  2FE1               	goto	l96
   875     07D0                     l1107:
   876     07D0  0830               	movf	_button3pressed,w
   877     07D1  1903               	btfsc	3,2
   878     07D2  2FD4               	goto	u491
   879     07D3  2FD5               	goto	u490
   880     07D4                     u491:
   881     07D4  2FE1               	goto	l96
   882     07D5                     u490:
   883     07D5                     l1109:
   884                           
   885                           ;main.c: 162:             updatePlayerPosition(2, 0);
   886     07D5  3002               	movlw	2
   887     07D6  00F7               	movwf	updatePlayerPosition@player
   888     07D7  3000               	movlw	0
   889     07D8  00F8               	movwf	updatePlayerPosition@player+1
   890     07D9  3000               	movlw	0
   891     07DA  00F9               	movwf	updatePlayerPosition@direction
   892     07DB  00FA               	movwf	updatePlayerPosition@direction+1
   893     07DC  120A  118A  2692  120A  118A  	fcall	_updatePlayerPosition
   894     07E1                     l96:
   895                           
   896                           ;main.c: 164:         updateBallPosition();
   897     07E1  120A  118A  26F4  120A  118A  	fcall	_updateBallPosition
   898     07E6  2F69               	goto	l1085
   899     07E7  120A  118A  2800   	ljmp	start
   900     07EA                     __end_of_main:
   901                           
   902                           	psect	text1
   903     0692                     __ptext1:	
   904 ;; *************** function _updatePlayerPosition *****************
   905 ;; Defined at:
   906 ;;		line 102 in file "main.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;  player          2    7[COMMON] int 
   909 ;;  direction       2    9[COMMON] int 
   910 ;; Auto vars:     Size  Location     Type
   911 ;;		None
   912 ;; Return value:  Size  Location     Type
   913 ;;                  1    wreg      void 
   914 ;; Registers used:
   915 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   916 ;; Tracked objects:
   917 ;;		On entry : 0/0
   918 ;;		On exit  : 0/0
   919 ;;		Unchanged: 0/0
   920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   921 ;;      Params:         4       0       0       0       0
   922 ;;      Locals:         0       0       0       0       0
   923 ;;      Temps:          0       0       0       0       0
   924 ;;      Totals:         4       0       0       0       0
   925 ;;Total ram usage:        4 bytes
   926 ;; Hardware stack levels used: 1
   927 ;; Hardware stack levels required when called: 2
   928 ;; This function calls:
   929 ;;		_MAX7219_write
   930 ;;		_buttonGoDown
   931 ;;		_buttonGoUp
   932 ;; This function is called by:
   933 ;;		_main
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937     0692                     _updatePlayerPosition:	
   938                           ;psect for function _updatePlayerPosition
   939                           
   940     0692                     l1035:	
   941                           ;incstack = 0
   942                           ; Regs used in _updatePlayerPosition: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   943                           
   944                           
   945                           ;main.c: 103:     if (player == 1) {
   946     0692  0377               	decf	updatePlayerPosition@player,w
   947     0693  0478               	iorwf	updatePlayerPosition@player+1,w
   948     0694  1D03               	btfss	3,2
   949     0695  2E97               	goto	u381
   950     0696  2E98               	goto	u380
   951     0697                     u381:
   952     0697  2EC6               	goto	l1047
   953     0698                     u380:
   954     0698                     l1037:
   955                           
   956                           ;main.c: 104:         if (direction == 1) {
   957     0698  0379               	decf	updatePlayerPosition@direction,w
   958     0699  047A               	iorwf	updatePlayerPosition@direction+1,w
   959     069A  1D03               	btfss	3,2
   960     069B  2E9D               	goto	u391
   961     069C  2E9E               	goto	u390
   962     069D                     u391:
   963     069D  2EB2               	goto	l1043
   964     069E                     u390:
   965     069E                     l1039:
   966                           
   967                           ;main.c: 105:             p1State = buttonGoUp(p1State);
   968     069E  1283               	bcf	3,5	;RP0=0, select bank0
   969     069F  1303               	bcf	3,6	;RP1=0, select bank0
   970     06A0  0828               	movf	_p1State,w
   971     06A1  120A  118A  25B0  120A  118A  	fcall	_buttonGoUp
   972     06A6  1283               	bcf	3,5	;RP0=0, select bank0
   973     06A7  1303               	bcf	3,6	;RP1=0, select bank0
   974     06A8  00A8               	movwf	_p1State
   975     06A9                     l1041:
   976                           
   977                           ;main.c: 106:             MAX7219_write(8, p1State);
   978     06A9  0828               	movf	_p1State,w
   979     06AA  00F5               	movwf	MAX7219_write@data
   980     06AB  3008               	movlw	8
   981     06AC  120A  118A  25ED  120A  118A  	fcall	_MAX7219_write
   982                           
   983                           ;main.c: 107:         } else {
   984     06B1  2EF3               	goto	l73
   985     06B2                     l1043:
   986                           
   987                           ;main.c: 108:             p1State = buttonGoDown(p1State);
   988     06B2  1283               	bcf	3,5	;RP0=0, select bank0
   989     06B3  1303               	bcf	3,6	;RP1=0, select bank0
   990     06B4  0828               	movf	_p1State,w
   991     06B5  120A  118A  25BD  120A  118A  	fcall	_buttonGoDown
   992     06BA  1283               	bcf	3,5	;RP0=0, select bank0
   993     06BB  1303               	bcf	3,6	;RP1=0, select bank0
   994     06BC  00A8               	movwf	_p1State
   995     06BD                     l1045:
   996                           
   997                           ;main.c: 109:             MAX7219_write(8, p1State);
   998     06BD  0828               	movf	_p1State,w
   999     06BE  00F5               	movwf	MAX7219_write@data
  1000     06BF  3008               	movlw	8
  1001     06C0  120A  118A  25ED  120A  118A  	fcall	_MAX7219_write
  1002     06C5  2EF3               	goto	l73
  1003     06C6                     l1047:
  1004                           
  1005                           ;main.c: 112:         if (direction == 1) {
  1006     06C6  0379               	decf	updatePlayerPosition@direction,w
  1007     06C7  047A               	iorwf	updatePlayerPosition@direction+1,w
  1008     06C8  1D03               	btfss	3,2
  1009     06C9  2ECB               	goto	u401
  1010     06CA  2ECC               	goto	u400
  1011     06CB                     u401:
  1012     06CB  2EE0               	goto	l1053
  1013     06CC                     u400:
  1014     06CC                     l1049:
  1015                           
  1016                           ;main.c: 113:             p2State = buttonGoUp(p2State);
  1017     06CC  1283               	bcf	3,5	;RP0=0, select bank0
  1018     06CD  1303               	bcf	3,6	;RP1=0, select bank0
  1019     06CE  0827               	movf	_p2State,w
  1020     06CF  120A  118A  25B0  120A  118A  	fcall	_buttonGoUp
  1021     06D4  1283               	bcf	3,5	;RP0=0, select bank0
  1022     06D5  1303               	bcf	3,6	;RP1=0, select bank0
  1023     06D6  00A7               	movwf	_p2State
  1024     06D7                     l1051:
  1025                           
  1026                           ;main.c: 114:             MAX7219_write(1, p2State);
  1027     06D7  0827               	movf	_p2State,w
  1028     06D8  00F5               	movwf	MAX7219_write@data
  1029     06D9  3001               	movlw	1
  1030     06DA  120A  118A  25ED  120A  118A  	fcall	_MAX7219_write
  1031                           
  1032                           ;main.c: 115:         } else {
  1033     06DF  2EF3               	goto	l73
  1034     06E0                     l1053:
  1035                           
  1036                           ;main.c: 116:             p2State = buttonGoDown(p2State);
  1037     06E0  1283               	bcf	3,5	;RP0=0, select bank0
  1038     06E1  1303               	bcf	3,6	;RP1=0, select bank0
  1039     06E2  0827               	movf	_p2State,w
  1040     06E3  120A  118A  25BD  120A  118A  	fcall	_buttonGoDown
  1041     06E8  1283               	bcf	3,5	;RP0=0, select bank0
  1042     06E9  1303               	bcf	3,6	;RP1=0, select bank0
  1043     06EA  00A7               	movwf	_p2State
  1044     06EB                     l1055:
  1045                           
  1046                           ;main.c: 117:             MAX7219_write(1, p2State);
  1047     06EB  0827               	movf	_p2State,w
  1048     06EC  00F5               	movwf	MAX7219_write@data
  1049     06ED  3001               	movlw	1
  1050     06EE  120A  118A  25ED  120A  118A  	fcall	_MAX7219_write
  1051     06F3                     l73:
  1052     06F3  0008               	return
  1053     06F4                     __end_of_updatePlayerPosition:
  1054                           
  1055                           	psect	text2
  1056     05B0                     __ptext2:	
  1057 ;; *************** function _buttonGoUp *****************
  1058 ;; Defined at:
  1059 ;;		line 88 in file "main.c"
  1060 ;; Parameters:    Size  Location     Type
  1061 ;;  currentState    1    wreg     unsigned char 
  1062 ;; Auto vars:     Size  Location     Type
  1063 ;;  currentState    1    1[COMMON] unsigned char 
  1064 ;; Return value:  Size  Location     Type
  1065 ;;                  1    wreg      unsigned char 
  1066 ;; Registers used:
  1067 ;;		wreg, status,2, status,0
  1068 ;; Tracked objects:
  1069 ;;		On entry : 0/0
  1070 ;;		On exit  : 0/0
  1071 ;;		Unchanged: 0/0
  1072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1073 ;;      Params:         0       0       0       0       0
  1074 ;;      Locals:         1       0       0       0       0
  1075 ;;      Temps:          1       0       0       0       0
  1076 ;;      Totals:         2       0       0       0       0
  1077 ;;Total ram usage:        2 bytes
  1078 ;; Hardware stack levels used: 1
  1079 ;; This function calls:
  1080 ;;		Nothing
  1081 ;; This function is called by:
  1082 ;;		_updatePlayerPosition
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086     05B0                     _buttonGoUp:	
  1087                           ;psect for function _buttonGoUp
  1088                           
  1089                           
  1090                           ;incstack = 0
  1091                           ; Regs used in _buttonGoUp: [wreg+status,2+status,0]
  1092                           ;buttonGoUp@currentState stored from wreg
  1093     05B0  00F1               	movwf	buttonGoUp@currentState
  1094     05B1                     l951:
  1095                           
  1096                           ;main.c: 89:     if (currentState & (0b00001000 | 0b00010000 | 0b00100000 | 0b01000000))
      +                           {
  1097     05B1  0871               	movf	buttonGoUp@currentState,w
  1098     05B2  3978               	andlw	120
  1099     05B3  1903               	btfsc	3,2
  1100     05B4  2DB6               	goto	u321
  1101     05B5  2DB7               	goto	u320
  1102     05B6                     u321:
  1103     05B6  2DB9               	goto	l957
  1104     05B7                     u320:
  1105     05B7                     l953:
  1106                           
  1107                           ;main.c: 90:         return currentState;
  1108     05B7  0871               	movf	buttonGoUp@currentState,w
  1109     05B8  2DBC               	goto	l60
  1110     05B9                     l957:
  1111                           
  1112                           ;main.c: 92:     return currentState << 1;
  1113     05B9  0871               	movf	buttonGoUp@currentState,w
  1114     05BA  00F0               	movwf	??_buttonGoUp
  1115     05BB  0770               	addwf	??_buttonGoUp,w
  1116     05BC                     l60:
  1117     05BC  0008               	return
  1118     05BD                     __end_of_buttonGoUp:
  1119                           
  1120                           	psect	text3
  1121     05BD                     __ptext3:	
  1122 ;; *************** function _buttonGoDown *****************
  1123 ;; Defined at:
  1124 ;;		line 95 in file "main.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;  currentState    1    wreg     unsigned char 
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;  currentState    1    1[COMMON] unsigned char 
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  1    wreg      unsigned char 
  1131 ;; Registers used:
  1132 ;;		wreg, status,2, status,0
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1138 ;;      Params:         0       0       0       0       0
  1139 ;;      Locals:         1       0       0       0       0
  1140 ;;      Temps:          1       0       0       0       0
  1141 ;;      Totals:         2       0       0       0       0
  1142 ;;Total ram usage:        2 bytes
  1143 ;; Hardware stack levels used: 1
  1144 ;; This function calls:
  1145 ;;		Nothing
  1146 ;; This function is called by:
  1147 ;;		_updatePlayerPosition
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151     05BD                     _buttonGoDown:	
  1152                           ;psect for function _buttonGoDown
  1153                           
  1154                           
  1155                           ;incstack = 0
  1156                           ; Regs used in _buttonGoDown: [wreg+status,2+status,0]
  1157                           ;buttonGoDown@currentState stored from wreg
  1158     05BD  00F1               	movwf	buttonGoDown@currentState
  1159     05BE                     l961:
  1160                           
  1161                           ;main.c: 96:     if (currentState & (0b10000000 | 0b00000001 | 0b00000010 | 0b00000100))
      +                           {
  1162     05BE  0871               	movf	buttonGoDown@currentState,w
  1163     05BF  3987               	andlw	135
  1164     05C0  1903               	btfsc	3,2
  1165     05C1  2DC3               	goto	u331
  1166     05C2  2DC4               	goto	u330
  1167     05C3                     u331:
  1168     05C3  2DC6               	goto	l967
  1169     05C4                     u330:
  1170     05C4                     l963:
  1171                           
  1172                           ;main.c: 97:         return currentState;
  1173     05C4  0871               	movf	buttonGoDown@currentState,w
  1174     05C5  2DCA               	goto	l64
  1175     05C6                     l967:
  1176                           
  1177                           ;main.c: 99:     return currentState >> 1;
  1178     05C6  0871               	movf	buttonGoDown@currentState,w
  1179     05C7  00F0               	movwf	??_buttonGoDown
  1180     05C8  1003               	clrc
  1181     05C9  0C70               	rrf	??_buttonGoDown,w
  1182     05CA                     l64:
  1183     05CA  0008               	return
  1184     05CB                     __end_of_buttonGoDown:
  1185                           
  1186                           	psect	text4
  1187     06F4                     __ptext4:	
  1188 ;; *************** function _updateBallPosition *****************
  1189 ;; Defined at:
  1190 ;;		line 122 in file "main.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;		None
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;  ballXprev       2   10[COMMON] int 
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  1    wreg      void 
  1197 ;; Registers used:
  1198 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1204 ;;      Params:         0       0       0       0       0
  1205 ;;      Locals:         4       0       0       0       0
  1206 ;;      Temps:          3       0       0       0       0
  1207 ;;      Totals:         7       0       0       0       0
  1208 ;;Total ram usage:        7 bytes
  1209 ;; Hardware stack levels used: 1
  1210 ;; Hardware stack levels required when called: 2
  1211 ;; This function calls:
  1212 ;;		_MAX7219_write
  1213 ;; This function is called by:
  1214 ;;		_main
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218     06F4                     _updateBallPosition:	
  1219                           ;psect for function _updateBallPosition
  1220                           
  1221     06F4                     l1057:	
  1222                           ;incstack = 0
  1223                           ; Regs used in _updateBallPosition: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1224                           
  1225                           
  1226                           ;main.c: 123:     int ballXprev= ballX;
  1227     06F4  1283               	bcf	3,5	;RP0=0, select bank0
  1228     06F5  1303               	bcf	3,6	;RP1=0, select bank0
  1229     06F6  0821               	movf	_ballX+1,w
  1230     06F7  00FB               	movwf	updateBallPosition@ballXprev+1
  1231     06F8  0820               	movf	_ballX,w
  1232     06F9  00FA               	movwf	updateBallPosition@ballXprev
  1233     06FA                     l1059:
  1234                           
  1235                           ;main.c: 125:     if (ballX < 1 || ballX > 8) {
  1236     06FA  0821               	movf	_ballX+1,w
  1237     06FB  3A80               	xorlw	128
  1238     06FC  00FF               	movwf	btemp+1
  1239     06FD  3080               	movlw	128
  1240     06FE  027F               	subwf	btemp+1,w
  1241     06FF  1D03               	skipz
  1242     0700  2F03               	goto	u415
  1243     0701  3001               	movlw	1
  1244     0702  0220               	subwf	_ballX,w
  1245     0703                     u415:
  1246     0703  1C03               	skipc
  1247     0704  2F06               	goto	u411
  1248     0705  2F07               	goto	u410
  1249     0706                     u411:
  1250     0706  2F16               	goto	l1063
  1251     0707                     u410:
  1252     0707                     l1061:
  1253     0707  1283               	bcf	3,5	;RP0=0, select bank0
  1254     0708  1303               	bcf	3,6	;RP1=0, select bank0
  1255     0709  0821               	movf	_ballX+1,w
  1256     070A  3A80               	xorlw	128
  1257     070B  00FF               	movwf	btemp+1
  1258     070C  3080               	movlw	128
  1259     070D  027F               	subwf	btemp+1,w
  1260     070E  1D03               	skipz
  1261     070F  2F12               	goto	u425
  1262     0710  3009               	movlw	9
  1263     0711  0220               	subwf	_ballX,w
  1264     0712                     u425:
  1265     0712  1C03               	skipc
  1266     0713  2F15               	goto	u421
  1267     0714  2F16               	goto	u420
  1268     0715                     u421:
  1269     0715  2F1D               	goto	l1065
  1270     0716                     u420:
  1271     0716                     l1063:
  1272                           
  1273                           ;main.c: 126:         ballDirX = -ballDirX;
  1274     0716  1283               	bcf	3,5	;RP0=0, select bank0
  1275     0717  1303               	bcf	3,6	;RP1=0, select bank0
  1276     0718  09A4               	comf	_ballDirX,f
  1277     0719  09A5               	comf	_ballDirX+1,f
  1278     071A  0AA4               	incf	_ballDirX,f
  1279     071B  1903               	skipnz
  1280     071C  0AA5               	incf	_ballDirX+1,f
  1281     071D                     l1065:
  1282                           
  1283                           ;main.c: 128:     ballX += ballDirX;
  1284     071D  1283               	bcf	3,5	;RP0=0, select bank0
  1285     071E  1303               	bcf	3,6	;RP1=0, select bank0
  1286     071F  0824               	movf	_ballDirX,w
  1287     0720  07A0               	addwf	_ballX,f
  1288     0721  1803               	skipnc
  1289     0722  0AA1               	incf	_ballX+1,f
  1290     0723  0825               	movf	_ballDirX+1,w
  1291     0724  07A1               	addwf	_ballX+1,f
  1292     0725                     l1067:
  1293                           
  1294                           ;main.c: 130:     if ((ballYState & 0b10000000) || (ballYState & 0b01000000)) {
  1295     0725  1BA6               	btfsc	_ballYState,7
  1296     0726  2F28               	goto	u431
  1297     0727  2F29               	goto	u430
  1298     0728                     u431:
  1299     0728  2F2D               	goto	l1071
  1300     0729                     u430:
  1301     0729                     l1069:
  1302     0729  1F26               	btfss	_ballYState,6
  1303     072A  2F2C               	goto	u441
  1304     072B  2F2D               	goto	u440
  1305     072C                     u441:
  1306     072C  2F32               	goto	l1073
  1307     072D                     u440:
  1308     072D                     l1071:
  1309                           
  1310                           ;main.c: 131:         ballDirY = -ballDirY;
  1311     072D  09A2               	comf	_ballDirY,f
  1312     072E  09A3               	comf	_ballDirY+1,f
  1313     072F  0AA2               	incf	_ballDirY,f
  1314     0730  1903               	skipnz
  1315     0731  0AA3               	incf	_ballDirY+1,f
  1316     0732                     l1073:
  1317                           
  1318                           ;main.c: 133:     ballYState = (ballDirY == 1) ? ballYState << 1 : ballYState >> 1;
  1319     0732  0322               	decf	_ballDirY,w
  1320     0733  0423               	iorwf	_ballDirY+1,w
  1321     0734  1903               	btfsc	3,2
  1322     0735  2F37               	goto	u451
  1323     0736  2F38               	goto	u450
  1324     0737                     u451:
  1325     0737  2F43               	goto	l1077
  1326     0738                     u450:
  1327     0738                     l1075:
  1328     0738  0826               	movf	_ballYState,w
  1329     0739  00F7               	movwf	??_updateBallPosition
  1330     073A  1003               	clrc
  1331     073B  0C77               	rrf	??_updateBallPosition,w
  1332     073C  00F8               	movwf	??_updateBallPosition+1
  1333     073D  01F9               	clrf	??_updateBallPosition+2
  1334     073E  0878               	movf	??_updateBallPosition+1,w
  1335     073F  00FC               	movwf	_updateBallPosition$98
  1336     0740  0879               	movf	??_updateBallPosition+2,w
  1337     0741  00FD               	movwf	_updateBallPosition$98+1
  1338     0742  2F4B               	goto	l85
  1339     0743                     l1077:
  1340     0743  0826               	movf	_ballYState,w
  1341     0744  00F7               	movwf	??_updateBallPosition
  1342     0745  01F8               	clrf	??_updateBallPosition+1
  1343     0746  1003               	clrc
  1344     0747  0D77               	rlf	??_updateBallPosition,w
  1345     0748  00FC               	movwf	_updateBallPosition$98
  1346     0749  0D78               	rlf	??_updateBallPosition+1,w
  1347     074A  00FD               	movwf	_updateBallPosition$98+1
  1348     074B                     l85:
  1349     074B  087C               	movf	_updateBallPosition$98,w
  1350     074C  00A6               	movwf	_ballYState
  1351     074D                     l1079:
  1352                           
  1353                           ;main.c: 135:     MAX7219_write(ballXprev, 0b00000000);
  1354     074D  01F5               	clrf	MAX7219_write@data
  1355     074E  087A               	movf	updateBallPosition@ballXprev,w
  1356     074F  120A  118A  25ED  120A  118A  	fcall	_MAX7219_write
  1357     0754                     l1081:
  1358                           
  1359                           ;main.c: 136:     MAX7219_write(ballX, ballYState);
  1360     0754  1283               	bcf	3,5	;RP0=0, select bank0
  1361     0755  1303               	bcf	3,6	;RP1=0, select bank0
  1362     0756  0826               	movf	_ballYState,w
  1363     0757  00F5               	movwf	MAX7219_write@data
  1364     0758  0820               	movf	_ballX,w
  1365     0759  120A  118A  25ED  120A  118A  	fcall	_MAX7219_write
  1366     075E                     l86:
  1367     075E  0008               	return
  1368     075F                     __end_of_updateBallPosition:
  1369                           
  1370                           	psect	text5
  1371     05A5                     __ptext5:	
  1372 ;; *************** function _readButton3State *****************
  1373 ;; Defined at:
  1374 ;;		line 65 in file "main.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;		None
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;		None
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  1    wreg      _Bool 
  1381 ;; Registers used:
  1382 ;;		wreg
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1388 ;;      Params:         0       0       0       0       0
  1389 ;;      Locals:         0       0       0       0       0
  1390 ;;      Temps:          0       0       0       0       0
  1391 ;;      Totals:         0       0       0       0       0
  1392 ;;Total ram usage:        0 bytes
  1393 ;; Hardware stack levels used: 1
  1394 ;; This function calls:
  1395 ;;		Nothing
  1396 ;; This function is called by:
  1397 ;;		_main
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401     05A5                     _readButton3State:	
  1402                           ;psect for function _readButton3State
  1403                           
  1404     05A5                     l1007:	
  1405                           ;incstack = 0
  1406                           ; Regs used in _readButton3State: [wreg]
  1407                           
  1408                           
  1409                           ;main.c: 66:     if (PORTBbits.RB3 == 1) {
  1410     05A5  1283               	bcf	3,5	;RP0=0, select bank0
  1411     05A6  1303               	bcf	3,6	;RP1=0, select bank0
  1412     05A7  1D86               	btfss	6,3	;volatile
  1413     05A8  2DAA               	goto	u371
  1414     05A9  2DAB               	goto	u370
  1415     05AA                     u371:
  1416     05AA  2DAE               	goto	l1015
  1417     05AB                     u370:
  1418     05AB                     l1009:
  1419                           
  1420                           ;main.c: 67:         PORTBbits.RB3 = 0 ;
  1421     05AB  1186               	bcf	6,3	;volatile
  1422     05AC                     l1011:
  1423                           
  1424                           ;main.c: 68:         return 1;
  1425     05AC  3001               	movlw	1
  1426     05AD  2DAF               	goto	l50
  1427     05AE                     l1015:
  1428                           
  1429                           ;main.c: 70:     return 0;
  1430     05AE  3000               	movlw	0
  1431     05AF                     l50:
  1432     05AF  0008               	return
  1433     05B0                     __end_of_readButton3State:
  1434                           
  1435                           	psect	text6
  1436     059A                     __ptext6:	
  1437 ;; *************** function _readButton2State *****************
  1438 ;; Defined at:
  1439 ;;		line 57 in file "main.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;		None
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;		None
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  1    wreg      _Bool 
  1446 ;; Registers used:
  1447 ;;		wreg
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1453 ;;      Params:         0       0       0       0       0
  1454 ;;      Locals:         0       0       0       0       0
  1455 ;;      Temps:          0       0       0       0       0
  1456 ;;      Totals:         0       0       0       0       0
  1457 ;;Total ram usage:        0 bytes
  1458 ;; Hardware stack levels used: 1
  1459 ;; This function calls:
  1460 ;;		Nothing
  1461 ;; This function is called by:
  1462 ;;		_main
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466     059A                     _readButton2State:	
  1467                           ;psect for function _readButton2State
  1468                           
  1469     059A                     l995:	
  1470                           ;incstack = 0
  1471                           ; Regs used in _readButton2State: [wreg]
  1472                           
  1473                           
  1474                           ;main.c: 58:     if (PORTBbits.RB2 == 1) {
  1475     059A  1283               	bcf	3,5	;RP0=0, select bank0
  1476     059B  1303               	bcf	3,6	;RP1=0, select bank0
  1477     059C  1D06               	btfss	6,2	;volatile
  1478     059D  2D9F               	goto	u361
  1479     059E  2DA0               	goto	u360
  1480     059F                     u361:
  1481     059F  2DA3               	goto	l1003
  1482     05A0                     u360:
  1483     05A0                     l997:
  1484                           
  1485                           ;main.c: 59:         PORTBbits.RB2 = 0;
  1486     05A0  1106               	bcf	6,2	;volatile
  1487     05A1                     l999:
  1488                           
  1489                           ;main.c: 60:         return 1;
  1490     05A1  3001               	movlw	1
  1491     05A2  2DA4               	goto	l46
  1492     05A3                     l1003:
  1493                           
  1494                           ;main.c: 62:     return 0;
  1495     05A3  3000               	movlw	0
  1496     05A4                     l46:
  1497     05A4  0008               	return
  1498     05A5                     __end_of_readButton2State:
  1499                           
  1500                           	psect	text7
  1501     058F                     __ptext7:	
  1502 ;; *************** function _readButton1State *****************
  1503 ;; Defined at:
  1504 ;;		line 49 in file "main.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;		None
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;		None
  1509 ;; Return value:  Size  Location     Type
  1510 ;;                  1    wreg      _Bool 
  1511 ;; Registers used:
  1512 ;;		wreg
  1513 ;; Tracked objects:
  1514 ;;		On entry : 0/0
  1515 ;;		On exit  : 0/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1518 ;;      Params:         0       0       0       0       0
  1519 ;;      Locals:         0       0       0       0       0
  1520 ;;      Temps:          0       0       0       0       0
  1521 ;;      Totals:         0       0       0       0       0
  1522 ;;Total ram usage:        0 bytes
  1523 ;; Hardware stack levels used: 1
  1524 ;; This function calls:
  1525 ;;		Nothing
  1526 ;; This function is called by:
  1527 ;;		_main
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531     058F                     _readButton1State:	
  1532                           ;psect for function _readButton1State
  1533                           
  1534     058F                     l983:	
  1535                           ;incstack = 0
  1536                           ; Regs used in _readButton1State: [wreg]
  1537                           
  1538                           
  1539                           ;main.c: 50:     if (PORTBbits.RB1 == 1) {
  1540     058F  1283               	bcf	3,5	;RP0=0, select bank0
  1541     0590  1303               	bcf	3,6	;RP1=0, select bank0
  1542     0591  1C86               	btfss	6,1	;volatile
  1543     0592  2D94               	goto	u351
  1544     0593  2D95               	goto	u350
  1545     0594                     u351:
  1546     0594  2D98               	goto	l991
  1547     0595                     u350:
  1548     0595                     l985:
  1549                           
  1550                           ;main.c: 51:         PORTBbits.RB1 = 0 ;
  1551     0595  1086               	bcf	6,1	;volatile
  1552     0596                     l987:
  1553                           
  1554                           ;main.c: 52:         return 1;
  1555     0596  3001               	movlw	1
  1556     0597  2D99               	goto	l42
  1557     0598                     l991:
  1558                           
  1559                           ;main.c: 54:     return 0;
  1560     0598  3000               	movlw	0
  1561     0599                     l42:
  1562     0599  0008               	return
  1563     059A                     __end_of_readButton1State:
  1564                           
  1565                           	psect	text8
  1566     0584                     __ptext8:	
  1567 ;; *************** function _readButton0State *****************
  1568 ;; Defined at:
  1569 ;;		line 41 in file "main.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;		None
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;		None
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  1    wreg      _Bool 
  1576 ;; Registers used:
  1577 ;;		wreg
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1583 ;;      Params:         0       0       0       0       0
  1584 ;;      Locals:         0       0       0       0       0
  1585 ;;      Temps:          0       0       0       0       0
  1586 ;;      Totals:         0       0       0       0       0
  1587 ;;Total ram usage:        0 bytes
  1588 ;; Hardware stack levels used: 1
  1589 ;; This function calls:
  1590 ;;		Nothing
  1591 ;; This function is called by:
  1592 ;;		_main
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596     0584                     _readButton0State:	
  1597                           ;psect for function _readButton0State
  1598                           
  1599     0584                     l971:	
  1600                           ;incstack = 0
  1601                           ; Regs used in _readButton0State: [wreg]
  1602                           
  1603                           
  1604                           ;main.c: 42:     if (PORTBbits.RB0 == 1) {
  1605     0584  1283               	bcf	3,5	;RP0=0, select bank0
  1606     0585  1303               	bcf	3,6	;RP1=0, select bank0
  1607     0586  1C06               	btfss	6,0	;volatile
  1608     0587  2D89               	goto	u341
  1609     0588  2D8A               	goto	u340
  1610     0589                     u341:
  1611     0589  2D8D               	goto	l979
  1612     058A                     u340:
  1613     058A                     l973:
  1614                           
  1615                           ;main.c: 43:         PORTBbits.RB0 = 0;
  1616     058A  1006               	bcf	6,0	;volatile
  1617     058B                     l975:
  1618                           
  1619                           ;main.c: 44:         return 1;
  1620     058B  3001               	movlw	1
  1621     058C  2D8E               	goto	l38
  1622     058D                     l979:
  1623                           
  1624                           ;main.c: 46:     return 0;
  1625     058D  3000               	movlw	0
  1626     058E                     l38:
  1627     058E  0008               	return
  1628     058F                     __end_of_readButton0State:
  1629                           
  1630                           	psect	text9
  1631     05CB                     __ptext9:	
  1632 ;; *************** function _initPorts *****************
  1633 ;; Defined at:
  1634 ;;		line 73 in file "main.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;		None
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;		None
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  1    wreg      void 
  1641 ;; Registers used:
  1642 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1648 ;;      Params:         0       0       0       0       0
  1649 ;;      Locals:         0       0       0       0       0
  1650 ;;      Temps:          0       0       0       0       0
  1651 ;;      Totals:         0       0       0       0       0
  1652 ;;Total ram usage:        0 bytes
  1653 ;; Hardware stack levels used: 1
  1654 ;; Hardware stack levels required when called: 4
  1655 ;; This function calls:
  1656 ;;		_MAX7219_init
  1657 ;; This function is called by:
  1658 ;;		_main
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662     05CB                     _initPorts:	
  1663                           ;psect for function _initPorts
  1664                           
  1665     05CB                     l1019:	
  1666                           ;incstack = 0
  1667                           ; Regs used in _initPorts: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1668                           
  1669                           
  1670                           ;main.c: 74:     TRISB = 0x0F;
  1671     05CB  300F               	movlw	15
  1672     05CC  1683               	bsf	3,5	;RP0=1, select bank1
  1673     05CD  1303               	bcf	3,6	;RP1=0, select bank1
  1674     05CE  0086               	movwf	6	;volatile
  1675     05CF                     l1021:
  1676                           
  1677                           ;main.c: 75:     TRISC = 0x00;
  1678     05CF  0187               	clrf	7	;volatile
  1679     05D0                     l1023:
  1680                           
  1681                           ;main.c: 76:     MAX7219_init(1);
  1682     05D0  3001               	movlw	1
  1683     05D1  120A  118A  2601  120A  118A  	fcall	_MAX7219_init
  1684     05D6                     l1025:
  1685                           
  1686                           ;main.c: 77:     PORTB = 0x00;
  1687     05D6  1283               	bcf	3,5	;RP0=0, select bank0
  1688     05D7  1303               	bcf	3,6	;RP1=0, select bank0
  1689     05D8  0186               	clrf	6	;volatile
  1690     05D9                     l53:
  1691     05D9  0008               	return
  1692     05DA                     __end_of_initPorts:
  1693                           
  1694                           	psect	text10
  1695     0601                     __ptext10:	
  1696 ;; *************** function _MAX7219_init *****************
  1697 ;; Defined at:
  1698 ;;		line 11 in file "MAX7219.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;  noChips         1    wreg     unsigned char 
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;  noChips         1    7[COMMON] unsigned char 
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1712 ;;      Params:         0       0       0       0       0
  1713 ;;      Locals:         1       0       0       0       0
  1714 ;;      Temps:          0       0       0       0       0
  1715 ;;      Totals:         1       0       0       0       0
  1716 ;;Total ram usage:        1 bytes
  1717 ;; Hardware stack levels used: 1
  1718 ;; Hardware stack levels required when called: 3
  1719 ;; This function calls:
  1720 ;;		_MAX7219_config
  1721 ;;		_SPI_init
  1722 ;; This function is called by:
  1723 ;;		_initPorts
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727     0601                     _MAX7219_init:	
  1728                           ;psect for function _MAX7219_init
  1729                           
  1730                           
  1731                           ;incstack = 0
  1732                           ; Regs used in _MAX7219_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1733                           ;MAX7219_init@noChips stored from wreg
  1734     0601  00F7               	movwf	MAX7219_init@noChips
  1735     0602                     l945:
  1736                           
  1737                           ;MAX7219.c: 11: void MAX7219_init(char noChips);MAX7219.c: 12: {;MAX7219.c: 13:   SPI_in
      +                          it();
  1738     0602  120A  118A  2573  120A  118A  	fcall	_SPI_init
  1739                           
  1740                           ;MAX7219.c: 14:   while(noChips)
  1741     0607  2E10               	goto	l949
  1742     0608                     l947:
  1743                           
  1744                           ;MAX7219.c: 15:         MAX7219_config(--noChips);
  1745     0608  3001               	movlw	1
  1746     0609  02F7               	subwf	MAX7219_init@noChips,f
  1747     060A  0877               	movf	MAX7219_init@noChips,w
  1748     060B  120A  118A  263B  120A  118A  	fcall	_MAX7219_config
  1749     0610                     l949:
  1750                           
  1751                           ;MAX7219.c: 14:   while(noChips)
  1752     0610  0877               	movf	MAX7219_init@noChips,w
  1753     0611  1D03               	btfss	3,2
  1754     0612  2E14               	goto	u311
  1755     0613  2E15               	goto	u310
  1756     0614                     u311:
  1757     0614  2E08               	goto	l947
  1758     0615                     u310:
  1759     0615                     l145:
  1760     0615  0008               	return
  1761     0616                     __end_of_MAX7219_init:
  1762                           
  1763                           	psect	text11
  1764     0573                     __ptext11:	
  1765 ;; *************** function _SPI_init *****************
  1766 ;; Defined at:
  1767 ;;		line 12 in file "Soft_SPI.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;		None
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;		None
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  1    wreg      void 
  1774 ;; Registers used:
  1775 ;;		None
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1781 ;;      Params:         0       0       0       0       0
  1782 ;;      Locals:         0       0       0       0       0
  1783 ;;      Temps:          0       0       0       0       0
  1784 ;;      Totals:         0       0       0       0       0
  1785 ;;Total ram usage:        0 bytes
  1786 ;; Hardware stack levels used: 1
  1787 ;; This function calls:
  1788 ;;		Nothing
  1789 ;; This function is called by:
  1790 ;;		_MAX7219_init
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794     0573                     _SPI_init:	
  1795                           ;psect for function _SPI_init
  1796                           
  1797     0573                     l941:	
  1798                           ;incstack = 0
  1799                           ; Regs used in _SPI_init: []
  1800                           
  1801                           
  1802                           ;Soft_SPI.c: 14:   TRISC2 = 0;
  1803     0573  1683               	bsf	3,5	;RP0=1, select bank1
  1804     0574  1303               	bcf	3,6	;RP1=0, select bank1
  1805     0575  1107               	bcf	7,2	;volatile
  1806                           
  1807                           ;Soft_SPI.c: 15:   TRISC0 = 0;
  1808     0576  1007               	bcf	7,0	;volatile
  1809                           
  1810                           ;Soft_SPI.c: 16:   TRISC4 = 1;
  1811     0577  1607               	bsf	7,4	;volatile
  1812                           
  1813                           ;Soft_SPI.c: 17:   TRISC1 = 0;
  1814     0578  1087               	bcf	7,1	;volatile
  1815                           
  1816                           ;Soft_SPI.c: 18:   TRISC3 = 0;
  1817     0579  1187               	bcf	7,3	;volatile
  1818     057A                     l119:
  1819     057A  0008               	return
  1820     057B                     __end_of_SPI_init:
  1821                           
  1822                           	psect	text12
  1823     063B                     __ptext12:	
  1824 ;; *************** function _MAX7219_config *****************
  1825 ;; Defined at:
  1826 ;;		line 18 in file "MAX7219.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;  chip            1    wreg     unsigned char 
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;  chip            1    0[COMMON] unsigned char 
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  1    wreg      void 
  1833 ;; Registers used:
  1834 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1840 ;;      Params:         0       0       0       0       0
  1841 ;;      Locals:         0       0       0       0       0
  1842 ;;      Temps:          0       0       0       0       0
  1843 ;;      Totals:         0       0       0       0       0
  1844 ;;Total ram usage:        0 bytes
  1845 ;; Hardware stack levels used: 1
  1846 ;; Hardware stack levels required when called: 2
  1847 ;; This function calls:
  1848 ;;		_MAX7219_write
  1849 ;; This function is called by:
  1850 ;;		_MAX7219_init
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854     063B                     _MAX7219_config:	
  1855                           ;psect for function _MAX7219_config
  1856                           
  1857     063B                     l943:	
  1858                           ;incstack = 0
  1859                           ; Regs used in _MAX7219_config: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1860                           
  1861                           
  1862                           ;MAX7219.c: 18: void MAX7219_config(char chip);MAX7219.c: 19: {;MAX7219.c: 20:   MAX7219
      +                          _write(0x09,0x00);
  1863     063B  01F5               	clrf	MAX7219_write@data
  1864     063C  3009               	movlw	9
  1865     063D  120A  118A  25ED  120A  118A  	fcall	_MAX7219_write
  1866                           
  1867                           ;MAX7219.c: 21:   MAX7219_write(0x0A,0x05);
  1868     0642  3005               	movlw	5
  1869     0643  00F5               	movwf	MAX7219_write@data
  1870     0644  300A               	movlw	10
  1871     0645  120A  118A  25ED  120A  118A  	fcall	_MAX7219_write
  1872                           
  1873                           ;MAX7219.c: 22:   MAX7219_write(0x0B,0x07);
  1874     064A  3007               	movlw	7
  1875     064B  00F5               	movwf	MAX7219_write@data
  1876     064C  300B               	movlw	11
  1877     064D  120A  118A  25ED  120A  118A  	fcall	_MAX7219_write
  1878                           
  1879                           ;MAX7219.c: 23:   MAX7219_write(0x0C,0x01);
  1880     0652  01F5               	clrf	MAX7219_write@data
  1881     0653  0AF5               	incf	MAX7219_write@data,f
  1882     0654  300C               	movlw	12
  1883     0655  120A  118A  25ED  120A  118A  	fcall	_MAX7219_write
  1884                           
  1885                           ;MAX7219.c: 24:   MAX7219_write(0x0F,0x00);
  1886     065A  01F5               	clrf	MAX7219_write@data
  1887     065B  300F               	movlw	15
  1888     065C  120A  118A  25ED  120A  118A  	fcall	_MAX7219_write
  1889     0661                     l148:
  1890     0661  0008               	return
  1891     0662                     __end_of_MAX7219_config:
  1892                           
  1893                           	psect	text13
  1894     0616                     __ptext13:	
  1895 ;; *************** function _initGame *****************
  1896 ;; Defined at:
  1897 ;;		line 80 in file "main.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;		None
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;		None
  1902 ;; Return value:  Size  Location     Type
  1903 ;;                  1    wreg      void 
  1904 ;; Registers used:
  1905 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1911 ;;      Params:         0       0       0       0       0
  1912 ;;      Locals:         0       0       0       0       0
  1913 ;;      Temps:          0       0       0       0       0
  1914 ;;      Totals:         0       0       0       0       0
  1915 ;;Total ram usage:        0 bytes
  1916 ;; Hardware stack levels used: 1
  1917 ;; Hardware stack levels required when called: 2
  1918 ;; This function calls:
  1919 ;;		_MAX7219_write
  1920 ;; This function is called by:
  1921 ;;		_main
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925     0616                     _initGame:	
  1926                           ;psect for function _initGame
  1927                           
  1928     0616                     l1027:	
  1929                           ;incstack = 0
  1930                           ; Regs used in _initGame: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1931                           
  1932                           
  1933                           ;main.c: 81:     ballX = 4;
  1934     0616  3004               	movlw	4
  1935     0617  1283               	bcf	3,5	;RP0=0, select bank0
  1936     0618  1303               	bcf	3,6	;RP1=0, select bank0
  1937     0619  00A0               	movwf	_ballX
  1938     061A  3000               	movlw	0
  1939     061B  00A1               	movwf	_ballX+1
  1940                           
  1941                           ;main.c: 82:     ballYState = 0b00001000;
  1942     061C  3008               	movlw	8
  1943     061D  00A6               	movwf	_ballYState
  1944     061E                     l1029:
  1945                           
  1946                           ;main.c: 83:     MAX7219_write(8, p1State);
  1947     061E  0828               	movf	_p1State,w
  1948     061F  00F5               	movwf	MAX7219_write@data
  1949     0620  3008               	movlw	8
  1950     0621  120A  118A  25ED  120A  118A  	fcall	_MAX7219_write
  1951     0626                     l1031:
  1952                           
  1953                           ;main.c: 84:     MAX7219_write(1, p2State);
  1954     0626  1283               	bcf	3,5	;RP0=0, select bank0
  1955     0627  1303               	bcf	3,6	;RP1=0, select bank0
  1956     0628  0827               	movf	_p2State,w
  1957     0629  00F5               	movwf	MAX7219_write@data
  1958     062A  3001               	movlw	1
  1959     062B  120A  118A  25ED  120A  118A  	fcall	_MAX7219_write
  1960     0630                     l1033:
  1961                           
  1962                           ;main.c: 85:     MAX7219_write(ballX, ballYState);
  1963     0630  1283               	bcf	3,5	;RP0=0, select bank0
  1964     0631  1303               	bcf	3,6	;RP1=0, select bank0
  1965     0632  0826               	movf	_ballYState,w
  1966     0633  00F5               	movwf	MAX7219_write@data
  1967     0634  0820               	movf	_ballX,w
  1968     0635  120A  118A  25ED  120A  118A  	fcall	_MAX7219_write
  1969     063A                     l56:
  1970     063A  0008               	return
  1971     063B                     __end_of_initGame:
  1972                           
  1973                           	psect	text14
  1974     05ED                     __ptext14:	
  1975 ;; *************** function _MAX7219_write *****************
  1976 ;; Defined at:
  1977 ;;		line 27 in file "MAX7219.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;  regName         1    wreg     unsigned char 
  1980 ;;  data            1    5[COMMON] unsigned char 
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;  regName         1    6[COMMON] unsigned char 
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  1    wreg      void 
  1985 ;; Registers used:
  1986 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1992 ;;      Params:         1       0       0       0       0
  1993 ;;      Locals:         1       0       0       0       0
  1994 ;;      Temps:          0       0       0       0       0
  1995 ;;      Totals:         2       0       0       0       0
  1996 ;;Total ram usage:        2 bytes
  1997 ;; Hardware stack levels used: 1
  1998 ;; Hardware stack levels required when called: 1
  1999 ;; This function calls:
  2000 ;;		_SPI_write
  2001 ;; This function is called by:
  2002 ;;		_initGame
  2003 ;;		_updatePlayerPosition
  2004 ;;		_updateBallPosition
  2005 ;;		_MAX7219_config
  2006 ;;		_MAX7219_displayText
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010     05ED                     _MAX7219_write:	
  2011                           ;psect for function _MAX7219_write
  2012                           
  2013                           
  2014                           ;incstack = 0
  2015                           ; Regs used in _MAX7219_write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2016                           ;MAX7219_write@regName stored from wreg
  2017     05ED  00F6               	movwf	MAX7219_write@regName
  2018     05EE                     l935:
  2019                           
  2020                           ;MAX7219.c: 27: void MAX7219_write(char regName,char data);MAX7219.c: 28: {;MAX7219.c: 2
      +                          9:   RC1 = 0;
  2021     05EE  1283               	bcf	3,5	;RP0=0, select bank0
  2022     05EF  1303               	bcf	3,6	;RP1=0, select bank0
  2023     05F0  1087               	bcf	7,1	;volatile
  2024     05F1                     l937:
  2025                           
  2026                           ;MAX7219.c: 31:   SPI_write(regName);
  2027     05F1  0876               	movf	MAX7219_write@regName,w
  2028     05F2  120A  118A  2662  120A  118A  	fcall	_SPI_write
  2029                           
  2030                           ;MAX7219.c: 32:   SPI_write(data);
  2031     05F7  0875               	movf	MAX7219_write@data,w
  2032     05F8  120A  118A  2662  120A  118A  	fcall	_SPI_write
  2033     05FD                     l939:
  2034                           
  2035                           ;MAX7219.c: 34:   RC1 = 1;
  2036     05FD  1283               	bcf	3,5	;RP0=0, select bank0
  2037     05FE  1303               	bcf	3,6	;RP1=0, select bank0
  2038     05FF  1487               	bsf	7,1	;volatile
  2039     0600                     l151:
  2040     0600  0008               	return
  2041     0601                     __end_of_MAX7219_write:
  2042                           
  2043                           	psect	text15
  2044     0662                     __ptext15:	
  2045 ;; *************** function _SPI_write *****************
  2046 ;; Defined at:
  2047 ;;		line 21 in file "Soft_SPI.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;  send            1    wreg     unsigned char 
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;  send            1    2[COMMON] unsigned char 
  2052 ;;  Tx              2    3[COMMON] int 
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  1    wreg      void 
  2055 ;; Registers used:
  2056 ;;		wreg, status,2, status,0, btemp+1
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2062 ;;      Params:         0       0       0       0       0
  2063 ;;      Locals:         3       0       0       0       0
  2064 ;;      Temps:          2       0       0       0       0
  2065 ;;      Totals:         5       0       0       0       0
  2066 ;;Total ram usage:        5 bytes
  2067 ;; Hardware stack levels used: 1
  2068 ;; This function calls:
  2069 ;;		Nothing
  2070 ;; This function is called by:
  2071 ;;		_MAX7219_write
  2072 ;;		_MAX7219_NoOperation
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076     0662                     _SPI_write:	
  2077                           ;psect for function _SPI_write
  2078                           
  2079                           
  2080                           ;incstack = 0
  2081                           ; Regs used in _SPI_write: [wreg+status,2+status,0+btemp+1]
  2082                           ;SPI_write@send stored from wreg
  2083     0662  00F2               	movwf	SPI_write@send
  2084     0663                     l921:
  2085                           
  2086                           ;Soft_SPI.c: 21: void SPI_write(char send);Soft_SPI.c: 22: {;Soft_SPI.c: 23:   for(int T
      +                          x = 0 ; Tx < 8 ; Tx++ )
  2087     0663  01F3               	clrf	SPI_write@Tx
  2088     0664  01F4               	clrf	SPI_write@Tx+1
  2089     0665                     l122:
  2090                           
  2091                           ;Soft_SPI.c: 24:   {;Soft_SPI.c: 25:     RC2 = 0;
  2092     0665  1283               	bcf	3,5	;RP0=0, select bank0
  2093     0666  1303               	bcf	3,6	;RP1=0, select bank0
  2094     0667  1107               	bcf	7,2	;volatile
  2095     0668                     l927:
  2096                           
  2097                           ;Soft_SPI.c: 26:     RC0 = ( (send << Tx) & 0x80 ) ? 1 : 0;
  2098     0668  0A73               	incf	SPI_write@Tx,w
  2099     0669  00FF               	movwf	btemp+1
  2100     066A  0872               	movf	SPI_write@send,w
  2101     066B  00F0               	movwf	??_SPI_write
  2102     066C  01F1               	clrf	??_SPI_write+1
  2103     066D  2E71               	goto	u274
  2104     066E                     u275:
  2105     066E  1003               	clrc
  2106     066F  0DF0               	rlf	??_SPI_write,f
  2107     0670  0DF1               	rlf	??_SPI_write+1,f
  2108     0671                     u274:
  2109     0671  0BFF               	decfsz	btemp+1,f
  2110     0672  2E6E               	goto	u275
  2111     0673  1BF0               	btfsc	??_SPI_write,7
  2112     0674  2E76               	goto	u281
  2113     0675  2E7A               	goto	u280
  2114     0676                     u281:
  2115     0676  1283               	bcf	3,5	;RP0=0, select bank0
  2116     0677  1303               	bcf	3,6	;RP1=0, select bank0
  2117     0678  1407               	bsf	7,0	;volatile
  2118     0679  2E7D               	goto	u294
  2119     067A                     u280:
  2120     067A  1283               	bcf	3,5	;RP0=0, select bank0
  2121     067B  1303               	bcf	3,6	;RP1=0, select bank0
  2122     067C  1007               	bcf	7,0	;volatile
  2123     067D                     u294:
  2124     067D                     l929:
  2125                           
  2126                           ;Soft_SPI.c: 27:     RC2 = 1;
  2127     067D  1507               	bsf	7,2	;volatile
  2128     067E                     l931:
  2129                           
  2130                           ;Soft_SPI.c: 28:   }
  2131     067E  3001               	movlw	1
  2132     067F  07F3               	addwf	SPI_write@Tx,f
  2133     0680  1803               	skipnc
  2134     0681  0AF4               	incf	SPI_write@Tx+1,f
  2135     0682  3000               	movlw	0
  2136     0683  07F4               	addwf	SPI_write@Tx+1,f
  2137     0684                     l933:
  2138     0684  0874               	movf	SPI_write@Tx+1,w
  2139     0685  3A80               	xorlw	128
  2140     0686  00FF               	movwf	btemp+1
  2141     0687  3080               	movlw	128
  2142     0688  027F               	subwf	btemp+1,w
  2143     0689  1D03               	skipz
  2144     068A  2E8D               	goto	u305
  2145     068B  3008               	movlw	8
  2146     068C  0273               	subwf	SPI_write@Tx,w
  2147     068D                     u305:
  2148     068D  1C03               	skipc
  2149     068E  2E90               	goto	u301
  2150     068F  2E91               	goto	u300
  2151     0690                     u301:
  2152     0690  2E65               	goto	l122
  2153     0691                     u300:
  2154     0691                     l124:
  2155     0691  0008               	return
  2156     0692                     __end_of_SPI_write:
  2157     007E                     btemp	set	126	;btemp
  2158     007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      7      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_updateBallPosition
    _updatePlayerPosition->_MAX7219_write
    _updateBallPosition->_MAX7219_write
    _initPorts->_MAX7219_init
    _MAX7219_config->_MAX7219_write
    _initGame->_MAX7219_write
    _MAX7219_write->_SPI_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     3      4    5993
                                              0 BANK0      7     3      4
                           _initGame
                          _initPorts
                   _readButton0State
                   _readButton1State
                   _readButton2State
                   _readButton3State
                 _updateBallPosition
               _updatePlayerPosition
 ---------------------------------------------------------------------------------
 (1) _updatePlayerPosition                                 4     0      4    2080
                                              7 COMMON     4     0      4
                      _MAX7219_write
                       _buttonGoDown
                         _buttonGoUp
 ---------------------------------------------------------------------------------
 (2) _buttonGoUp                                           2     2      0      66
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _buttonGoDown                                         2     2      0      66
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _updateBallPosition                                   7     7      0    1321
                                              7 COMMON     7     7      0
                      _MAX7219_write
 ---------------------------------------------------------------------------------
 (1) _readButton3State                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readButton2State                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readButton1State                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readButton0State                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initPorts                                            0     0      0    1318
                       _MAX7219_init
 ---------------------------------------------------------------------------------
 (2) _MAX7219_init                                         1     1      0    1318
                                              7 COMMON     1     1      0
                     _MAX7219_config
                           _SPI_init
 ---------------------------------------------------------------------------------
 (3) _SPI_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MAX7219_config                                       1     1      0    1274
                      _MAX7219_write
 ---------------------------------------------------------------------------------
 (1) _initGame                                             0     0      0    1274
                      _MAX7219_write
 ---------------------------------------------------------------------------------
 (2) _MAX7219_write                                        2     1      1    1274
                                              5 COMMON     2     1      1
                          _SPI_write
 ---------------------------------------------------------------------------------
 (3) _SPI_write                                            5     5      0      90
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initGame
     _MAX7219_write
       _SPI_write
   _initPorts
     _MAX7219_init
       _MAX7219_config
         _MAX7219_write
       _SPI_init
   _readButton0State
   _readButton1State
   _readButton2State
   _readButton3State
   _updateBallPosition
     _MAX7219_write
   _updatePlayerPosition
     _MAX7219_write
     _buttonGoDown
     _buttonGoUp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      7      14       5       25.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      22      12        0.0%
ABS                  0      0      22       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu May 16 11:26:06 2024

                            pc 0002                             l42 0599                             l50 05AF  
                           l60 05BC                             l53 05D9                             l38 058E  
                           l46 05A4                             l56 063A                             l64 05CA  
                           l73 06F3                             l85 074B                             l86 075E  
                           l96 07E1                             fsr 0004                            l122 0665  
                          l124 0691                            l151 0600                            l119 057A  
                          l145 0615                            l148 0661                            l921 0663  
                          l931 067E                            l933 0684                            l941 0573  
                          l927 0668                            l935 05EE                            l943 063B  
                          l951 05B1                            l929 067D                            l937 05F1  
                          l945 0602                            l961 05BE                            l953 05B7  
                          l939 05FD                            l947 0608                            l971 0584  
                          l963 05C4                            l949 0610                            l973 058A  
                          l957 05B9                            l975 058B                            l991 0598  
                          l983 058F                            l967 05C6                            l985 0595  
                          l979 058D                            l987 0596                            l995 059A  
                          l997 05A0                            l999 05A1                            _RC0 0038  
                          _RC1 0039                            _RC2 003A                            _RC4 003C  
                          u300 0691                            u301 0690                            u310 0615  
                          u311 0614                            u320 05B7                            u400 06CC  
                          u305 068D                            u321 05B6                            u401 06CB  
                          u410 0707                            u330 05C4                            u411 0706  
                          u331 05C3                            u340 058A                            u420 0716  
                          u341 0589                            u421 0715                            u350 0595  
                          u430 0729                            u351 0594                            u431 0728  
                          u415 0703                            u280 067A                            u360 05A0  
                          u440 072D                            u281 0676                            u361 059F  
                          u441 072C                            u425 0712                            u274 0671  
                          u370 05AB                            u450 0738                            u275 066E  
                          u371 05AA                            u451 0737                            u380 0698  
                          u460 079C                            u381 0697                            u461 079B  
                          u517 0771                            u294 067D                            u390 069E  
                          u470 07AF                            u391 069D                            u471 07AE  
                          u480 07C2                            u481 07C1                            u490 07D5  
                          u491 07D4                            indf 0000                           l1003 05A3  
                         l1011 05AC                           l1021 05CF                           l1101 07AF  
                         l1031 0626                           l1023 05D0                           l1015 05AE  
                         l1007 05A5                           l1103 07BB                           l1033 0630  
                         l1025 05D6                           l1009 05AB                           l1041 06A9  
                         l1105 07C2                           l1027 0616                           l1019 05CB  
                         l1051 06D7                           l1043 06B2                           l1035 0692  
                         l1107 07D0                           l1029 061E                           l1061 0707  
                         l1053 06E0                           l1045 06BD                           l1037 0698  
                         l1109 07D5                           l1071 072D                           l1063 0716  
                         l1055 06EB                           l1039 069E                           l1047 06C6  
                         l1081 0754                           l1073 0732                           l1065 071D  
                         l1057 06F4                           l1049 06CC                           l1075 0738  
                         l1067 0725                           l1059 06FA                           l1091 0787  
                         l1083 075F                           l1077 0743                           l1069 0729  
                         l1093 078F                           l1085 0769                           l1079 074D  
                         l1095 0797                           l1087 0777                           l1097 079C  
                         l1089 077F                           l1099 07AA           MAX7219_write@regName 0076  
             _readButton0State 0584               _readButton1State 058F               _readButton2State 059A  
             _readButton3State 05A5                           _main 075F                           btemp 007E  
                         start 0000                          ?_main 0029   __end_of_updatePlayerPosition 06F4  
                        _PORTB 0006                          _TRISB 0086                          _TRISC 0087  
updatePlayerPosition@direction 0079                          _ballX 0020                          pclath 000A  
             __end_of_SPI_init 057B                          status 0003                          wtemp0 007E  
         __end_of_MAX7219_init 0616                __initialization 07EA                   __end_of_main 07EA  
                       ??_main 002D             _updateBallPosition 06F4                  ?_buttonGoDown 0070  
          ?_updateBallPosition 0070                         _TRISC0 0438                         _TRISC1 0439  
                       _TRISC2 043A                         _TRISC3 043B                         _TRISC4 043C  
             __end_of_initGame 063B           ??_updateBallPosition 0077         buttonGoUp@currentState 0071  
            __end_of_SPI_write 0692                 ??_buttonGoDown 0070          __end_of_MAX7219_write 0601  
      __end_of__initialization 07FC           _updatePlayerPosition 0692                 __pcstackCOMMON 0070  
                 __pidataBANK0 057B       __end_of_readButton0State 058F       __end_of_readButton1State 059A  
     __end_of_readButton2State 05A5       __end_of_readButton3State 05B0                      ?_SPI_init 0070  
                   _ballYState 0026          _updateBallPosition$98 007C                     __pbssBANK0 0030  
        ?_updatePlayerPosition 0077                     __pmaintext 075F                     ??_SPI_init 0070  
                 _MAX7219_init 0601       buttonGoDown@currentState 0071              MAX7219_write@data 0075  
                    ?_initGame 0070                        _p1State 0028                        _p2State 0027  
           MAX7219_config@chip 0070           __end_of_buttonGoDown 05CB                     _buttonGoUp 05B0  
                      __ptext1 0692                        __ptext2 05B0                        __ptext3 05BD  
                      __ptext4 06F4                        __ptext5 05A5                        __ptext6 059A  
                      __ptext7 058F                        __ptext8 0584                        __ptext9 05CB  
            __end_of_initPorts 05DA                 _MAX7219_config 063B           end_of_initialization 07FC  
                   ??_initGame 0077         ??_updatePlayerPosition 007B                      _PORTBbits 0006  
       __end_of_MAX7219_config 0662                      _SPI_write 0662                    ?_buttonGoUp 0070  
            ?_readButton0State 0070              ?_readButton1State 0070              ?_readButton2State 0070  
            ?_readButton3State 0070                 _button0pressed 0033                ?_MAX7219_config 0070  
               _button1pressed 0032                 _button2pressed 0031             ??_readButton0State 0070  
           ??_readButton1State 0070             ??_readButton2State 0070                 _button3pressed 0030  
           ??_readButton3State 0070            start_initialization 07EA                     ?_SPI_write 0070  
                   init_fetch0 05DA                    __pdataBANK0 0020                      ___latbits 0002  
                __pcstackBANK0 0029                   _buttonGoDown 05BD                    SPI_write@Tx 0073  
                SPI_write@send 0072                      _initPorts 05CB                    ??_SPI_write 0070  
                _MAX7219_write 05ED                       _SPI_init 0573                     ?_initPorts 0070  
               ?_MAX7219_write 0075     updatePlayerPosition@player 0077               ??_MAX7219_config 0077  
                 ??_buttonGoUp 0070                       _ballDirX 0024                       _ballDirY 0022  
  updateBallPosition@ballXprev 007A                       __ptext10 0601                       __ptext11 0573  
                     __ptext12 063B                       __ptext13 0616                       __ptext14 05ED  
                     __ptext15 0662                       _initGame 0616             __end_of_buttonGoUp 05BD  
   __end_of_updateBallPosition 075F                       main@argc 0029                       main@argv 002B  
                ?_MAX7219_init 0070                       init_ram0 05DE                    ??_initPorts 0078  
              ??_MAX7219_write 0076            MAX7219_init@noChips 0077                 ??_MAX7219_init 0077  
