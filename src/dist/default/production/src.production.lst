

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat May 18 10:17:16 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	dabs	1,0x7E,2
    28     0000                     
    29                           ; Generated 12/10/2023 GMT
    30                           ; 
    31                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F877A Definitions
    61                           ; 
    62                           ; SFR Addresses
    63     0000                     	;# 
    64     0001                     	;# 
    65     0002                     	;# 
    66     0003                     	;# 
    67     0004                     	;# 
    68     0005                     	;# 
    69     0006                     	;# 
    70     0007                     	;# 
    71     0008                     	;# 
    72     0009                     	;# 
    73     000A                     	;# 
    74     000B                     	;# 
    75     000C                     	;# 
    76     000D                     	;# 
    77     000E                     	;# 
    78     000E                     	;# 
    79     000F                     	;# 
    80     0010                     	;# 
    81     0011                     	;# 
    82     0012                     	;# 
    83     0013                     	;# 
    84     0014                     	;# 
    85     0015                     	;# 
    86     0015                     	;# 
    87     0016                     	;# 
    88     0017                     	;# 
    89     0018                     	;# 
    90     0019                     	;# 
    91     001A                     	;# 
    92     001B                     	;# 
    93     001B                     	;# 
    94     001C                     	;# 
    95     001D                     	;# 
    96     001E                     	;# 
    97     001F                     	;# 
    98     0081                     	;# 
    99     0085                     	;# 
   100     0086                     	;# 
   101     0087                     	;# 
   102     0088                     	;# 
   103     0089                     	;# 
   104     008C                     	;# 
   105     008D                     	;# 
   106     008E                     	;# 
   107     0091                     	;# 
   108     0092                     	;# 
   109     0093                     	;# 
   110     0094                     	;# 
   111     0098                     	;# 
   112     0099                     	;# 
   113     009C                     	;# 
   114     009D                     	;# 
   115     009E                     	;# 
   116     009F                     	;# 
   117     010C                     	;# 
   118     010D                     	;# 
   119     010E                     	;# 
   120     010F                     	;# 
   121     018C                     	;# 
   122     018D                     	;# 
   123     0000                     	;# 
   124     0001                     	;# 
   125     0002                     	;# 
   126     0003                     	;# 
   127     0004                     	;# 
   128     0005                     	;# 
   129     0006                     	;# 
   130     0007                     	;# 
   131     0008                     	;# 
   132     0009                     	;# 
   133     000A                     	;# 
   134     000B                     	;# 
   135     000C                     	;# 
   136     000D                     	;# 
   137     000E                     	;# 
   138     000E                     	;# 
   139     000F                     	;# 
   140     0010                     	;# 
   141     0011                     	;# 
   142     0012                     	;# 
   143     0013                     	;# 
   144     0014                     	;# 
   145     0015                     	;# 
   146     0015                     	;# 
   147     0016                     	;# 
   148     0017                     	;# 
   149     0018                     	;# 
   150     0019                     	;# 
   151     001A                     	;# 
   152     001B                     	;# 
   153     001B                     	;# 
   154     001C                     	;# 
   155     001D                     	;# 
   156     001E                     	;# 
   157     001F                     	;# 
   158     0081                     	;# 
   159     0085                     	;# 
   160     0086                     	;# 
   161     0087                     	;# 
   162     0088                     	;# 
   163     0089                     	;# 
   164     008C                     	;# 
   165     008D                     	;# 
   166     008E                     	;# 
   167     0091                     	;# 
   168     0092                     	;# 
   169     0093                     	;# 
   170     0094                     	;# 
   171     0098                     	;# 
   172     0099                     	;# 
   173     009C                     	;# 
   174     009D                     	;# 
   175     009E                     	;# 
   176     009F                     	;# 
   177     010C                     	;# 
   178     010D                     	;# 
   179     010E                     	;# 
   180     010F                     	;# 
   181     018C                     	;# 
   182     018D                     	;# 
   183     0000                     	;# 
   184     0001                     	;# 
   185     0002                     	;# 
   186     0003                     	;# 
   187     0004                     	;# 
   188     0005                     	;# 
   189     0006                     	;# 
   190     0007                     	;# 
   191     0008                     	;# 
   192     0009                     	;# 
   193     000A                     	;# 
   194     000B                     	;# 
   195     000C                     	;# 
   196     000D                     	;# 
   197     000E                     	;# 
   198     000E                     	;# 
   199     000F                     	;# 
   200     0010                     	;# 
   201     0011                     	;# 
   202     0012                     	;# 
   203     0013                     	;# 
   204     0014                     	;# 
   205     0015                     	;# 
   206     0015                     	;# 
   207     0016                     	;# 
   208     0017                     	;# 
   209     0018                     	;# 
   210     0019                     	;# 
   211     001A                     	;# 
   212     001B                     	;# 
   213     001B                     	;# 
   214     001C                     	;# 
   215     001D                     	;# 
   216     001E                     	;# 
   217     001F                     	;# 
   218     0081                     	;# 
   219     0085                     	;# 
   220     0086                     	;# 
   221     0087                     	;# 
   222     0088                     	;# 
   223     0089                     	;# 
   224     008C                     	;# 
   225     008D                     	;# 
   226     008E                     	;# 
   227     0091                     	;# 
   228     0092                     	;# 
   229     0093                     	;# 
   230     0094                     	;# 
   231     0098                     	;# 
   232     0099                     	;# 
   233     009C                     	;# 
   234     009D                     	;# 
   235     009E                     	;# 
   236     009F                     	;# 
   237     010C                     	;# 
   238     010D                     	;# 
   239     010E                     	;# 
   240     010F                     	;# 
   241     018C                     	;# 
   242     018D                     	;# 
   243     0000                     	;# 
   244     0001                     	;# 
   245     0002                     	;# 
   246     0003                     	;# 
   247     0004                     	;# 
   248     0005                     	;# 
   249     0006                     	;# 
   250     0007                     	;# 
   251     0008                     	;# 
   252     0009                     	;# 
   253     000A                     	;# 
   254     000B                     	;# 
   255     000C                     	;# 
   256     000D                     	;# 
   257     000E                     	;# 
   258     000E                     	;# 
   259     000F                     	;# 
   260     0010                     	;# 
   261     0011                     	;# 
   262     0012                     	;# 
   263     0013                     	;# 
   264     0014                     	;# 
   265     0015                     	;# 
   266     0015                     	;# 
   267     0016                     	;# 
   268     0017                     	;# 
   269     0018                     	;# 
   270     0019                     	;# 
   271     001A                     	;# 
   272     001B                     	;# 
   273     001B                     	;# 
   274     001C                     	;# 
   275     001D                     	;# 
   276     001E                     	;# 
   277     001F                     	;# 
   278     0081                     	;# 
   279     0085                     	;# 
   280     0086                     	;# 
   281     0087                     	;# 
   282     0088                     	;# 
   283     0089                     	;# 
   284     008C                     	;# 
   285     008D                     	;# 
   286     008E                     	;# 
   287     0091                     	;# 
   288     0092                     	;# 
   289     0093                     	;# 
   290     0094                     	;# 
   291     0098                     	;# 
   292     0099                     	;# 
   293     009C                     	;# 
   294     009D                     	;# 
   295     009E                     	;# 
   296     009F                     	;# 
   297     010C                     	;# 
   298     010D                     	;# 
   299     010E                     	;# 
   300     010F                     	;# 
   301     018C                     	;# 
   302     018D                     	;# 
   303     0000                     	;# 
   304     0001                     	;# 
   305     0002                     	;# 
   306     0003                     	;# 
   307     0004                     	;# 
   308     0005                     	;# 
   309     0006                     	;# 
   310     0007                     	;# 
   311     0008                     	;# 
   312     0009                     	;# 
   313     000A                     	;# 
   314     000B                     	;# 
   315     000C                     	;# 
   316     000D                     	;# 
   317     000E                     	;# 
   318     000E                     	;# 
   319     000F                     	;# 
   320     0010                     	;# 
   321     0011                     	;# 
   322     0012                     	;# 
   323     0013                     	;# 
   324     0014                     	;# 
   325     0015                     	;# 
   326     0015                     	;# 
   327     0016                     	;# 
   328     0017                     	;# 
   329     0018                     	;# 
   330     0019                     	;# 
   331     001A                     	;# 
   332     001B                     	;# 
   333     001B                     	;# 
   334     001C                     	;# 
   335     001D                     	;# 
   336     001E                     	;# 
   337     001F                     	;# 
   338     0081                     	;# 
   339     0085                     	;# 
   340     0086                     	;# 
   341     0087                     	;# 
   342     0088                     	;# 
   343     0089                     	;# 
   344     008C                     	;# 
   345     008D                     	;# 
   346     008E                     	;# 
   347     0091                     	;# 
   348     0092                     	;# 
   349     0093                     	;# 
   350     0094                     	;# 
   351     0098                     	;# 
   352     0099                     	;# 
   353     009C                     	;# 
   354     009D                     	;# 
   355     009E                     	;# 
   356     009F                     	;# 
   357     010C                     	;# 
   358     010D                     	;# 
   359     010E                     	;# 
   360     010F                     	;# 
   361     018C                     	;# 
   362     018D                     	;# 
   363     0000                     	;# 
   364     0001                     	;# 
   365     0002                     	;# 
   366     0003                     	;# 
   367     0004                     	;# 
   368     0005                     	;# 
   369     0006                     	;# 
   370     0007                     	;# 
   371     0008                     	;# 
   372     0009                     	;# 
   373     000A                     	;# 
   374     000B                     	;# 
   375     000C                     	;# 
   376     000D                     	;# 
   377     000E                     	;# 
   378     000E                     	;# 
   379     000F                     	;# 
   380     0010                     	;# 
   381     0011                     	;# 
   382     0012                     	;# 
   383     0013                     	;# 
   384     0014                     	;# 
   385     0015                     	;# 
   386     0015                     	;# 
   387     0016                     	;# 
   388     0017                     	;# 
   389     0018                     	;# 
   390     0019                     	;# 
   391     001A                     	;# 
   392     001B                     	;# 
   393     001B                     	;# 
   394     001C                     	;# 
   395     001D                     	;# 
   396     001E                     	;# 
   397     001F                     	;# 
   398     0081                     	;# 
   399     0085                     	;# 
   400     0086                     	;# 
   401     0087                     	;# 
   402     0088                     	;# 
   403     0089                     	;# 
   404     008C                     	;# 
   405     008D                     	;# 
   406     008E                     	;# 
   407     0091                     	;# 
   408     0092                     	;# 
   409     0093                     	;# 
   410     0094                     	;# 
   411     0098                     	;# 
   412     0099                     	;# 
   413     009C                     	;# 
   414     009D                     	;# 
   415     009E                     	;# 
   416     009F                     	;# 
   417     010C                     	;# 
   418     010D                     	;# 
   419     010E                     	;# 
   420     010F                     	;# 
   421     018C                     	;# 
   422     018D                     	;# 
   423                           
   424                           	psect	idataCOMMON
   425     03F3                     __pidataCOMMON:
   426                           
   427                           ;initializer for _p1State
   428     03F3  341E               	retlw	30
   429                           
   430                           	psect	idataBANK0
   431     03FC                     __pidataBANK0:
   432                           
   433                           ;initializer for _ballX
   434     03FC  3404               	retlw	4
   435     03FD  3400               	retlw	0
   436                           
   437                           ;initializer for _ballDirY
   438     03FE  3401               	retlw	1
   439     03FF  3400               	retlw	0
   440                           
   441                           ;initializer for _ballDirX
   442     0400  34FF               	retlw	255
   443     0401  34FF               	retlw	255
   444                           
   445                           ;initializer for _ballYState
   446     0402  3408               	retlw	8
   447                           
   448                           ;initializer for _p2State
   449     0403  341E               	retlw	30
   450     003C                     _RC4	set	60
   451     0038                     _RC0	set	56
   452     003A                     _RC2	set	58
   453     0039                     _RC1	set	57
   454     0033                     _RB3	set	51
   455     0032                     _RB2	set	50
   456     0031                     _RB1	set	49
   457     0030                     _RB0	set	48
   458     0087                     _TRISC	set	135
   459     0086                     _TRISB	set	134
   460     043B                     _TRISC3	set	1083
   461     0439                     _TRISC1	set	1081
   462     043C                     _TRISC4	set	1084
   463     0438                     _TRISC0	set	1080
   464     043A                     _TRISC2	set	1082
   465                           
   466                           	psect	cinit
   467     07E7                     start_initialization:	
   468                           ; #config settings
   469                           
   470     07E7                     __initialization:
   471                           
   472                           ; Initialize objects allocated to BANK0
   473     07E7  1383               	bcf	3,7	;select IRP bank0
   474     07E8  303D               	movlw	low (__pdataBANK0+8)
   475     07E9  00FD               	movwf	btemp+-1
   476     07EA  3003               	movlw	high __pidataBANK0
   477     07EB  00FE               	movwf	btemp
   478     07EC  30FC               	movlw	low __pidataBANK0
   479     07ED  00FF               	movwf	btemp+1
   480     07EE  3035               	movlw	low __pdataBANK0
   481     07EF  0084               	movwf	4
   482     07F0  120A  118A  2444  120A  118A  	fcall	init_ram0
   483                           
   484                           ; Initialize objects allocated to COMMON
   485     07F5  120A  118A  23F3  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   486     07FA  00FD               	movwf	__pdataCOMMON& (0+127)
   487                           
   488                           ; Clear objects allocated to BANK0
   489     07FB  01BD               	clrf	__pbssBANK0& (0+127)
   490     07FC                     end_of_initialization:	
   491                           ;End of C runtime variable initialization code
   492                           
   493     07FC                     __end_of__initialization:
   494     07FC  0183               	clrf	3
   495     07FD  120A  118A  2CFB   	ljmp	_main	;jump to C main() function
   496                           
   497                           	psect	dataCOMMON
   498     007D                     __pdataCOMMON:
   499     007D                     _p1State:
   500     007D                     	ds	1
   501                           
   502                           	psect	bssBANK0
   503     003D                     __pbssBANK0:
   504     003D                     _isScore:
   505     003D                     	ds	1
   506                           
   507                           	psect	dataBANK0
   508     0035                     __pdataBANK0:
   509     0035                     _ballX:
   510     0035                     	ds	2
   511     0037                     _ballDirY:
   512     0037                     	ds	2
   513     0039                     _ballDirX:
   514     0039                     	ds	2
   515     003B                     _ballYState:
   516     003B                     	ds	1
   517     003C                     _p2State:
   518     003C                     	ds	1
   519                           
   520                           	psect	inittext
   521     0440                     init_fetch0:	
   522                           ;	Called with low address in FSR and high address in W
   523                           
   524     0440  087E               	movf	btemp,w
   525     0441  008A               	movwf	10
   526     0442  087F               	movf	btemp+1,w
   527     0443  0082               	movwf	2
   528     0444                     init_ram0:	
   529                           ;Called with:
   530                           ;	high address of idata address in btemp 
   531                           ;	low address of idata address in btemp+1 
   532                           ;	low address of data in FSR
   533                           ;	high address + 1 of data in btemp-1
   534                           
   535     0444  120A  118A  2440  120A  118A  	fcall	init_fetch0
   536     0449  0080               	movwf	0
   537     044A  0A84               	incf	4,f
   538     044B  0804               	movf	4,w
   539     044C  067D               	xorwf	btemp+-1,w
   540     044D  1903               	btfsc	3,2
   541     044E  3400               	retlw	0
   542     044F  0AFF               	incf	btemp+1,f
   543     0450  1903               	btfsc	3,2
   544     0451  0AFE               	incf	btemp,f
   545     0452  2C44               	goto	init_ram0
   546                           
   547                           	psect	cstackCOMMON
   548     0070                     __pcstackCOMMON:
   549     0070                     ?_MAX7219_init:
   550     0070                     ?_SPI_init:	
   551                           ; 1 bytes @ 0x0
   552                           
   553     0070                     ??_SPI_init:	
   554                           ; 1 bytes @ 0x0
   555                           
   556     0070                     ?_MAX7219_config:	
   557                           ; 1 bytes @ 0x0
   558                           
   559     0070                     ?_SPI_write:	
   560                           ; 1 bytes @ 0x0
   561                           
   562     0070                     ??_SPI_write:	
   563                           ; 1 bytes @ 0x0
   564                           
   565     0070                     ?_initGame:	
   566                           ; 1 bytes @ 0x0
   567                           
   568     0070                     ?_updateBallPosition:	
   569                           ; 1 bytes @ 0x0
   570                           
   571     0070                     ?_readButton0:	
   572                           ; 1 bytes @ 0x0
   573                           
   574     0070                     ?_readButton1:	
   575                           ; 2 bytes @ 0x0
   576                           
   577     0070                     ?_readButton2:	
   578                           ; 2 bytes @ 0x0
   579                           
   580     0070                     ?_readButton3:	
   581                           ; 2 bytes @ 0x0
   582                           
   583     0070                     MAX7219_config@chip:	
   584                           ; 2 bytes @ 0x0
   585                           
   586                           
   587                           ; 1 bytes @ 0x0
   588     0070                     	ds	2
   589     0072                     ??_readButton0:
   590     0072                     ??_readButton1:	
   591                           ; 1 bytes @ 0x2
   592                           
   593     0072                     ??_readButton2:	
   594                           ; 1 bytes @ 0x2
   595                           
   596     0072                     ??_readButton3:	
   597                           ; 1 bytes @ 0x2
   598                           
   599     0072                     SPI_write@send:	
   600                           ; 1 bytes @ 0x2
   601                           
   602                           
   603                           ; 1 bytes @ 0x2
   604     0072                     	ds	1
   605     0073                     SPI_write@Tx:
   606                           
   607                           ; 2 bytes @ 0x3
   608     0073                     	ds	2
   609     0075                     ?_MAX7219_write:
   610     0075                     MAX7219_write@data:	
   611                           ; 1 bytes @ 0x5
   612                           
   613                           
   614                           ; 1 bytes @ 0x5
   615     0075                     	ds	1
   616     0076                     ??_MAX7219_write:
   617     0076                     MAX7219_write@regName:	
   618                           ; 1 bytes @ 0x6
   619                           
   620                           
   621                           ; 1 bytes @ 0x6
   622     0076                     	ds	1
   623     0077                     ??_MAX7219_init:
   624     0077                     ??_MAX7219_config:	
   625                           ; 1 bytes @ 0x7
   626                           
   627     0077                     ??_initGame:	
   628                           ; 1 bytes @ 0x7
   629                           
   630     0077                     ?_buttonGoUp:	
   631                           ; 1 bytes @ 0x7
   632                           
   633     0077                     ?_buttonGoDown:	
   634                           ; 1 bytes @ 0x7
   635                           
   636     0077                     ??_updateBallPosition:	
   637                           ; 1 bytes @ 0x7
   638                           
   639     0077                     MAX7219_init@noChips:	
   640                           ; 1 bytes @ 0x7
   641                           
   642     0077                     buttonGoUp@player:	
   643                           ; 1 bytes @ 0x7
   644                           
   645     0077                     buttonGoDown@player:	
   646                           ; 2 bytes @ 0x7
   647                           
   648                           
   649                           ; 2 bytes @ 0x7
   650     0077                     	ds	2
   651     0079                     ??_buttonGoUp:
   652     0079                     ??_buttonGoDown:	
   653                           ; 1 bytes @ 0x9
   654                           
   655     0079                     ?_main:	
   656                           ; 1 bytes @ 0x9
   657                           
   658     0079                     main@argc:	
   659                           ; 2 bytes @ 0x9
   660                           
   661                           
   662                           ; 2 bytes @ 0x9
   663     0079                     	ds	2
   664     007B                     main@argv:
   665                           
   666                           ; 2 bytes @ 0xB
   667     007B                     	ds	2
   668                           
   669                           	psect	cstackBANK0
   670     0020                     __pcstackBANK0:
   671     0020                     updateBallPosition@ballXprev:
   672                           
   673                           ; 2 bytes @ 0x0
   674     0020                     	ds	2
   675     0022                     _updateBallPosition$63:
   676                           
   677                           ; 2 bytes @ 0x2
   678     0022                     	ds	2
   679     0024                     _updateBallPosition$64:
   680                           
   681                           ; 2 bytes @ 0x4
   682     0024                     	ds	2
   683     0026                     _updateBallPosition$65:
   684                           
   685                           ; 2 bytes @ 0x6
   686     0026                     	ds	2
   687     0028                     _updateBallPosition$66:
   688                           
   689                           ; 2 bytes @ 0x8
   690     0028                     	ds	2
   691     002A                     _updateBallPosition$67:
   692                           
   693                           ; 2 bytes @ 0xA
   694     002A                     	ds	2
   695     002C                     _updateBallPosition$68:
   696                           
   697                           ; 2 bytes @ 0xC
   698     002C                     	ds	2
   699     002E                     _updateBallPosition$69:
   700                           
   701                           ; 2 bytes @ 0xE
   702     002E                     	ds	2
   703     0030                     _updateBallPosition$70:
   704                           
   705                           ; 2 bytes @ 0x10
   706     0030                     	ds	2
   707     0032                     ??_main:
   708                           
   709                           ; 1 bytes @ 0x12
   710     0032                     	ds	3
   711                           
   712                           	psect	maintext
   713     04FB                     __pmaintext:	
   714 ;;
   715 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   716 ;;
   717 ;; *************** function _main *****************
   718 ;; Defined at:
   719 ;;		line 239 in file "main.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;  argc            2    9[COMMON] int 
   722 ;;  argv            2   11[COMMON] PTR PTR unsigned char 
   723 ;; Auto vars:     Size  Location     Type
   724 ;;		None
   725 ;; Return value:  Size  Location     Type
   726 ;;                  2    9[COMMON] int 
   727 ;; Registers used:
   728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   729 ;; Tracked objects:
   730 ;;		On entry : B00/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   734 ;;      Params:         4       0       0       0       0
   735 ;;      Locals:         0       0       0       0       0
   736 ;;      Temps:          0       3       0       0       0
   737 ;;      Totals:         4       3       0       0       0
   738 ;;Total ram usage:        7 bytes
   739 ;; Hardware stack levels required when called: 4
   740 ;; This function calls:
   741 ;;		_MAX7219_init
   742 ;;		_buttonGoDown
   743 ;;		_buttonGoUp
   744 ;;		_initGame
   745 ;;		_readButton0
   746 ;;		_readButton1
   747 ;;		_readButton2
   748 ;;		_readButton3
   749 ;;		_updateBallPosition
   750 ;; This function is called by:
   751 ;;		Startup code after reset
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755     04FB                     _main:	
   756                           ;psect for function _main
   757                           
   758     04FB                     l1319:	
   759                           ;incstack = 0
   760                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   761                           
   762                           
   763                           ;main.c: 240:     TRISB = 0x0F;
   764     04FB  300F               	movlw	15
   765     04FC  1683               	bsf	3,5	;RP0=1, select bank1
   766     04FD  1303               	bcf	3,6	;RP1=0, select bank1
   767     04FE  0086               	movwf	6	;volatile
   768     04FF                     l1321:
   769                           
   770                           ;main.c: 241:     TRISC = 0;
   771     04FF  0187               	clrf	7	;volatile
   772     0500                     l1323:
   773                           
   774                           ;main.c: 243:         initGame();
   775     0500  120A  118A  24A3  120A  118A  	fcall	_initGame
   776     0505                     l1325:
   777                           
   778                           ;main.c: 244:         MAX7219_init(1);
   779     0505  3001               	movlw	1
   780     0506  120A  118A  2467  120A  118A  	fcall	_MAX7219_init
   781                           
   782                           ;main.c: 245:         while (!isScore) {
   783     050B  2D6F               	goto	l1347
   784     050C                     l1327:
   785                           
   786                           ;main.c: 247:             if (readButton0() == 1) {
   787     050C  120A  118A  2404  120A  118A  	fcall	_readButton0
   788     0511  0370               	decf	?_readButton0,w
   789     0512  0471               	iorwf	?_readButton0+1,w
   790     0513  1D03               	btfss	3,2
   791     0514  2D16               	goto	u671
   792     0515  2D17               	goto	u670
   793     0516                     u671:
   794     0516  2D20               	goto	l1331
   795     0517                     u670:
   796     0517                     l1329:
   797                           
   798                           ;main.c: 248:                 buttonGoUp(1);
   799     0517  3001               	movlw	1
   800     0518  00F7               	movwf	buttonGoUp@player
   801     0519  3000               	movlw	0
   802     051A  00F8               	movwf	buttonGoUp@player+1
   803     051B  120A  118A  262A  120A  118A  	fcall	_buttonGoUp
   804     0520                     l1331:
   805                           
   806                           ;main.c: 250:             if (readButton1() == 1) {
   807     0520  120A  118A  2413  120A  118A  	fcall	_readButton1
   808     0525  0370               	decf	?_readButton1,w
   809     0526  0471               	iorwf	?_readButton1+1,w
   810     0527  1D03               	btfss	3,2
   811     0528  2D2A               	goto	u681
   812     0529  2D2B               	goto	u680
   813     052A                     u681:
   814     052A  2D34               	goto	l1335
   815     052B                     u680:
   816     052B                     l1333:
   817                           
   818                           ;main.c: 251:                 buttonGoDown(1);
   819     052B  3001               	movlw	1
   820     052C  00F7               	movwf	buttonGoDown@player
   821     052D  3000               	movlw	0
   822     052E  00F8               	movwf	buttonGoDown@player+1
   823     052F  120A  118A  257A  120A  118A  	fcall	_buttonGoDown
   824     0534                     l1335:
   825                           
   826                           ;main.c: 253:             if (readButton2() == 1) {
   827     0534  120A  118A  2422  120A  118A  	fcall	_readButton2
   828     0539  0370               	decf	?_readButton2,w
   829     053A  0471               	iorwf	?_readButton2+1,w
   830     053B  1D03               	btfss	3,2
   831     053C  2D3E               	goto	u691
   832     053D  2D3F               	goto	u690
   833     053E                     u691:
   834     053E  2D48               	goto	l1339
   835     053F                     u690:
   836     053F                     l1337:
   837                           
   838                           ;main.c: 254:                 buttonGoUp(2);
   839     053F  3002               	movlw	2
   840     0540  00F7               	movwf	buttonGoUp@player
   841     0541  3000               	movlw	0
   842     0542  00F8               	movwf	buttonGoUp@player+1
   843     0543  120A  118A  262A  120A  118A  	fcall	_buttonGoUp
   844     0548                     l1339:
   845                           
   846                           ;main.c: 256:             if (readButton3() == 1) {
   847     0548  120A  118A  2431  120A  118A  	fcall	_readButton3
   848     054D  0370               	decf	?_readButton3,w
   849     054E  0471               	iorwf	?_readButton3+1,w
   850     054F  1D03               	btfss	3,2
   851     0550  2D52               	goto	u701
   852     0551  2D53               	goto	u700
   853     0552                     u701:
   854     0552  2D5C               	goto	l1343
   855     0553                     u700:
   856     0553                     l1341:
   857                           
   858                           ;main.c: 257:                 buttonGoDown(2);
   859     0553  3002               	movlw	2
   860     0554  00F7               	movwf	buttonGoDown@player
   861     0555  3000               	movlw	0
   862     0556  00F8               	movwf	buttonGoDown@player+1
   863     0557  120A  118A  257A  120A  118A  	fcall	_buttonGoDown
   864     055C                     l1343:
   865                           
   866                           ;main.c: 259:             _delay((unsigned long)((5)*(800000000/4000.0)));
   867     055C  3006               	movlw	6
   868     055D  1283               	bcf	3,5	;RP0=0, select bank0
   869     055E  1303               	bcf	3,6	;RP1=0, select bank0
   870     055F  00B4               	movwf	??_main+2
   871     0560  3013               	movlw	19
   872     0561  00B3               	movwf	??_main+1
   873     0562  30AD               	movlw	173
   874     0563  00B2               	movwf	??_main
   875     0564                     u737:
   876     0564  0BB2               	decfsz	??_main,f
   877     0565  2D64               	goto	u737
   878     0566  0BB3               	decfsz	??_main+1,f
   879     0567  2D64               	goto	u737
   880     0568  0BB4               	decfsz	??_main+2,f
   881     0569  2D64               	goto	u737
   882     056A                     l1345:
   883                           
   884                           ;main.c: 260:             updateBallPosition();
   885     056A  120A  118A  26DA  120A  118A  	fcall	_updateBallPosition
   886     056F                     l1347:
   887                           
   888                           ;main.c: 245:         while (!isScore) {
   889     056F  1283               	bcf	3,5	;RP0=0, select bank0
   890     0570  1303               	bcf	3,6	;RP1=0, select bank0
   891     0571  083D               	movf	_isScore,w
   892     0572  1903               	btfsc	3,2
   893     0573  2D75               	goto	u711
   894     0574  2D76               	goto	u710
   895     0575                     u711:
   896     0575  2D0C               	goto	l1327
   897     0576                     u710:
   898     0576  2D00               	goto	l1323
   899     0577  120A  118A  2800   	ljmp	start
   900     057A                     __end_of_main:
   901                           
   902                           	psect	text1
   903     06DA                     __ptext1:	
   904 ;; *************** function _updateBallPosition *****************
   905 ;; Defined at:
   906 ;;		line 194 in file "main.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;		None
   909 ;; Auto vars:     Size  Location     Type
   910 ;;  ballXprev       2    0[BANK0 ] int 
   911 ;; Return value:  Size  Location     Type
   912 ;;                  1    wreg      void 
   913 ;; Registers used:
   914 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   920 ;;      Params:         0       0       0       0       0
   921 ;;      Locals:         0      18       0       0       0
   922 ;;      Temps:          0       0       0       0       0
   923 ;;      Totals:         0      18       0       0       0
   924 ;;Total ram usage:       18 bytes
   925 ;; Hardware stack levels used: 1
   926 ;; Hardware stack levels required when called: 2
   927 ;; This function calls:
   928 ;;		_MAX7219_write
   929 ;; This function is called by:
   930 ;;		_main
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934     06DA                     _updateBallPosition:	
   935                           ;psect for function _updateBallPosition
   936                           
   937     06DA                     l1241:	
   938                           ;incstack = 0
   939                           ; Regs used in _updateBallPosition: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   940                           
   941                           
   942                           ;main.c: 195:     int ballXprev = ballX;
   943     06DA  1283               	bcf	3,5	;RP0=0, select bank0
   944     06DB  1303               	bcf	3,6	;RP1=0, select bank0
   945     06DC  0836               	movf	_ballX+1,w
   946     06DD  00A1               	movwf	updateBallPosition@ballXprev+1
   947     06DE  0835               	movf	_ballX,w
   948     06DF  00A0               	movwf	updateBallPosition@ballXprev
   949     06E0                     l1243:
   950                           
   951                           ;main.c: 197:     if (ballX == 2) {
   952     06E0  3002               	movlw	2
   953     06E1  0635               	xorwf	_ballX,w
   954     06E2  0436               	iorwf	_ballX+1,w
   955     06E3  1D03               	btfss	3,2
   956     06E4  2EE6               	goto	u441
   957     06E5  2EE7               	goto	u440
   958     06E6                     u441:
   959     06E6  2EF9               	goto	l1249
   960     06E7                     u440:
   961     06E7                     l1245:
   962                           
   963                           ;main.c: 198:         if ((p2State & ballYState) == p2State) {
   964     06E7  083C               	movf	_p2State,w
   965     06E8  053B               	andwf	_ballYState,w
   966     06E9  063C               	xorwf	_p2State,w
   967     06EA  1D03               	skipz
   968     06EB  2EED               	goto	u451
   969     06EC  2EEE               	goto	u450
   970     06ED                     u451:
   971     06ED  2F08               	goto	l1255
   972     06EE                     u450:
   973     06EE                     l1247:
   974                           
   975                           ;main.c: 199:             ballDirX = -ballDirX;
   976     06EE  09B9               	comf	_ballDirX,f
   977     06EF  09BA               	comf	_ballDirX+1,f
   978     06F0  0AB9               	incf	_ballDirX,f
   979     06F1  1903               	skipnz
   980     06F2  0ABA               	incf	_ballDirX+1,f
   981                           
   982                           ;main.c: 200:             ballDirY = -ballDirY;
   983     06F3  09B7               	comf	_ballDirY,f
   984     06F4  09B8               	comf	_ballDirY+1,f
   985     06F5  0AB7               	incf	_ballDirY,f
   986     06F6  1903               	skipnz
   987     06F7  0AB8               	incf	_ballDirY+1,f
   988     06F8  2F08               	goto	l1255
   989     06F9                     l1249:
   990     06F9  3007               	movlw	7
   991     06FA  0635               	xorwf	_ballX,w
   992     06FB  0436               	iorwf	_ballX+1,w
   993     06FC  1D03               	btfss	3,2
   994     06FD  2EFF               	goto	u461
   995     06FE  2F00               	goto	u460
   996     06FF                     u461:
   997     06FF  2F08               	goto	l1255
   998     0700                     u460:
   999     0700                     l1251:
  1000                           
  1001                           ;main.c: 204:         if ((p1State & ballYState) == p1State) {
  1002     0700  087D               	movf	_p1State,w
  1003     0701  053B               	andwf	_ballYState,w
  1004     0702  067D               	xorwf	_p1State,w
  1005     0703  1D03               	skipz
  1006     0704  2F06               	goto	u471
  1007     0705  2F07               	goto	u470
  1008     0706                     u471:
  1009     0706  2F08               	goto	l1255
  1010     0707                     u470:
  1011     0707  2EEE               	goto	l1247
  1012     0708                     l1255:
  1013                           
  1014                           ;main.c: 209:     ballX += ballDirX;
  1015     0708  0839               	movf	_ballDirX,w
  1016     0709  07B5               	addwf	_ballX,f
  1017     070A  1803               	skipnc
  1018     070B  0AB6               	incf	_ballX+1,f
  1019     070C  083A               	movf	_ballDirX+1,w
  1020     070D  07B6               	addwf	_ballX+1,f
  1021     070E                     l1257:
  1022                           
  1023                           ;main.c: 211:     if ((ballYState & 0b10000000) == 0b10000000) {
  1024     070E  1FBB               	btfss	_ballYState,7
  1025     070F  2F11               	goto	u481
  1026     0710  2F12               	goto	u480
  1027     0711                     u481:
  1028     0711  2F28               	goto	l97
  1029     0712                     u480:
  1030     0712                     l1259:
  1031                           
  1032                           ;main.c: 212:         ballYState = (ballDirY == 1) ? 0b00000001 : 0b10000000;
  1033     0712  0337               	decf	_ballDirY,w
  1034     0713  0438               	iorwf	_ballDirY+1,w
  1035     0714  1903               	btfsc	3,2
  1036     0715  2F17               	goto	u491
  1037     0716  2F18               	goto	u490
  1038     0717                     u491:
  1039     0717  2F1D               	goto	l1263
  1040     0718                     u490:
  1041     0718                     l1261:
  1042     0718  3080               	movlw	128
  1043     0719  00A2               	movwf	_updateBallPosition$63
  1044     071A  3000               	movlw	0
  1045     071B  00A3               	movwf	_updateBallPosition$63+1
  1046     071C  2F21               	goto	l101
  1047     071D                     l1263:
  1048     071D  3001               	movlw	1
  1049     071E  00A2               	movwf	_updateBallPosition$63
  1050     071F  3000               	movlw	0
  1051     0720  00A3               	movwf	_updateBallPosition$63+1
  1052     0721                     l101:
  1053     0721  0822               	movf	_updateBallPosition$63,w
  1054     0722  00BB               	movwf	_ballYState
  1055                           
  1056                           ;main.c: 213:         ballDirY = 1;
  1057     0723  3001               	movlw	1
  1058     0724  00B7               	movwf	_ballDirY
  1059     0725  3000               	movlw	0
  1060     0726  00B8               	movwf	_ballDirY+1
  1061                           
  1062                           ;main.c: 214:     } else if ((ballYState & 0b00000001) == 0b00000001) {
  1063     0727  2FC6               	goto	l1307
  1064     0728                     l97:
  1065     0728  1C3B               	btfss	_ballYState,0
  1066     0729  2F2B               	goto	u501
  1067     072A  2F2C               	goto	u500
  1068     072B                     u501:
  1069     072B  2F3E               	goto	l103
  1070     072C                     u500:
  1071     072C                     l1265:
  1072                           
  1073                           ;main.c: 215:         ballYState = (ballDirY == 1) ? 0b00000010 : 0b10000000;
  1074     072C  0337               	decf	_ballDirY,w
  1075     072D  0438               	iorwf	_ballDirY+1,w
  1076     072E  1903               	btfsc	3,2
  1077     072F  2F31               	goto	u511
  1078     0730  2F32               	goto	u510
  1079     0731                     u511:
  1080     0731  2F37               	goto	l1269
  1081     0732                     u510:
  1082     0732                     l1267:
  1083     0732  3080               	movlw	128
  1084     0733  00A4               	movwf	_updateBallPosition$64
  1085     0734  3000               	movlw	0
  1086     0735  00A5               	movwf	_updateBallPosition$64+1
  1087     0736  2F3B               	goto	l107
  1088     0737                     l1269:
  1089     0737  3002               	movlw	2
  1090     0738  00A4               	movwf	_updateBallPosition$64
  1091     0739  3000               	movlw	0
  1092     073A  00A5               	movwf	_updateBallPosition$64+1
  1093     073B                     l107:
  1094     073B  0824               	movf	_updateBallPosition$64,w
  1095     073C  00BB               	movwf	_ballYState
  1096                           
  1097                           ;main.c: 216:     } else if ((ballYState & 0b00000010) == 0b00000010) {
  1098     073D  2FC6               	goto	l1307
  1099     073E                     l103:
  1100     073E  1CBB               	btfss	_ballYState,1
  1101     073F  2F41               	goto	u521
  1102     0740  2F42               	goto	u520
  1103     0741                     u521:
  1104     0741  2F54               	goto	l109
  1105     0742                     u520:
  1106     0742                     l1271:
  1107                           
  1108                           ;main.c: 217:         ballYState = (ballDirY == 1) ? 0b00000100 : 0b00000001;
  1109     0742  0337               	decf	_ballDirY,w
  1110     0743  0438               	iorwf	_ballDirY+1,w
  1111     0744  1903               	btfsc	3,2
  1112     0745  2F47               	goto	u531
  1113     0746  2F48               	goto	u530
  1114     0747                     u531:
  1115     0747  2F4D               	goto	l1275
  1116     0748                     u530:
  1117     0748                     l1273:
  1118     0748  3001               	movlw	1
  1119     0749  00A6               	movwf	_updateBallPosition$65
  1120     074A  3000               	movlw	0
  1121     074B  00A7               	movwf	_updateBallPosition$65+1
  1122     074C  2F51               	goto	l113
  1123     074D                     l1275:
  1124     074D  3004               	movlw	4
  1125     074E  00A6               	movwf	_updateBallPosition$65
  1126     074F  3000               	movlw	0
  1127     0750  00A7               	movwf	_updateBallPosition$65+1
  1128     0751                     l113:
  1129     0751  0826               	movf	_updateBallPosition$65,w
  1130     0752  00BB               	movwf	_ballYState
  1131                           
  1132                           ;main.c: 218:     } else if ((ballYState & 0b00000100) == 0b00000100) {
  1133     0753  2FC6               	goto	l1307
  1134     0754                     l109:
  1135     0754  1D3B               	btfss	_ballYState,2
  1136     0755  2F57               	goto	u541
  1137     0756  2F58               	goto	u540
  1138     0757                     u541:
  1139     0757  2F6A               	goto	l115
  1140     0758                     u540:
  1141     0758                     l1277:
  1142                           
  1143                           ;main.c: 219:         ballYState = (ballDirY == 1) ? 0b00001000 : 0b00000010;
  1144     0758  0337               	decf	_ballDirY,w
  1145     0759  0438               	iorwf	_ballDirY+1,w
  1146     075A  1903               	btfsc	3,2
  1147     075B  2F5D               	goto	u551
  1148     075C  2F5E               	goto	u550
  1149     075D                     u551:
  1150     075D  2F63               	goto	l1281
  1151     075E                     u550:
  1152     075E                     l1279:
  1153     075E  3002               	movlw	2
  1154     075F  00A8               	movwf	_updateBallPosition$66
  1155     0760  3000               	movlw	0
  1156     0761  00A9               	movwf	_updateBallPosition$66+1
  1157     0762  2F67               	goto	l119
  1158     0763                     l1281:
  1159     0763  3008               	movlw	8
  1160     0764  00A8               	movwf	_updateBallPosition$66
  1161     0765  3000               	movlw	0
  1162     0766  00A9               	movwf	_updateBallPosition$66+1
  1163     0767                     l119:
  1164     0767  0828               	movf	_updateBallPosition$66,w
  1165     0768  00BB               	movwf	_ballYState
  1166                           
  1167                           ;main.c: 220:     } else if ((ballYState & 0b00001000) == 0b00001000) {
  1168     0769  2FC6               	goto	l1307
  1169     076A                     l115:
  1170     076A  1DBB               	btfss	_ballYState,3
  1171     076B  2F6D               	goto	u561
  1172     076C  2F6E               	goto	u560
  1173     076D                     u561:
  1174     076D  2F80               	goto	l121
  1175     076E                     u560:
  1176     076E                     l1283:
  1177                           
  1178                           ;main.c: 221:         ballYState = (ballDirY == 1) ? 0b00010000 : 0b00000100;
  1179     076E  0337               	decf	_ballDirY,w
  1180     076F  0438               	iorwf	_ballDirY+1,w
  1181     0770  1903               	btfsc	3,2
  1182     0771  2F73               	goto	u571
  1183     0772  2F74               	goto	u570
  1184     0773                     u571:
  1185     0773  2F79               	goto	l1287
  1186     0774                     u570:
  1187     0774                     l1285:
  1188     0774  3004               	movlw	4
  1189     0775  00AA               	movwf	_updateBallPosition$67
  1190     0776  3000               	movlw	0
  1191     0777  00AB               	movwf	_updateBallPosition$67+1
  1192     0778  2F7D               	goto	l125
  1193     0779                     l1287:
  1194     0779  3010               	movlw	16
  1195     077A  00AA               	movwf	_updateBallPosition$67
  1196     077B  3000               	movlw	0
  1197     077C  00AB               	movwf	_updateBallPosition$67+1
  1198     077D                     l125:
  1199     077D  082A               	movf	_updateBallPosition$67,w
  1200     077E  00BB               	movwf	_ballYState
  1201                           
  1202                           ;main.c: 222:     } else if ((ballYState & 0b00010000) == 0b00010000) {
  1203     077F  2FC6               	goto	l1307
  1204     0780                     l121:
  1205     0780  1E3B               	btfss	_ballYState,4
  1206     0781  2F83               	goto	u581
  1207     0782  2F84               	goto	u580
  1208     0783                     u581:
  1209     0783  2F96               	goto	l127
  1210     0784                     u580:
  1211     0784                     l1289:
  1212                           
  1213                           ;main.c: 223:         ballYState = (ballDirY == 1) ? 0b00100000 : 0b00001000;
  1214     0784  0337               	decf	_ballDirY,w
  1215     0785  0438               	iorwf	_ballDirY+1,w
  1216     0786  1903               	btfsc	3,2
  1217     0787  2F89               	goto	u591
  1218     0788  2F8A               	goto	u590
  1219     0789                     u591:
  1220     0789  2F8F               	goto	l1293
  1221     078A                     u590:
  1222     078A                     l1291:
  1223     078A  3008               	movlw	8
  1224     078B  00AC               	movwf	_updateBallPosition$68
  1225     078C  3000               	movlw	0
  1226     078D  00AD               	movwf	_updateBallPosition$68+1
  1227     078E  2F93               	goto	l131
  1228     078F                     l1293:
  1229     078F  3020               	movlw	32
  1230     0790  00AC               	movwf	_updateBallPosition$68
  1231     0791  3000               	movlw	0
  1232     0792  00AD               	movwf	_updateBallPosition$68+1
  1233     0793                     l131:
  1234     0793  082C               	movf	_updateBallPosition$68,w
  1235     0794  00BB               	movwf	_ballYState
  1236                           
  1237                           ;main.c: 224:     } else if ((ballYState & 0b00100000) == 0b00100000) {
  1238     0795  2FC6               	goto	l1307
  1239     0796                     l127:
  1240     0796  1EBB               	btfss	_ballYState,5
  1241     0797  2F99               	goto	u601
  1242     0798  2F9A               	goto	u600
  1243     0799                     u601:
  1244     0799  2FAC               	goto	l133
  1245     079A                     u600:
  1246     079A                     l1295:
  1247                           
  1248                           ;main.c: 225:         ballYState = (ballDirY == 1) ? 0b01000000 : 0b00010000;
  1249     079A  0337               	decf	_ballDirY,w
  1250     079B  0438               	iorwf	_ballDirY+1,w
  1251     079C  1903               	btfsc	3,2
  1252     079D  2F9F               	goto	u611
  1253     079E  2FA0               	goto	u610
  1254     079F                     u611:
  1255     079F  2FA5               	goto	l1299
  1256     07A0                     u610:
  1257     07A0                     l1297:
  1258     07A0  3010               	movlw	16
  1259     07A1  00AE               	movwf	_updateBallPosition$69
  1260     07A2  3000               	movlw	0
  1261     07A3  00AF               	movwf	_updateBallPosition$69+1
  1262     07A4  2FA9               	goto	l137
  1263     07A5                     l1299:
  1264     07A5  3040               	movlw	64
  1265     07A6  00AE               	movwf	_updateBallPosition$69
  1266     07A7  3000               	movlw	0
  1267     07A8  00AF               	movwf	_updateBallPosition$69+1
  1268     07A9                     l137:
  1269     07A9  082E               	movf	_updateBallPosition$69,w
  1270     07AA  00BB               	movwf	_ballYState
  1271                           
  1272                           ;main.c: 226:     } else if ((ballYState & 0b01000000) == 0b01000000) {
  1273     07AB  2FC6               	goto	l1307
  1274     07AC                     l133:
  1275     07AC  1F3B               	btfss	_ballYState,6
  1276     07AD  2FAF               	goto	u621
  1277     07AE  2FB0               	goto	u620
  1278     07AF                     u621:
  1279     07AF  2FC6               	goto	l126
  1280     07B0                     u620:
  1281     07B0                     l1301:
  1282                           
  1283                           ;main.c: 227:         ballYState = (ballDirY == 1) ? 0b01000000 : 0b00100000;
  1284     07B0  0337               	decf	_ballDirY,w
  1285     07B1  0438               	iorwf	_ballDirY+1,w
  1286     07B2  1903               	btfsc	3,2
  1287     07B3  2FB5               	goto	u631
  1288     07B4  2FB6               	goto	u630
  1289     07B5                     u631:
  1290     07B5  2FBB               	goto	l1305
  1291     07B6                     u630:
  1292     07B6                     l1303:
  1293     07B6  3020               	movlw	32
  1294     07B7  00B0               	movwf	_updateBallPosition$70
  1295     07B8  3000               	movlw	0
  1296     07B9  00B1               	movwf	_updateBallPosition$70+1
  1297     07BA  2FBF               	goto	l143
  1298     07BB                     l1305:
  1299     07BB  3040               	movlw	64
  1300     07BC  00B0               	movwf	_updateBallPosition$70
  1301     07BD  3000               	movlw	0
  1302     07BE  00B1               	movwf	_updateBallPosition$70+1
  1303     07BF                     l143:
  1304     07BF  0830               	movf	_updateBallPosition$70,w
  1305     07C0  00BB               	movwf	_ballYState
  1306                           
  1307                           ;main.c: 228:         ballDirY = -1;
  1308     07C1  30FF               	movlw	255
  1309     07C2  00B7               	movwf	_ballDirY
  1310     07C3  30FF               	movlw	255
  1311     07C4  00B8               	movwf	_ballDirY+1
  1312     07C5  2FC6               	goto	l1307
  1313     07C6                     l126:
  1314     07C6                     l1307:
  1315                           
  1316                           ;main.c: 231:     if (ballX == 1 || ballX == 8) {
  1317     07C6  0335               	decf	_ballX,w
  1318     07C7  0436               	iorwf	_ballX+1,w
  1319     07C8  1903               	btfsc	3,2
  1320     07C9  2FCB               	goto	u641
  1321     07CA  2FCC               	goto	u640
  1322     07CB                     u641:
  1323     07CB  2FD3               	goto	l146
  1324     07CC                     u640:
  1325     07CC                     l1309:
  1326     07CC  3008               	movlw	8
  1327     07CD  0635               	xorwf	_ballX,w
  1328     07CE  0436               	iorwf	_ballX+1,w
  1329     07CF  1D03               	btfss	3,2
  1330     07D0  2FD2               	goto	u651
  1331     07D1  2FD3               	goto	u650
  1332     07D2                     u651:
  1333     07D2  2FD5               	goto	l1311
  1334     07D3                     u650:
  1335     07D3                     l146:
  1336                           
  1337                           ;main.c: 232:         isScore = 1;
  1338     07D3  01BD               	clrf	_isScore
  1339     07D4  0ABD               	incf	_isScore,f
  1340     07D5                     l1311:
  1341                           
  1342                           ;main.c: 235:     MAX7219_write(ballXprev, 0b00000000);
  1343     07D5  01F5               	clrf	MAX7219_write@data
  1344     07D6  0820               	movf	updateBallPosition@ballXprev,w
  1345     07D7  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  1346                           
  1347                           ;main.c: 236:     MAX7219_write(ballX, ballYState);
  1348     07DC  1283               	bcf	3,5	;RP0=0, select bank0
  1349     07DD  1303               	bcf	3,6	;RP1=0, select bank0
  1350     07DE  083B               	movf	_ballYState,w
  1351     07DF  00F5               	movwf	MAX7219_write@data
  1352     07E0  0835               	movf	_ballX,w
  1353     07E1  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  1354     07E6                     l147:
  1355     07E6  0008               	return
  1356     07E7                     __end_of_updateBallPosition:
  1357                           
  1358                           	psect	text2
  1359     0431                     __ptext2:	
  1360 ;; *************** function _readButton3 *****************
  1361 ;; Defined at:
  1362 ;;		line 74 in file "main.c"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;		None
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;		None
  1367 ;; Return value:  Size  Location     Type
  1368 ;;                  2    0[COMMON] int 
  1369 ;; Registers used:
  1370 ;;		wreg, status,0
  1371 ;; Tracked objects:
  1372 ;;		On entry : 0/0
  1373 ;;		On exit  : 0/0
  1374 ;;		Unchanged: 0/0
  1375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1376 ;;      Params:         2       0       0       0       0
  1377 ;;      Locals:         0       0       0       0       0
  1378 ;;      Temps:          2       0       0       0       0
  1379 ;;      Totals:         4       0       0       0       0
  1380 ;;Total ram usage:        4 bytes
  1381 ;; Hardware stack levels used: 1
  1382 ;; This function calls:
  1383 ;;		Nothing
  1384 ;; This function is called by:
  1385 ;;		_main
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389     0431                     _readButton3:	
  1390                           ;psect for function _readButton3
  1391                           
  1392     0431                     l1117:	
  1393                           ;incstack = 0
  1394                           ; Regs used in _readButton3: [wreg+status,0]
  1395                           
  1396                           
  1397                           ;main.c: 75:     return RB3;
  1398     0431  1003               	clrc
  1399     0432  1283               	bcf	3,5	;RP0=0, select bank0
  1400     0433  1303               	bcf	3,6	;RP1=0, select bank0
  1401     0434  1986               	btfsc	6,3	;volatile
  1402     0435  1403               	setc
  1403     0436  3000               	movlw	0
  1404     0437  1803               	skipnc
  1405     0438  3001               	movlw	1
  1406     0439  00F2               	movwf	??_readButton3
  1407     043A  01F3               	clrf	??_readButton3+1
  1408     043B  0872               	movf	??_readButton3,w
  1409     043C  00F0               	movwf	?_readButton3
  1410     043D  0873               	movf	??_readButton3+1,w
  1411     043E  00F1               	movwf	?_readButton3+1
  1412     043F                     l47:
  1413     043F  0008               	return
  1414     0440                     __end_of_readButton3:
  1415                           
  1416                           	psect	text3
  1417     0422                     __ptext3:	
  1418 ;; *************** function _readButton2 *****************
  1419 ;; Defined at:
  1420 ;;		line 70 in file "main.c"
  1421 ;; Parameters:    Size  Location     Type
  1422 ;;		None
  1423 ;; Auto vars:     Size  Location     Type
  1424 ;;		None
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  2    0[COMMON] int 
  1427 ;; Registers used:
  1428 ;;		wreg, status,0
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1434 ;;      Params:         2       0       0       0       0
  1435 ;;      Locals:         0       0       0       0       0
  1436 ;;      Temps:          2       0       0       0       0
  1437 ;;      Totals:         4       0       0       0       0
  1438 ;;Total ram usage:        4 bytes
  1439 ;; Hardware stack levels used: 1
  1440 ;; This function calls:
  1441 ;;		Nothing
  1442 ;; This function is called by:
  1443 ;;		_main
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447     0422                     _readButton2:	
  1448                           ;psect for function _readButton2
  1449                           
  1450     0422                     l1113:	
  1451                           ;incstack = 0
  1452                           ; Regs used in _readButton2: [wreg+status,0]
  1453                           
  1454                           
  1455                           ;main.c: 71:     return RB2;
  1456     0422  1003               	clrc
  1457     0423  1283               	bcf	3,5	;RP0=0, select bank0
  1458     0424  1303               	bcf	3,6	;RP1=0, select bank0
  1459     0425  1906               	btfsc	6,2	;volatile
  1460     0426  1403               	setc
  1461     0427  3000               	movlw	0
  1462     0428  1803               	skipnc
  1463     0429  3001               	movlw	1
  1464     042A  00F2               	movwf	??_readButton2
  1465     042B  01F3               	clrf	??_readButton2+1
  1466     042C  0872               	movf	??_readButton2,w
  1467     042D  00F0               	movwf	?_readButton2
  1468     042E  0873               	movf	??_readButton2+1,w
  1469     042F  00F1               	movwf	?_readButton2+1
  1470     0430                     l44:
  1471     0430  0008               	return
  1472     0431                     __end_of_readButton2:
  1473                           
  1474                           	psect	text4
  1475     0413                     __ptext4:	
  1476 ;; *************** function _readButton1 *****************
  1477 ;; Defined at:
  1478 ;;		line 66 in file "main.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;		None
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;		None
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  2    0[COMMON] int 
  1485 ;; Registers used:
  1486 ;;		wreg, status,0
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1492 ;;      Params:         2       0       0       0       0
  1493 ;;      Locals:         0       0       0       0       0
  1494 ;;      Temps:          2       0       0       0       0
  1495 ;;      Totals:         4       0       0       0       0
  1496 ;;Total ram usage:        4 bytes
  1497 ;; Hardware stack levels used: 1
  1498 ;; This function calls:
  1499 ;;		Nothing
  1500 ;; This function is called by:
  1501 ;;		_main
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504                           
  1505     0413                     _readButton1:	
  1506                           ;psect for function _readButton1
  1507                           
  1508     0413                     l1109:	
  1509                           ;incstack = 0
  1510                           ; Regs used in _readButton1: [wreg+status,0]
  1511                           
  1512                           
  1513                           ;main.c: 67:     return RB1;
  1514     0413  1003               	clrc
  1515     0414  1283               	bcf	3,5	;RP0=0, select bank0
  1516     0415  1303               	bcf	3,6	;RP1=0, select bank0
  1517     0416  1886               	btfsc	6,1	;volatile
  1518     0417  1403               	setc
  1519     0418  3000               	movlw	0
  1520     0419  1803               	skipnc
  1521     041A  3001               	movlw	1
  1522     041B  00F2               	movwf	??_readButton1
  1523     041C  01F3               	clrf	??_readButton1+1
  1524     041D  0872               	movf	??_readButton1,w
  1525     041E  00F0               	movwf	?_readButton1
  1526     041F  0873               	movf	??_readButton1+1,w
  1527     0420  00F1               	movwf	?_readButton1+1
  1528     0421                     l41:
  1529     0421  0008               	return
  1530     0422                     __end_of_readButton1:
  1531                           
  1532                           	psect	text5
  1533     0404                     __ptext5:	
  1534 ;; *************** function _readButton0 *****************
  1535 ;; Defined at:
  1536 ;;		line 62 in file "main.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;		None
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;		None
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  2    0[COMMON] int 
  1543 ;; Registers used:
  1544 ;;		wreg, status,0
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1550 ;;      Params:         2       0       0       0       0
  1551 ;;      Locals:         0       0       0       0       0
  1552 ;;      Temps:          2       0       0       0       0
  1553 ;;      Totals:         4       0       0       0       0
  1554 ;;Total ram usage:        4 bytes
  1555 ;; Hardware stack levels used: 1
  1556 ;; This function calls:
  1557 ;;		Nothing
  1558 ;; This function is called by:
  1559 ;;		_main
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563     0404                     _readButton0:	
  1564                           ;psect for function _readButton0
  1565                           
  1566     0404                     l1105:	
  1567                           ;incstack = 0
  1568                           ; Regs used in _readButton0: [wreg+status,0]
  1569                           
  1570                           
  1571                           ;main.c: 63:     return RB0;
  1572     0404  1003               	clrc
  1573     0405  1283               	bcf	3,5	;RP0=0, select bank0
  1574     0406  1303               	bcf	3,6	;RP1=0, select bank0
  1575     0407  1806               	btfsc	6,0	;volatile
  1576     0408  1403               	setc
  1577     0409  3000               	movlw	0
  1578     040A  1803               	skipnc
  1579     040B  3001               	movlw	1
  1580     040C  00F2               	movwf	??_readButton0
  1581     040D  01F3               	clrf	??_readButton0+1
  1582     040E  0872               	movf	??_readButton0,w
  1583     040F  00F0               	movwf	?_readButton0
  1584     0410  0873               	movf	??_readButton0+1,w
  1585     0411  00F1               	movwf	?_readButton0+1
  1586     0412                     l38:
  1587     0412  0008               	return
  1588     0413                     __end_of_readButton0:
  1589                           
  1590                           	psect	text6
  1591     04A3                     __ptext6:	
  1592 ;; *************** function _initGame *****************
  1593 ;; Defined at:
  1594 ;;		line 53 in file "main.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;		None
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;		None
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  1    wreg      void 
  1601 ;; Registers used:
  1602 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1608 ;;      Params:         0       0       0       0       0
  1609 ;;      Locals:         0       0       0       0       0
  1610 ;;      Temps:          0       0       0       0       0
  1611 ;;      Totals:         0       0       0       0       0
  1612 ;;Total ram usage:        0 bytes
  1613 ;; Hardware stack levels used: 1
  1614 ;; Hardware stack levels required when called: 2
  1615 ;; This function calls:
  1616 ;;		_MAX7219_write
  1617 ;; This function is called by:
  1618 ;;		_main
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622     04A3                     _initGame:	
  1623                           ;psect for function _initGame
  1624                           
  1625     04A3                     l1095:	
  1626                           ;incstack = 0
  1627                           ; Regs used in _initGame: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1628                           
  1629                           
  1630                           ;main.c: 54:     ballX = 4;
  1631     04A3  3004               	movlw	4
  1632     04A4  1283               	bcf	3,5	;RP0=0, select bank0
  1633     04A5  1303               	bcf	3,6	;RP1=0, select bank0
  1634     04A6  00B5               	movwf	_ballX
  1635     04A7  3000               	movlw	0
  1636     04A8  00B6               	movwf	_ballX+1
  1637                           
  1638                           ;main.c: 55:     ballYState = 0b00001000;
  1639     04A9  3008               	movlw	8
  1640     04AA  00BB               	movwf	_ballYState
  1641     04AB                     l1097:
  1642                           
  1643                           ;main.c: 56:     MAX7219_write(7, p1State);
  1644     04AB  087D               	movf	_p1State,w
  1645     04AC  00F5               	movwf	MAX7219_write@data
  1646     04AD  3007               	movlw	7
  1647     04AE  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  1648     04B3                     l1099:
  1649                           
  1650                           ;main.c: 57:     MAX7219_write(2, p2State);
  1651     04B3  1283               	bcf	3,5	;RP0=0, select bank0
  1652     04B4  1303               	bcf	3,6	;RP1=0, select bank0
  1653     04B5  083C               	movf	_p2State,w
  1654     04B6  00F5               	movwf	MAX7219_write@data
  1655     04B7  3002               	movlw	2
  1656     04B8  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  1657     04BD                     l1101:
  1658                           
  1659                           ;main.c: 58:     MAX7219_write(ballX, ballYState);
  1660     04BD  1283               	bcf	3,5	;RP0=0, select bank0
  1661     04BE  1303               	bcf	3,6	;RP1=0, select bank0
  1662     04BF  083B               	movf	_ballYState,w
  1663     04C0  00F5               	movwf	MAX7219_write@data
  1664     04C1  0835               	movf	_ballX,w
  1665     04C2  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  1666     04C7                     l1103:
  1667                           
  1668                           ;main.c: 59:     isScore = 0;
  1669     04C7  1283               	bcf	3,5	;RP0=0, select bank0
  1670     04C8  1303               	bcf	3,6	;RP1=0, select bank0
  1671     04C9  01BD               	clrf	_isScore
  1672     04CA                     l35:
  1673     04CA  0008               	return
  1674     04CB                     __end_of_initGame:
  1675                           
  1676                           	psect	text7
  1677     062A                     __ptext7:	
  1678 ;; *************** function _buttonGoUp *****************
  1679 ;; Defined at:
  1680 ;;		line 78 in file "main.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;  player          2    7[COMMON] int 
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;		None
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  1    wreg      void 
  1687 ;; Registers used:
  1688 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1694 ;;      Params:         2       0       0       0       0
  1695 ;;      Locals:         0       0       0       0       0
  1696 ;;      Temps:          0       0       0       0       0
  1697 ;;      Totals:         2       0       0       0       0
  1698 ;;Total ram usage:        2 bytes
  1699 ;; Hardware stack levels used: 1
  1700 ;; Hardware stack levels required when called: 2
  1701 ;; This function calls:
  1702 ;;		_MAX7219_write
  1703 ;; This function is called by:
  1704 ;;		_main
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708     062A                     _buttonGoUp:	
  1709                           ;psect for function _buttonGoUp
  1710                           
  1711     062A                     l1121:	
  1712                           ;incstack = 0
  1713                           ; Regs used in _buttonGoUp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1714                           
  1715                           
  1716                           ;main.c: 79:     if (player == 1) {
  1717     062A  0377               	decf	buttonGoUp@player,w
  1718     062B  0478               	iorwf	buttonGoUp@player+1,w
  1719     062C  1D03               	btfss	3,2
  1720     062D  2E2F               	goto	u421
  1721     062E  2E30               	goto	u420
  1722     062F                     u421:
  1723     062F  2EC6               	goto	l1179
  1724     0630                     u420:
  1725     0630  2E73               	goto	l1151
  1726     0631                     l1125:
  1727                           
  1728                           ;main.c: 82:                 p1State = 0b00001111;
  1729     0631  300F               	movlw	15
  1730     0632  00FD               	movwf	_p1State
  1731     0633                     l1127:
  1732                           
  1733                           ;main.c: 83:                 MAX7219_write(7, p1State);
  1734     0633  087D               	movf	_p1State,w
  1735     0634  00F5               	movwf	MAX7219_write@data
  1736     0635  3007               	movlw	7
  1737     0636  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  1738                           
  1739                           ;main.c: 84:                 break;
  1740     063B  2ED9               	goto	l68
  1741     063C                     l1129:
  1742                           
  1743                           ;main.c: 86:                 p1State = 0b00011110;
  1744     063C  301E               	movlw	30
  1745     063D  00FD               	movwf	_p1State
  1746     063E                     l1131:
  1747                           
  1748                           ;main.c: 87:                 MAX7219_write(7, p1State);
  1749     063E  087D               	movf	_p1State,w
  1750     063F  00F5               	movwf	MAX7219_write@data
  1751     0640  3007               	movlw	7
  1752     0641  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  1753                           
  1754                           ;main.c: 88:                 break;
  1755     0646  2ED9               	goto	l68
  1756     0647                     l1133:
  1757                           
  1758                           ;main.c: 90:                 p1State = 0b00111100;
  1759     0647  303C               	movlw	60
  1760     0648  00FD               	movwf	_p1State
  1761     0649                     l1135:
  1762                           
  1763                           ;main.c: 91:                 MAX7219_write(7, p1State);
  1764     0649  087D               	movf	_p1State,w
  1765     064A  00F5               	movwf	MAX7219_write@data
  1766     064B  3007               	movlw	7
  1767     064C  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  1768                           
  1769                           ;main.c: 92:                 break;
  1770     0651  2ED9               	goto	l68
  1771     0652                     l1137:
  1772                           
  1773                           ;main.c: 94:                 p1State = 0b01111000;
  1774     0652  3078               	movlw	120
  1775     0653  00FD               	movwf	_p1State
  1776     0654                     l1139:
  1777                           
  1778                           ;main.c: 95:                 MAX7219_write(7, p1State);
  1779     0654  087D               	movf	_p1State,w
  1780     0655  00F5               	movwf	MAX7219_write@data
  1781     0656  3007               	movlw	7
  1782     0657  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  1783                           
  1784                           ;main.c: 96:                 break;
  1785     065C  2ED9               	goto	l68
  1786     065D                     l1141:
  1787                           
  1788                           ;main.c: 98:                 p1State = 0b01111000;
  1789     065D  3078               	movlw	120
  1790     065E  00FD               	movwf	_p1State
  1791     065F                     l1143:
  1792                           
  1793                           ;main.c: 99:                 MAX7219_write(7, p1State);
  1794     065F  087D               	movf	_p1State,w
  1795     0660  00F5               	movwf	MAX7219_write@data
  1796     0661  3007               	movlw	7
  1797     0662  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  1798                           
  1799                           ;main.c: 100:                 break;
  1800     0667  2ED9               	goto	l68
  1801     0668                     l1145:
  1802                           
  1803                           ;main.c: 102:                 p1State = 0b00011110;
  1804     0668  301E               	movlw	30
  1805     0669  00FD               	movwf	_p1State
  1806     066A                     l1147:
  1807                           
  1808                           ;main.c: 103:                 MAX7219_write(7, p1State);
  1809     066A  087D               	movf	_p1State,w
  1810     066B  00F5               	movwf	MAX7219_write@data
  1811     066C  3007               	movlw	7
  1812     066D  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  1813                           
  1814                           ;main.c: 104:                 break;
  1815     0672  2ED9               	goto	l68
  1816     0673                     l1151:
  1817     0673  087D               	movf	_p1State,w
  1818                           
  1819                           ; Switch size 1, requested type "simple"
  1820                           ; Number of cases is 5, Range of values is 15 to 135
  1821                           ; switch strategies available:
  1822                           ; Name         Instructions Cycles
  1823                           ; simple_byte           16     9 (average)
  1824                           ; jumptable            263     9 (fixed)
  1825                           ;	Chosen strategy is simple_byte
  1826     0674  3A0F               	xorlw	15	; case 15
  1827     0675  1903               	skipnz
  1828     0676  2E3C               	goto	l1129
  1829     0677  3A11               	xorlw	17	; case 30
  1830     0678  1903               	skipnz
  1831     0679  2E47               	goto	l1133
  1832     067A  3A22               	xorlw	34	; case 60
  1833     067B  1903               	skipnz
  1834     067C  2E52               	goto	l1137
  1835     067D  3A44               	xorlw	68	; case 120
  1836     067E  1903               	skipnz
  1837     067F  2E5D               	goto	l1141
  1838     0680  3AFF               	xorlw	255	; case 135
  1839     0681  1903               	skipnz
  1840     0682  2E31               	goto	l1125
  1841     0683  2E68               	goto	l1145
  1842     0684                     l1153:
  1843                           
  1844                           ;main.c: 109:                 p2State = 0b00001111;
  1845     0684  300F               	movlw	15
  1846     0685  00BC               	movwf	_p2State
  1847     0686                     l1155:
  1848                           
  1849                           ;main.c: 110:                 MAX7219_write(2, p2State);
  1850     0686  083C               	movf	_p2State,w
  1851     0687  00F5               	movwf	MAX7219_write@data
  1852     0688  3002               	movlw	2
  1853     0689  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  1854                           
  1855                           ;main.c: 111:                 break;
  1856     068E  2ED9               	goto	l68
  1857     068F                     l1157:
  1858                           
  1859                           ;main.c: 113:                 p2State = 0b00011110;
  1860     068F  301E               	movlw	30
  1861     0690  00BC               	movwf	_p2State
  1862     0691                     l1159:
  1863                           
  1864                           ;main.c: 114:                 MAX7219_write(2, p2State);
  1865     0691  083C               	movf	_p2State,w
  1866     0692  00F5               	movwf	MAX7219_write@data
  1867     0693  3002               	movlw	2
  1868     0694  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  1869                           
  1870                           ;main.c: 115:                 break;
  1871     0699  2ED9               	goto	l68
  1872     069A                     l1161:
  1873                           
  1874                           ;main.c: 117:                 p2State = 0b00111100;
  1875     069A  303C               	movlw	60
  1876     069B  00BC               	movwf	_p2State
  1877     069C                     l1163:
  1878                           
  1879                           ;main.c: 118:                 MAX7219_write(2, p2State);
  1880     069C  083C               	movf	_p2State,w
  1881     069D  00F5               	movwf	MAX7219_write@data
  1882     069E  3002               	movlw	2
  1883     069F  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  1884                           
  1885                           ;main.c: 119:                 break;
  1886     06A4  2ED9               	goto	l68
  1887     06A5                     l1165:
  1888                           
  1889                           ;main.c: 121:                 p2State = 0b01111000;
  1890     06A5  3078               	movlw	120
  1891     06A6  00BC               	movwf	_p2State
  1892     06A7                     l1167:
  1893                           
  1894                           ;main.c: 122:                 MAX7219_write(2, p2State);
  1895     06A7  083C               	movf	_p2State,w
  1896     06A8  00F5               	movwf	MAX7219_write@data
  1897     06A9  3002               	movlw	2
  1898     06AA  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  1899                           
  1900                           ;main.c: 123:                 break;
  1901     06AF  2ED9               	goto	l68
  1902     06B0                     l1169:
  1903                           
  1904                           ;main.c: 125:                 p2State = 0b01111000;
  1905     06B0  3078               	movlw	120
  1906     06B1  00BC               	movwf	_p2State
  1907     06B2                     l1171:
  1908                           
  1909                           ;main.c: 126:                 MAX7219_write(2, p2State);
  1910     06B2  083C               	movf	_p2State,w
  1911     06B3  00F5               	movwf	MAX7219_write@data
  1912     06B4  3002               	movlw	2
  1913     06B5  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  1914                           
  1915                           ;main.c: 127:                 break;
  1916     06BA  2ED9               	goto	l68
  1917     06BB                     l1173:
  1918                           
  1919                           ;main.c: 129:                 p2State = 0b00011110;
  1920     06BB  301E               	movlw	30
  1921     06BC  00BC               	movwf	_p2State
  1922     06BD                     l1175:
  1923                           
  1924                           ;main.c: 130:                 MAX7219_write(2, p2State);
  1925     06BD  083C               	movf	_p2State,w
  1926     06BE  00F5               	movwf	MAX7219_write@data
  1927     06BF  3002               	movlw	2
  1928     06C0  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  1929                           
  1930                           ;main.c: 131:                 break;
  1931     06C5  2ED9               	goto	l68
  1932     06C6                     l1179:
  1933     06C6  1283               	bcf	3,5	;RP0=0, select bank0
  1934     06C7  1303               	bcf	3,6	;RP1=0, select bank0
  1935     06C8  083C               	movf	_p2State,w
  1936                           
  1937                           ; Switch size 1, requested type "simple"
  1938                           ; Number of cases is 5, Range of values is 15 to 135
  1939                           ; switch strategies available:
  1940                           ; Name         Instructions Cycles
  1941                           ; simple_byte           16     9 (average)
  1942                           ; jumptable            263     9 (fixed)
  1943                           ;	Chosen strategy is simple_byte
  1944     06C9  3A0F               	xorlw	15	; case 15
  1945     06CA  1903               	skipnz
  1946     06CB  2E8F               	goto	l1157
  1947     06CC  3A11               	xorlw	17	; case 30
  1948     06CD  1903               	skipnz
  1949     06CE  2E9A               	goto	l1161
  1950     06CF  3A22               	xorlw	34	; case 60
  1951     06D0  1903               	skipnz
  1952     06D1  2EA5               	goto	l1165
  1953     06D2  3A44               	xorlw	68	; case 120
  1954     06D3  1903               	skipnz
  1955     06D4  2EB0               	goto	l1169
  1956     06D5  3AFF               	xorlw	255	; case 135
  1957     06D6  1903               	skipnz
  1958     06D7  2E84               	goto	l1153
  1959     06D8  2EBB               	goto	l1173
  1960     06D9                     l68:
  1961     06D9  0008               	return
  1962     06DA                     __end_of_buttonGoUp:
  1963                           
  1964                           	psect	text8
  1965     057A                     __ptext8:	
  1966 ;; *************** function _buttonGoDown *****************
  1967 ;; Defined at:
  1968 ;;		line 136 in file "main.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;  player          2    7[COMMON] int 
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;		None
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  1    wreg      void 
  1975 ;; Registers used:
  1976 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1982 ;;      Params:         2       0       0       0       0
  1983 ;;      Locals:         0       0       0       0       0
  1984 ;;      Temps:          0       0       0       0       0
  1985 ;;      Totals:         2       0       0       0       0
  1986 ;;Total ram usage:        2 bytes
  1987 ;; Hardware stack levels used: 1
  1988 ;; Hardware stack levels required when called: 2
  1989 ;; This function calls:
  1990 ;;		_MAX7219_write
  1991 ;; This function is called by:
  1992 ;;		_main
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996     057A                     _buttonGoDown:	
  1997                           ;psect for function _buttonGoDown
  1998                           
  1999     057A                     l1181:	
  2000                           ;incstack = 0
  2001                           ; Regs used in _buttonGoDown: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2002                           
  2003                           
  2004                           ;main.c: 137:     if (player == 1) {
  2005     057A  0377               	decf	buttonGoDown@player,w
  2006     057B  0478               	iorwf	buttonGoDown@player+1,w
  2007     057C  1D03               	btfss	3,2
  2008     057D  2D7F               	goto	u431
  2009     057E  2D80               	goto	u430
  2010     057F                     u431:
  2011     057F  2E16               	goto	l1239
  2012     0580                     u430:
  2013     0580  2DC3               	goto	l1211
  2014     0581                     l1185:
  2015                           
  2016                           ;main.c: 140:                 p1State = 0b10000111;
  2017     0581  3087               	movlw	135
  2018     0582  00FD               	movwf	_p1State
  2019     0583                     l1187:
  2020                           
  2021                           ;main.c: 141:                 MAX7219_write(7, p1State);
  2022     0583  087D               	movf	_p1State,w
  2023     0584  00F5               	movwf	MAX7219_write@data
  2024     0585  3007               	movlw	7
  2025     0586  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  2026                           
  2027                           ;main.c: 142:                 break;
  2028     058B  2E29               	goto	l89
  2029     058C                     l1189:
  2030                           
  2031                           ;main.c: 144:                 p1State = 0b10000111;
  2032     058C  3087               	movlw	135
  2033     058D  00FD               	movwf	_p1State
  2034     058E                     l1191:
  2035                           
  2036                           ;main.c: 145:                 MAX7219_write(7, p1State);
  2037     058E  087D               	movf	_p1State,w
  2038     058F  00F5               	movwf	MAX7219_write@data
  2039     0590  3007               	movlw	7
  2040     0591  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  2041                           
  2042                           ;main.c: 146:                 break;
  2043     0596  2E29               	goto	l89
  2044     0597                     l1193:
  2045                           
  2046                           ;main.c: 148:                 p1State = 0b00001111;
  2047     0597  300F               	movlw	15
  2048     0598  00FD               	movwf	_p1State
  2049     0599                     l1195:
  2050                           
  2051                           ;main.c: 149:                 MAX7219_write(7, p1State);
  2052     0599  087D               	movf	_p1State,w
  2053     059A  00F5               	movwf	MAX7219_write@data
  2054     059B  3007               	movlw	7
  2055     059C  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  2056                           
  2057                           ;main.c: 150:                 break;
  2058     05A1  2E29               	goto	l89
  2059     05A2                     l1197:
  2060                           
  2061                           ;main.c: 152:                 p1State = 0b00011110;
  2062     05A2  301E               	movlw	30
  2063     05A3  00FD               	movwf	_p1State
  2064     05A4                     l1199:
  2065                           
  2066                           ;main.c: 153:                 MAX7219_write(7, p1State);
  2067     05A4  087D               	movf	_p1State,w
  2068     05A5  00F5               	movwf	MAX7219_write@data
  2069     05A6  3007               	movlw	7
  2070     05A7  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  2071                           
  2072                           ;main.c: 154:                 break;
  2073     05AC  2E29               	goto	l89
  2074     05AD                     l1201:
  2075                           
  2076                           ;main.c: 156:                 p1State = 0b00111100;
  2077     05AD  303C               	movlw	60
  2078     05AE  00FD               	movwf	_p1State
  2079     05AF                     l1203:
  2080                           
  2081                           ;main.c: 157:                 MAX7219_write(7, p1State);
  2082     05AF  087D               	movf	_p1State,w
  2083     05B0  00F5               	movwf	MAX7219_write@data
  2084     05B1  3007               	movlw	7
  2085     05B2  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  2086                           
  2087                           ;main.c: 158:                 break;
  2088     05B7  2E29               	goto	l89
  2089     05B8                     l1205:
  2090                           
  2091                           ;main.c: 160:                 p1State = 0b00011110;
  2092     05B8  301E               	movlw	30
  2093     05B9  00FD               	movwf	_p1State
  2094     05BA                     l1207:
  2095                           
  2096                           ;main.c: 161:                 MAX7219_write(7, p1State);
  2097     05BA  087D               	movf	_p1State,w
  2098     05BB  00F5               	movwf	MAX7219_write@data
  2099     05BC  3007               	movlw	7
  2100     05BD  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  2101                           
  2102                           ;main.c: 162:                 break;
  2103     05C2  2E29               	goto	l89
  2104     05C3                     l1211:
  2105     05C3  087D               	movf	_p1State,w
  2106                           
  2107                           ; Switch size 1, requested type "simple"
  2108                           ; Number of cases is 5, Range of values is 15 to 135
  2109                           ; switch strategies available:
  2110                           ; Name         Instructions Cycles
  2111                           ; simple_byte           16     9 (average)
  2112                           ; jumptable            263     9 (fixed)
  2113                           ;	Chosen strategy is simple_byte
  2114     05C4  3A0F               	xorlw	15	; case 15
  2115     05C5  1903               	skipnz
  2116     05C6  2D8C               	goto	l1189
  2117     05C7  3A11               	xorlw	17	; case 30
  2118     05C8  1903               	skipnz
  2119     05C9  2D97               	goto	l1193
  2120     05CA  3A22               	xorlw	34	; case 60
  2121     05CB  1903               	skipnz
  2122     05CC  2DA2               	goto	l1197
  2123     05CD  3A44               	xorlw	68	; case 120
  2124     05CE  1903               	skipnz
  2125     05CF  2DAD               	goto	l1201
  2126     05D0  3AFF               	xorlw	255	; case 135
  2127     05D1  1903               	skipnz
  2128     05D2  2D81               	goto	l1185
  2129     05D3  2DB8               	goto	l1205
  2130     05D4                     l1213:
  2131                           
  2132                           ;main.c: 167:                 p2State = 0b10000111;
  2133     05D4  3087               	movlw	135
  2134     05D5  00BC               	movwf	_p2State
  2135     05D6                     l1215:
  2136                           
  2137                           ;main.c: 168:                 MAX7219_write(2, p2State);
  2138     05D6  083C               	movf	_p2State,w
  2139     05D7  00F5               	movwf	MAX7219_write@data
  2140     05D8  3002               	movlw	2
  2141     05D9  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  2142                           
  2143                           ;main.c: 169:                 break;
  2144     05DE  2E29               	goto	l89
  2145     05DF                     l1217:
  2146                           
  2147                           ;main.c: 171:                 p2State = 0b10000111;
  2148     05DF  3087               	movlw	135
  2149     05E0  00BC               	movwf	_p2State
  2150     05E1                     l1219:
  2151                           
  2152                           ;main.c: 172:                 MAX7219_write(2, p2State);
  2153     05E1  083C               	movf	_p2State,w
  2154     05E2  00F5               	movwf	MAX7219_write@data
  2155     05E3  3002               	movlw	2
  2156     05E4  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  2157                           
  2158                           ;main.c: 173:                 break;
  2159     05E9  2E29               	goto	l89
  2160     05EA                     l1221:
  2161                           
  2162                           ;main.c: 175:                 p2State = 0b00001111;
  2163     05EA  300F               	movlw	15
  2164     05EB  00BC               	movwf	_p2State
  2165     05EC                     l1223:
  2166                           
  2167                           ;main.c: 176:                 MAX7219_write(2, p2State);
  2168     05EC  083C               	movf	_p2State,w
  2169     05ED  00F5               	movwf	MAX7219_write@data
  2170     05EE  3002               	movlw	2
  2171     05EF  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  2172                           
  2173                           ;main.c: 177:                 break;
  2174     05F4  2E29               	goto	l89
  2175     05F5                     l1225:
  2176                           
  2177                           ;main.c: 179:                 p2State = 0b00011110;
  2178     05F5  301E               	movlw	30
  2179     05F6  00BC               	movwf	_p2State
  2180     05F7                     l1227:
  2181                           
  2182                           ;main.c: 180:                 MAX7219_write(2, p2State);
  2183     05F7  083C               	movf	_p2State,w
  2184     05F8  00F5               	movwf	MAX7219_write@data
  2185     05F9  3002               	movlw	2
  2186     05FA  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  2187                           
  2188                           ;main.c: 181:                 break;
  2189     05FF  2E29               	goto	l89
  2190     0600                     l1229:
  2191                           
  2192                           ;main.c: 183:                 p2State = 0b00111100;
  2193     0600  303C               	movlw	60
  2194     0601  00BC               	movwf	_p2State
  2195     0602                     l1231:
  2196                           
  2197                           ;main.c: 184:                 MAX7219_write(2, p2State);
  2198     0602  083C               	movf	_p2State,w
  2199     0603  00F5               	movwf	MAX7219_write@data
  2200     0604  3002               	movlw	2
  2201     0605  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  2202                           
  2203                           ;main.c: 185:                 break;
  2204     060A  2E29               	goto	l89
  2205     060B                     l1233:
  2206                           
  2207                           ;main.c: 187:                 p2State = 0b00000010 | 0b00000100 | 0b00001000 | 0b0001000
      +                          0;
  2208     060B  301E               	movlw	30
  2209     060C  00BC               	movwf	_p2State
  2210     060D                     l1235:
  2211                           
  2212                           ;main.c: 188:                 MAX7219_write(2, p2State);
  2213     060D  083C               	movf	_p2State,w
  2214     060E  00F5               	movwf	MAX7219_write@data
  2215     060F  3002               	movlw	2
  2216     0610  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  2217                           
  2218                           ;main.c: 189:                 break;
  2219     0615  2E29               	goto	l89
  2220     0616                     l1239:
  2221     0616  1283               	bcf	3,5	;RP0=0, select bank0
  2222     0617  1303               	bcf	3,6	;RP1=0, select bank0
  2223     0618  083C               	movf	_p2State,w
  2224                           
  2225                           ; Switch size 1, requested type "simple"
  2226                           ; Number of cases is 5, Range of values is 15 to 135
  2227                           ; switch strategies available:
  2228                           ; Name         Instructions Cycles
  2229                           ; simple_byte           16     9 (average)
  2230                           ; jumptable            263     9 (fixed)
  2231                           ;	Chosen strategy is simple_byte
  2232     0619  3A0F               	xorlw	15	; case 15
  2233     061A  1903               	skipnz
  2234     061B  2DDF               	goto	l1217
  2235     061C  3A11               	xorlw	17	; case 30
  2236     061D  1903               	skipnz
  2237     061E  2DEA               	goto	l1221
  2238     061F  3A22               	xorlw	34	; case 60
  2239     0620  1903               	skipnz
  2240     0621  2DF5               	goto	l1225
  2241     0622  3A44               	xorlw	68	; case 120
  2242     0623  1903               	skipnz
  2243     0624  2E00               	goto	l1229
  2244     0625  3AFF               	xorlw	255	; case 135
  2245     0626  1903               	skipnz
  2246     0627  2DD4               	goto	l1213
  2247     0628  2E0B               	goto	l1233
  2248     0629                     l89:
  2249     0629  0008               	return
  2250     062A                     __end_of_buttonGoDown:
  2251                           
  2252                           	psect	text9
  2253     0467                     __ptext9:	
  2254 ;; *************** function _MAX7219_init *****************
  2255 ;; Defined at:
  2256 ;;		line 12 in file "MAX7219.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;  noChips         1    wreg     unsigned char 
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;  noChips         1    7[COMMON] unsigned char 
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  1    wreg      void 
  2263 ;; Registers used:
  2264 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2270 ;;      Params:         0       0       0       0       0
  2271 ;;      Locals:         1       0       0       0       0
  2272 ;;      Temps:          0       0       0       0       0
  2273 ;;      Totals:         1       0       0       0       0
  2274 ;;Total ram usage:        1 bytes
  2275 ;; Hardware stack levels used: 1
  2276 ;; Hardware stack levels required when called: 3
  2277 ;; This function calls:
  2278 ;;		_MAX7219_config
  2279 ;;		_SPI_init
  2280 ;; This function is called by:
  2281 ;;		_main
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285     0467                     _MAX7219_init:	
  2286                           ;psect for function _MAX7219_init
  2287                           
  2288                           
  2289                           ;incstack = 0
  2290                           ; Regs used in _MAX7219_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2291                           ;MAX7219_init@noChips stored from wreg
  2292     0467  00F7               	movwf	MAX7219_init@noChips
  2293     0468                     l1313:
  2294                           
  2295                           ;MAX7219.c: 13:     SPI_init();
  2296     0468  120A  118A  23F4  120A  118A  	fcall	_SPI_init
  2297                           
  2298                           ;MAX7219.c: 14:     while (noChips)
  2299     046D  2C76               	goto	l1317
  2300     046E                     l1315:
  2301                           
  2302                           ;MAX7219.c: 15:         MAX7219_config(--noChips);
  2303     046E  3001               	movlw	1
  2304     046F  02F7               	subwf	MAX7219_init@noChips,f
  2305     0470  0877               	movf	MAX7219_init@noChips,w
  2306     0471  120A  118A  247C  120A  118A  	fcall	_MAX7219_config
  2307     0476                     l1317:
  2308                           
  2309                           ;MAX7219.c: 14:     while (noChips)
  2310     0476  0877               	movf	MAX7219_init@noChips,w
  2311     0477  1D03               	btfss	3,2
  2312     0478  2C7A               	goto	u661
  2313     0479  2C7B               	goto	u660
  2314     047A                     u661:
  2315     047A  2C6E               	goto	l1315
  2316     047B                     u660:
  2317     047B                     l178:
  2318     047B  0008               	return
  2319     047C                     __end_of_MAX7219_init:
  2320                           
  2321                           	psect	text10
  2322     03F4                     __ptext10:	
  2323 ;; *************** function _SPI_init *****************
  2324 ;; Defined at:
  2325 ;;		line 12 in file "Soft_SPI.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;		None
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;		None
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      void 
  2332 ;; Registers used:
  2333 ;;		None
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2339 ;;      Params:         0       0       0       0       0
  2340 ;;      Locals:         0       0       0       0       0
  2341 ;;      Temps:          0       0       0       0       0
  2342 ;;      Totals:         0       0       0       0       0
  2343 ;;Total ram usage:        0 bytes
  2344 ;; Hardware stack levels used: 1
  2345 ;; This function calls:
  2346 ;;		Nothing
  2347 ;; This function is called by:
  2348 ;;		_MAX7219_init
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352     03F4                     _SPI_init:	
  2353                           ;psect for function _SPI_init
  2354                           
  2355     03F4                     l1091:	
  2356                           ;incstack = 0
  2357                           ; Regs used in _SPI_init: []
  2358                           
  2359                           
  2360                           ;Soft_SPI.c: 13:     TRISC2 = 0;
  2361     03F4  1683               	bsf	3,5	;RP0=1, select bank1
  2362     03F5  1303               	bcf	3,6	;RP1=0, select bank1
  2363     03F6  1107               	bcf	7,2	;volatile
  2364                           
  2365                           ;Soft_SPI.c: 14:     TRISC0 = 0;
  2366     03F7  1007               	bcf	7,0	;volatile
  2367                           
  2368                           ;Soft_SPI.c: 15:     TRISC4 = 1;
  2369     03F8  1607               	bsf	7,4	;volatile
  2370                           
  2371                           ;Soft_SPI.c: 16:     TRISC1 = 0;
  2372     03F9  1087               	bcf	7,1	;volatile
  2373                           
  2374                           ;Soft_SPI.c: 17:     TRISC3 = 0;
  2375     03FA  1187               	bcf	7,3	;volatile
  2376     03FB                     l211:
  2377     03FB  0008               	return
  2378     03FC                     __end_of_SPI_init:
  2379                           
  2380                           	psect	text11
  2381     047C                     __ptext11:	
  2382 ;; *************** function _MAX7219_config *****************
  2383 ;; Defined at:
  2384 ;;		line 19 in file "MAX7219.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;  chip            1    wreg     unsigned char 
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;  chip            1    0[COMMON] unsigned char 
  2389 ;; Return value:  Size  Location     Type
  2390 ;;                  1    wreg      void 
  2391 ;; Registers used:
  2392 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2398 ;;      Params:         0       0       0       0       0
  2399 ;;      Locals:         0       0       0       0       0
  2400 ;;      Temps:          0       0       0       0       0
  2401 ;;      Totals:         0       0       0       0       0
  2402 ;;Total ram usage:        0 bytes
  2403 ;; Hardware stack levels used: 1
  2404 ;; Hardware stack levels required when called: 2
  2405 ;; This function calls:
  2406 ;;		_MAX7219_write
  2407 ;; This function is called by:
  2408 ;;		_MAX7219_init
  2409 ;; This function uses a non-reentrant model
  2410 ;;
  2411                           
  2412     047C                     _MAX7219_config:	
  2413                           ;psect for function _MAX7219_config
  2414                           
  2415     047C                     l1093:	
  2416                           ;incstack = 0
  2417                           ; Regs used in _MAX7219_config: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2418                           
  2419                           
  2420                           ;MAX7219.c: 20:     MAX7219_write(0x09, 0x00);
  2421     047C  01F5               	clrf	MAX7219_write@data
  2422     047D  3009               	movlw	9
  2423     047E  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  2424                           
  2425                           ;MAX7219.c: 21:     MAX7219_write(0x0A, 0x05);
  2426     0483  3005               	movlw	5
  2427     0484  00F5               	movwf	MAX7219_write@data
  2428     0485  300A               	movlw	10
  2429     0486  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  2430                           
  2431                           ;MAX7219.c: 22:     MAX7219_write(0x0B, 0x07);
  2432     048B  3007               	movlw	7
  2433     048C  00F5               	movwf	MAX7219_write@data
  2434     048D  300B               	movlw	11
  2435     048E  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  2436                           
  2437                           ;MAX7219.c: 23:     MAX7219_write(0x0C, 0x01);
  2438     0493  01F5               	clrf	MAX7219_write@data
  2439     0494  0AF5               	incf	MAX7219_write@data,f
  2440     0495  300C               	movlw	12
  2441     0496  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  2442                           
  2443                           ;MAX7219.c: 24:     MAX7219_write(0x0F, 0x00);
  2444     049B  01F5               	clrf	MAX7219_write@data
  2445     049C  300F               	movlw	15
  2446     049D  120A  118A  2453  120A  118A  	fcall	_MAX7219_write
  2447     04A2                     l181:
  2448     04A2  0008               	return
  2449     04A3                     __end_of_MAX7219_config:
  2450                           
  2451                           	psect	text12
  2452     0453                     __ptext12:	
  2453 ;; *************** function _MAX7219_write *****************
  2454 ;; Defined at:
  2455 ;;		line 28 in file "MAX7219.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  regName         1    wreg     unsigned char 
  2458 ;;  data            1    5[COMMON] unsigned char 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  regName         1    6[COMMON] unsigned char 
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  1    wreg      void 
  2463 ;; Registers used:
  2464 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2470 ;;      Params:         1       0       0       0       0
  2471 ;;      Locals:         1       0       0       0       0
  2472 ;;      Temps:          0       0       0       0       0
  2473 ;;      Totals:         2       0       0       0       0
  2474 ;;Total ram usage:        2 bytes
  2475 ;; Hardware stack levels used: 1
  2476 ;; Hardware stack levels required when called: 1
  2477 ;; This function calls:
  2478 ;;		_SPI_write
  2479 ;; This function is called by:
  2480 ;;		_initGame
  2481 ;;		_buttonGoUp
  2482 ;;		_buttonGoDown
  2483 ;;		_updateBallPosition
  2484 ;;		_MAX7219_config
  2485 ;;		_MAX7219_displayText
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489     0453                     _MAX7219_write:	
  2490                           ;psect for function _MAX7219_write
  2491                           
  2492                           
  2493                           ;incstack = 0
  2494                           ; Regs used in _MAX7219_write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2495                           ;MAX7219_write@regName stored from wreg
  2496     0453  00F6               	movwf	MAX7219_write@regName
  2497     0454                     l1085:
  2498                           
  2499                           ;MAX7219.c: 29:     RC1 = 0;
  2500     0454  1283               	bcf	3,5	;RP0=0, select bank0
  2501     0455  1303               	bcf	3,6	;RP1=0, select bank0
  2502     0456  1087               	bcf	7,1	;volatile
  2503     0457                     l1087:
  2504                           
  2505                           ;MAX7219.c: 31:     SPI_write(regName);
  2506     0457  0876               	movf	MAX7219_write@regName,w
  2507     0458  120A  118A  24CB  120A  118A  	fcall	_SPI_write
  2508                           
  2509                           ;MAX7219.c: 32:     SPI_write(data);
  2510     045D  0875               	movf	MAX7219_write@data,w
  2511     045E  120A  118A  24CB  120A  118A  	fcall	_SPI_write
  2512     0463                     l1089:
  2513                           
  2514                           ;MAX7219.c: 34:     RC1 = 1;
  2515     0463  1283               	bcf	3,5	;RP0=0, select bank0
  2516     0464  1303               	bcf	3,6	;RP1=0, select bank0
  2517     0465  1487               	bsf	7,1	;volatile
  2518     0466                     l184:
  2519     0466  0008               	return
  2520     0467                     __end_of_MAX7219_write:
  2521                           
  2522                           	psect	text13
  2523     04CB                     __ptext13:	
  2524 ;; *************** function _SPI_write *****************
  2525 ;; Defined at:
  2526 ;;		line 21 in file "Soft_SPI.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;  send            1    wreg     unsigned char 
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;  send            1    2[COMMON] unsigned char 
  2531 ;;  Tx              2    3[COMMON] int 
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  1    wreg      void 
  2534 ;; Registers used:
  2535 ;;		wreg, status,2, status,0, btemp+1
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2541 ;;      Params:         0       0       0       0       0
  2542 ;;      Locals:         3       0       0       0       0
  2543 ;;      Temps:          2       0       0       0       0
  2544 ;;      Totals:         5       0       0       0       0
  2545 ;;Total ram usage:        5 bytes
  2546 ;; Hardware stack levels used: 1
  2547 ;; This function calls:
  2548 ;;		Nothing
  2549 ;; This function is called by:
  2550 ;;		_MAX7219_write
  2551 ;;		_MAX7219_NoOperation
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555     04CB                     _SPI_write:	
  2556                           ;psect for function _SPI_write
  2557                           
  2558                           
  2559                           ;incstack = 0
  2560                           ; Regs used in _SPI_write: [wreg+status,2+status,0+btemp+1]
  2561                           ;SPI_write@send stored from wreg
  2562     04CB  00F2               	movwf	SPI_write@send
  2563     04CC                     l1071:
  2564                           
  2565                           ;Soft_SPI.c: 22:     for (int Tx = 0; Tx < 8; Tx++) {
  2566     04CC  01F3               	clrf	SPI_write@Tx
  2567     04CD  01F4               	clrf	SPI_write@Tx+1
  2568     04CE                     l214:
  2569                           
  2570                           ;Soft_SPI.c: 23:         RC2 = 0;
  2571     04CE  1283               	bcf	3,5	;RP0=0, select bank0
  2572     04CF  1303               	bcf	3,6	;RP1=0, select bank0
  2573     04D0  1107               	bcf	7,2	;volatile
  2574     04D1                     l1077:
  2575                           
  2576                           ;Soft_SPI.c: 24:         RC0 = ((send << Tx) & 0x80) ? 1 : 0;
  2577     04D1  0A73               	incf	SPI_write@Tx,w
  2578     04D2  00FF               	movwf	btemp+1
  2579     04D3  0872               	movf	SPI_write@send,w
  2580     04D4  00F0               	movwf	??_SPI_write
  2581     04D5  01F1               	clrf	??_SPI_write+1
  2582     04D6  2CDA               	goto	u384
  2583     04D7                     u385:
  2584     04D7  1003               	clrc
  2585     04D8  0DF0               	rlf	??_SPI_write,f
  2586     04D9  0DF1               	rlf	??_SPI_write+1,f
  2587     04DA                     u384:
  2588     04DA  0BFF               	decfsz	btemp+1,f
  2589     04DB  2CD7               	goto	u385
  2590     04DC  1BF0               	btfsc	??_SPI_write,7
  2591     04DD  2CDF               	goto	u391
  2592     04DE  2CE3               	goto	u390
  2593     04DF                     u391:
  2594     04DF  1283               	bcf	3,5	;RP0=0, select bank0
  2595     04E0  1303               	bcf	3,6	;RP1=0, select bank0
  2596     04E1  1407               	bsf	7,0	;volatile
  2597     04E2  2CE6               	goto	u404
  2598     04E3                     u390:
  2599     04E3  1283               	bcf	3,5	;RP0=0, select bank0
  2600     04E4  1303               	bcf	3,6	;RP1=0, select bank0
  2601     04E5  1007               	bcf	7,0	;volatile
  2602     04E6                     u404:
  2603     04E6                     l1079:
  2604                           
  2605                           ;Soft_SPI.c: 25:         RC2 = 1;
  2606     04E6  1507               	bsf	7,2	;volatile
  2607     04E7                     l1081:
  2608                           
  2609                           ;Soft_SPI.c: 26:     }
  2610     04E7  3001               	movlw	1
  2611     04E8  07F3               	addwf	SPI_write@Tx,f
  2612     04E9  1803               	skipnc
  2613     04EA  0AF4               	incf	SPI_write@Tx+1,f
  2614     04EB  3000               	movlw	0
  2615     04EC  07F4               	addwf	SPI_write@Tx+1,f
  2616     04ED                     l1083:
  2617     04ED  0874               	movf	SPI_write@Tx+1,w
  2618     04EE  3A80               	xorlw	128
  2619     04EF  00FF               	movwf	btemp+1
  2620     04F0  3080               	movlw	128
  2621     04F1  027F               	subwf	btemp+1,w
  2622     04F2  1D03               	skipz
  2623     04F3  2CF6               	goto	u415
  2624     04F4  3008               	movlw	8
  2625     04F5  0273               	subwf	SPI_write@Tx,w
  2626     04F6                     u415:
  2627     04F6  1C03               	skipc
  2628     04F7  2CF9               	goto	u411
  2629     04F8  2CFA               	goto	u410
  2630     04F9                     u411:
  2631     04F9  2CCE               	goto	l214
  2632     04FA                     u410:
  2633     04FA                     l216:
  2634     04FA  0008               	return
  2635     04FB                     __end_of_SPI_write:
  2636     007E                     btemp	set	126	;btemp
  2637     007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     21      30
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_buttonGoDown
    _main->_buttonGoUp
    _updateBallPosition->_MAX7219_write
    _initGame->_MAX7219_write
    _buttonGoUp->_MAX7219_write
    _buttonGoDown->_MAX7219_write
    _MAX7219_config->_MAX7219_write
    _MAX7219_write->_SPI_write

Critical Paths under _main in BANK0

    _main->_updateBallPosition

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     3      4   14577
                                              9 COMMON     4     0      4
                                             18 BANK0      3     3      0
                       _MAX7219_init
                       _buttonGoDown
                         _buttonGoUp
                           _initGame
                        _readButton0
                        _readButton1
                        _readButton2
                        _readButton3
                 _updateBallPosition
 ---------------------------------------------------------------------------------
 (1) _updateBallPosition                                  18    18      0    3009
                                              0 BANK0     18    18      0
                      _MAX7219_write
 ---------------------------------------------------------------------------------
 (1) _readButton3                                          4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _readButton2                                          4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _readButton1                                          4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _readButton0                                          4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _initGame                                             0     0      0    2794
                      _MAX7219_write
 ---------------------------------------------------------------------------------
 (1) _buttonGoUp                                           2     0      2    2968
                                              7 COMMON     2     0      2
                      _MAX7219_write
 ---------------------------------------------------------------------------------
 (1) _buttonGoDown                                         2     0      2    2968
                                              7 COMMON     2     0      2
                      _MAX7219_write
 ---------------------------------------------------------------------------------
 (1) _MAX7219_init                                         1     1      0    2838
                                              7 COMMON     1     1      0
                     _MAX7219_config
                           _SPI_init
 ---------------------------------------------------------------------------------
 (2) _SPI_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MAX7219_config                                       1     1      0    2794
                      _MAX7219_write
 ---------------------------------------------------------------------------------
 (2) _MAX7219_write                                        2     1      1    2794
                                              5 COMMON     2     1      1
                          _SPI_write
 ---------------------------------------------------------------------------------
 (3) _SPI_write                                            5     5      0      90
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MAX7219_init
     _MAX7219_config
       _MAX7219_write
         _SPI_write
     _SPI_init
   _buttonGoDown
     _MAX7219_write
   _buttonGoUp
     _MAX7219_write
   _initGame
     _MAX7219_write
   _readButton0
   _readButton1
   _readButton2
   _readButton3
   _updateBallPosition
     _MAX7219_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     15      1E       5       37.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2C      12        0.0%
ABS                  0      0      2C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat May 18 10:17:16 2024

                          pc 0002                           l41 0421                           l35 04CA  
                         l44 0430                           l38 0412                           l47 043F  
                         l68 06D9                           l89 0629                           l97 0728  
                         fsr 0004                          l101 0721                          l103 073E  
                        l121 0780                          l113 0751                          l211 03FB  
                        l131 0793                          l115 076A                          l107 073B  
                        l133 07AC                          l125 077D                          l109 0754  
                        l214 04CE                          l126 07C6                          l143 07BF  
                        l127 0796                          l119 0767                          l216 04FA  
                        l137 07A9                          l146 07D3                          l147 07E6  
                        l181 04A2                          l184 0466                          l178 047B  
                        _RB0 0030                          _RB1 0031                          _RB2 0032  
                        _RC0 0038                          _RB3 0033                          _RC1 0039  
                        _RC2 003A                          _RC4 003C                          u410 04FA  
                        u411 04F9                          u404 04E6                          u420 0630  
                        u500 072C                          u421 062F                          u501 072B  
                        u430 0580                          u510 0732                          u415 04F6  
                        u431 057F                          u511 0731                          u600 079A  
                        u520 0742                          u440 06E7                          u601 0799  
                        u521 0741                          u441 06E6                          u610 07A0  
                        u530 0748                          u450 06EE                          u611 079F  
                        u531 0747                          u451 06ED                          u620 07B0  
                        u540 0758                          u460 0700                          u700 0553  
                        u621 07AF                          u541 0757                          u461 06FF  
                        u701 0552                          u390 04E3                          u630 07B6  
                        u550 075E                          u470 0707                          u710 0576  
                        u391 04DF                          u631 07B5                          u551 075D  
                        u471 0706                          u711 0575                          u384 04DA  
                        u640 07CC                          u560 076E                          u480 0712  
                        u385 04D7                          u641 07CB                          u561 076D  
                        u481 0711                          u650 07D3                          u570 0774  
                        u490 0718                          u651 07D2                          u571 0773  
                        u491 0717                          u660 047B                          u580 0784  
                        u661 047A                          u581 0783                          u590 078A  
                        u670 0517                          u591 0789                          u671 0516  
                        u680 052B                          u737 0564                          u681 052A  
                        u690 053F                          u691 053E                          indf 0000  
                       l1101 04BD                         l1103 04C7                         l1201 05AD  
                       l1121 062A                         l1105 0404                         l1113 0422  
                       l1203 05AF                         l1211 05C3                         l1131 063E  
                       l1221 05EA                         l1213 05D4                         l1205 05B8  
                       l1141 065D                         l1133 0647                         l1125 0631  
                       l1109 0413                         l1117 0431                         l1301 07B0  
                       l1071 04CC                         l1231 0602                         l1223 05EC  
                       l1215 05D6                         l1207 05BA                         l1143 065F  
                       l1135 0649                         l1127 0633                         l1151 0673  
                       l1311 07D5                         l1303 07B6                         l1081 04E7  
                       l1313 0468                         l1233 060B                         l1225 05F5  
                       l1217 05DF                         l1161 069A                         l1153 0684  
                       l1145 0668                         l1137 0652                         l1129 063C  
                       l1305 07BB                         l1241 06DA                         l1321 04FF  
                       l1083 04ED                         l1091 03F4                         l1315 046E  
                       l1235 060D                         l1227 05F7                         l1219 05E1  
                       l1171 06B2                         l1163 069C                         l1155 0686  
                       l1147 066A                         l1139 0654                         l1307 07C6  
                       l1251 0700                         l1243 06E0                         l1331 0520  
                       l1323 0500                         l1077 04D1                         l1085 0454  
                       l1093 047C                         l1317 0476                         l1229 0600  
                       l1181 057A                         l1173 06BB                         l1165 06A5  
                       l1157 068F                         l1309 07CC                         l1261 0718  
                       l1245 06E7                         l1341 0553                         l1333 052B  
                       l1325 0505                         l1079 04E6                         l1087 0457  
                       l1191 058E                         l1239 0616                         l1175 06BD  
                       l1167 06A7                         l1159 0691                         l1095 04A3  
                       l1271 0742                         l1263 071D                         l1247 06EE  
                       l1255 0708                         l1343 055C                         l1335 0534  
                       l1327 050C                         l1319 04FB                         l1089 0463  
                       l1193 0597                         l1185 0581                         l1169 06B0  
                       l1097 04AB                         l1281 0763                         l1273 0748  
                       l1265 072C                         l1257 070E                         l1249 06F9  
                       l1345 056A                         l1337 053F                         l1329 0517  
                       l1195 0599                         l1187 0583                         l1179 06C6  
                       l1099 04B3                         l1291 078A                         l1283 076E  
                       l1275 074D                         l1267 0732                         l1259 0712  
                       l1339 0548                         l1347 056F                         l1197 05A2  
                       l1189 058C                         l1293 078F                         l1285 0774  
                       l1277 0758                         l1269 0737                         l1199 05A4  
                       l1295 079A                         l1287 0779                         l1279 075E  
                       l1297 07A0                         l1289 0784                         l1299 07A5  
       MAX7219_write@regName 0076                         _main 04FB                         btemp 007E  
                       start 0000                 ?_readButton0 0070                 ?_readButton1 0070  
               ?_readButton2 0070                 ?_readButton3 0070                        ?_main 0079  
                      _TRISB 0086                        _TRISC 0087                        _ballX 0035  
                      pclath 000A             __end_of_SPI_init 03FC                        status 0003  
                      wtemp0 007E         __end_of_MAX7219_init 047C              __initialization 07E7  
               __end_of_main 057A                       ??_main 0032           _updateBallPosition 06DA  
              ?_buttonGoDown 0077          ?_updateBallPosition 0070                       _TRISC0 0438  
                     _TRISC1 0439                       _TRISC2 043A                       _TRISC3 043B  
                     _TRISC4 043C             __end_of_initGame 04CB         ??_updateBallPosition 0077  
               __pdataCOMMON 007D           buttonGoDown@player 0077            __end_of_SPI_write 04FB  
             ??_buttonGoDown 0079        __end_of_MAX7219_write 0467      __end_of__initialization 07FC  
             __pcstackCOMMON 0070                 __pidataBANK0 03FC                    ?_SPI_init 0070  
                 _ballYState 003B        _updateBallPosition$70 0030        _updateBallPosition$63 0022  
      _updateBallPosition$64 0024        _updateBallPosition$65 0026        _updateBallPosition$66 0028  
      _updateBallPosition$67 002A        _updateBallPosition$68 002C        _updateBallPosition$69 002E  
                 __pbssBANK0 003D                   __pmaintext 04FB                   ??_SPI_init 0070  
               _MAX7219_init 0467            MAX7219_write@data 0075                    ?_initGame 0070  
                    _p1State 007D                      _p2State 003C           MAX7219_config@chip 0070  
       __end_of_buttonGoDown 062A                   _buttonGoUp 062A                      __ptext1 06DA  
                    __ptext2 0431                      __ptext3 0422                      __ptext4 0413  
                    __ptext5 0404                      __ptext6 04A3                      __ptext7 062A  
                    __ptext8 057A                      __ptext9 0467                      _isScore 003D  
             _MAX7219_config 047C         end_of_initialization 07FC                   ??_initGame 0077  
     __end_of_MAX7219_config 04A3                    _SPI_write 04CB                  ?_buttonGoUp 0077  
              __pidataCOMMON 03F3              ?_MAX7219_config 0070          start_initialization 07E7  
                 ?_SPI_write 0070                   init_fetch0 0440                  __pdataBANK0 0035  
              ??_readButton0 0072                ??_readButton1 0072                ??_readButton2 0072  
              ??_readButton3 0072                    ___latbits 0002                __pcstackBANK0 0020  
               _buttonGoDown 057A                  SPI_write@Tx 0073                SPI_write@send 0072  
        __end_of_readButton0 0413          __end_of_readButton1 0422          __end_of_readButton2 0431  
        __end_of_readButton3 0440                  ??_SPI_write 0070                _MAX7219_write 0453  
                   _SPI_init 03F4               ?_MAX7219_write 0075             ??_MAX7219_config 0077  
               ??_buttonGoUp 0079                  _readButton0 0404                  _readButton1 0413  
                _readButton2 0422                  _readButton3 0431                     _ballDirX 0039  
                   _ballDirY 0037  updateBallPosition@ballXprev 0020             buttonGoUp@player 0077  
                   __ptext10 03F4                     __ptext11 047C                     __ptext12 0453  
                   __ptext13 04CB                     _initGame 04A3           __end_of_buttonGoUp 06DA  
 __end_of_updateBallPosition 07E7                     main@argc 0079                     main@argv 007B  
              ?_MAX7219_init 0070                     init_ram0 0444              ??_MAX7219_write 0076  
        MAX7219_init@noChips 0077               ??_MAX7219_init 0077  
