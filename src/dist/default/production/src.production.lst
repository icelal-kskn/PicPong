

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu May 16 10:06:52 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	dabs	1,0x7E,2
    30     0000                     
    31                           ; Generated 12/10/2023 GMT
    32                           ; 
    33                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F877A Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0000                     	;# 
    66     0001                     	;# 
    67     0002                     	;# 
    68     0003                     	;# 
    69     0004                     	;# 
    70     0005                     	;# 
    71     0006                     	;# 
    72     0007                     	;# 
    73     0008                     	;# 
    74     0009                     	;# 
    75     000A                     	;# 
    76     000B                     	;# 
    77     000C                     	;# 
    78     000D                     	;# 
    79     000E                     	;# 
    80     000E                     	;# 
    81     000F                     	;# 
    82     0010                     	;# 
    83     0011                     	;# 
    84     0012                     	;# 
    85     0013                     	;# 
    86     0014                     	;# 
    87     0015                     	;# 
    88     0015                     	;# 
    89     0016                     	;# 
    90     0017                     	;# 
    91     0018                     	;# 
    92     0019                     	;# 
    93     001A                     	;# 
    94     001B                     	;# 
    95     001B                     	;# 
    96     001C                     	;# 
    97     001D                     	;# 
    98     001E                     	;# 
    99     001F                     	;# 
   100     0081                     	;# 
   101     0085                     	;# 
   102     0086                     	;# 
   103     0087                     	;# 
   104     0088                     	;# 
   105     0089                     	;# 
   106     008C                     	;# 
   107     008D                     	;# 
   108     008E                     	;# 
   109     0091                     	;# 
   110     0092                     	;# 
   111     0093                     	;# 
   112     0094                     	;# 
   113     0098                     	;# 
   114     0099                     	;# 
   115     009C                     	;# 
   116     009D                     	;# 
   117     009E                     	;# 
   118     009F                     	;# 
   119     010C                     	;# 
   120     010D                     	;# 
   121     010E                     	;# 
   122     010F                     	;# 
   123     018C                     	;# 
   124     018D                     	;# 
   125     0000                     	;# 
   126     0001                     	;# 
   127     0002                     	;# 
   128     0003                     	;# 
   129     0004                     	;# 
   130     0005                     	;# 
   131     0006                     	;# 
   132     0007                     	;# 
   133     0008                     	;# 
   134     0009                     	;# 
   135     000A                     	;# 
   136     000B                     	;# 
   137     000C                     	;# 
   138     000D                     	;# 
   139     000E                     	;# 
   140     000E                     	;# 
   141     000F                     	;# 
   142     0010                     	;# 
   143     0011                     	;# 
   144     0012                     	;# 
   145     0013                     	;# 
   146     0014                     	;# 
   147     0015                     	;# 
   148     0015                     	;# 
   149     0016                     	;# 
   150     0017                     	;# 
   151     0018                     	;# 
   152     0019                     	;# 
   153     001A                     	;# 
   154     001B                     	;# 
   155     001B                     	;# 
   156     001C                     	;# 
   157     001D                     	;# 
   158     001E                     	;# 
   159     001F                     	;# 
   160     0081                     	;# 
   161     0085                     	;# 
   162     0086                     	;# 
   163     0087                     	;# 
   164     0088                     	;# 
   165     0089                     	;# 
   166     008C                     	;# 
   167     008D                     	;# 
   168     008E                     	;# 
   169     0091                     	;# 
   170     0092                     	;# 
   171     0093                     	;# 
   172     0094                     	;# 
   173     0098                     	;# 
   174     0099                     	;# 
   175     009C                     	;# 
   176     009D                     	;# 
   177     009E                     	;# 
   178     009F                     	;# 
   179     010C                     	;# 
   180     010D                     	;# 
   181     010E                     	;# 
   182     010F                     	;# 
   183     018C                     	;# 
   184     018D                     	;# 
   185     0000                     	;# 
   186     0001                     	;# 
   187     0002                     	;# 
   188     0003                     	;# 
   189     0004                     	;# 
   190     0005                     	;# 
   191     0006                     	;# 
   192     0007                     	;# 
   193     0008                     	;# 
   194     0009                     	;# 
   195     000A                     	;# 
   196     000B                     	;# 
   197     000C                     	;# 
   198     000D                     	;# 
   199     000E                     	;# 
   200     000E                     	;# 
   201     000F                     	;# 
   202     0010                     	;# 
   203     0011                     	;# 
   204     0012                     	;# 
   205     0013                     	;# 
   206     0014                     	;# 
   207     0015                     	;# 
   208     0015                     	;# 
   209     0016                     	;# 
   210     0017                     	;# 
   211     0018                     	;# 
   212     0019                     	;# 
   213     001A                     	;# 
   214     001B                     	;# 
   215     001B                     	;# 
   216     001C                     	;# 
   217     001D                     	;# 
   218     001E                     	;# 
   219     001F                     	;# 
   220     0081                     	;# 
   221     0085                     	;# 
   222     0086                     	;# 
   223     0087                     	;# 
   224     0088                     	;# 
   225     0089                     	;# 
   226     008C                     	;# 
   227     008D                     	;# 
   228     008E                     	;# 
   229     0091                     	;# 
   230     0092                     	;# 
   231     0093                     	;# 
   232     0094                     	;# 
   233     0098                     	;# 
   234     0099                     	;# 
   235     009C                     	;# 
   236     009D                     	;# 
   237     009E                     	;# 
   238     009F                     	;# 
   239     010C                     	;# 
   240     010D                     	;# 
   241     010E                     	;# 
   242     010F                     	;# 
   243     018C                     	;# 
   244     018D                     	;# 
   245     0000                     	;# 
   246     0001                     	;# 
   247     0002                     	;# 
   248     0003                     	;# 
   249     0004                     	;# 
   250     0005                     	;# 
   251     0006                     	;# 
   252     0007                     	;# 
   253     0008                     	;# 
   254     0009                     	;# 
   255     000A                     	;# 
   256     000B                     	;# 
   257     000C                     	;# 
   258     000D                     	;# 
   259     000E                     	;# 
   260     000E                     	;# 
   261     000F                     	;# 
   262     0010                     	;# 
   263     0011                     	;# 
   264     0012                     	;# 
   265     0013                     	;# 
   266     0014                     	;# 
   267     0015                     	;# 
   268     0015                     	;# 
   269     0016                     	;# 
   270     0017                     	;# 
   271     0018                     	;# 
   272     0019                     	;# 
   273     001A                     	;# 
   274     001B                     	;# 
   275     001B                     	;# 
   276     001C                     	;# 
   277     001D                     	;# 
   278     001E                     	;# 
   279     001F                     	;# 
   280     0081                     	;# 
   281     0085                     	;# 
   282     0086                     	;# 
   283     0087                     	;# 
   284     0088                     	;# 
   285     0089                     	;# 
   286     008C                     	;# 
   287     008D                     	;# 
   288     008E                     	;# 
   289     0091                     	;# 
   290     0092                     	;# 
   291     0093                     	;# 
   292     0094                     	;# 
   293     0098                     	;# 
   294     0099                     	;# 
   295     009C                     	;# 
   296     009D                     	;# 
   297     009E                     	;# 
   298     009F                     	;# 
   299     010C                     	;# 
   300     010D                     	;# 
   301     010E                     	;# 
   302     010F                     	;# 
   303     018C                     	;# 
   304     018D                     	;# 
   305     0000                     	;# 
   306     0001                     	;# 
   307     0002                     	;# 
   308     0003                     	;# 
   309     0004                     	;# 
   310     0005                     	;# 
   311     0006                     	;# 
   312     0007                     	;# 
   313     0008                     	;# 
   314     0009                     	;# 
   315     000A                     	;# 
   316     000B                     	;# 
   317     000C                     	;# 
   318     000D                     	;# 
   319     000E                     	;# 
   320     000E                     	;# 
   321     000F                     	;# 
   322     0010                     	;# 
   323     0011                     	;# 
   324     0012                     	;# 
   325     0013                     	;# 
   326     0014                     	;# 
   327     0015                     	;# 
   328     0015                     	;# 
   329     0016                     	;# 
   330     0017                     	;# 
   331     0018                     	;# 
   332     0019                     	;# 
   333     001A                     	;# 
   334     001B                     	;# 
   335     001B                     	;# 
   336     001C                     	;# 
   337     001D                     	;# 
   338     001E                     	;# 
   339     001F                     	;# 
   340     0081                     	;# 
   341     0085                     	;# 
   342     0086                     	;# 
   343     0087                     	;# 
   344     0088                     	;# 
   345     0089                     	;# 
   346     008C                     	;# 
   347     008D                     	;# 
   348     008E                     	;# 
   349     0091                     	;# 
   350     0092                     	;# 
   351     0093                     	;# 
   352     0094                     	;# 
   353     0098                     	;# 
   354     0099                     	;# 
   355     009C                     	;# 
   356     009D                     	;# 
   357     009E                     	;# 
   358     009F                     	;# 
   359     010C                     	;# 
   360     010D                     	;# 
   361     010E                     	;# 
   362     010F                     	;# 
   363     018C                     	;# 
   364     018D                     	;# 
   365     0000                     	;# 
   366     0001                     	;# 
   367     0002                     	;# 
   368     0003                     	;# 
   369     0004                     	;# 
   370     0005                     	;# 
   371     0006                     	;# 
   372     0007                     	;# 
   373     0008                     	;# 
   374     0009                     	;# 
   375     000A                     	;# 
   376     000B                     	;# 
   377     000C                     	;# 
   378     000D                     	;# 
   379     000E                     	;# 
   380     000E                     	;# 
   381     000F                     	;# 
   382     0010                     	;# 
   383     0011                     	;# 
   384     0012                     	;# 
   385     0013                     	;# 
   386     0014                     	;# 
   387     0015                     	;# 
   388     0015                     	;# 
   389     0016                     	;# 
   390     0017                     	;# 
   391     0018                     	;# 
   392     0019                     	;# 
   393     001A                     	;# 
   394     001B                     	;# 
   395     001B                     	;# 
   396     001C                     	;# 
   397     001D                     	;# 
   398     001E                     	;# 
   399     001F                     	;# 
   400     0081                     	;# 
   401     0085                     	;# 
   402     0086                     	;# 
   403     0087                     	;# 
   404     0088                     	;# 
   405     0089                     	;# 
   406     008C                     	;# 
   407     008D                     	;# 
   408     008E                     	;# 
   409     0091                     	;# 
   410     0092                     	;# 
   411     0093                     	;# 
   412     0094                     	;# 
   413     0098                     	;# 
   414     0099                     	;# 
   415     009C                     	;# 
   416     009D                     	;# 
   417     009E                     	;# 
   418     009F                     	;# 
   419     010C                     	;# 
   420     010D                     	;# 
   421     010E                     	;# 
   422     010F                     	;# 
   423     018C                     	;# 
   424     018D                     	;# 
   425                           
   426                           	psect	idataCOMMON
   427     0583                     __pidataCOMMON:
   428                           
   429                           ;initializer for _ballYState
   430     0583  3408               	retlw	8
   431                           
   432                           ;initializer for _p1State
   433     0584  341E               	retlw	30
   434                           
   435                           	psect	idataBANK0
   436     0585                     __pidataBANK0:
   437                           
   438                           ;initializer for _ballX
   439     0585  3404               	retlw	4
   440     0586  3400               	retlw	0
   441                           
   442                           ;initializer for _ballDirY
   443     0587  3401               	retlw	1
   444     0588  3400               	retlw	0
   445                           
   446                           ;initializer for _ballDirX
   447     0589  3401               	retlw	1
   448     058A  3400               	retlw	0
   449                           
   450                           ;initializer for _p2State
   451     058B  341E               	retlw	30
   452     0039                     _RC1	set	57
   453     003C                     _RC4	set	60
   454     0038                     _RC0	set	56
   455     003A                     _RC2	set	58
   456     0033                     _RB3	set	51
   457     0032                     _RB2	set	50
   458     0031                     _RB1	set	49
   459     0030                     _RB0	set	48
   460     0087                     _TRISC	set	135
   461     0086                     _TRISB	set	134
   462     043B                     _TRISC3	set	1083
   463     0439                     _TRISC1	set	1081
   464     043C                     _TRISC4	set	1084
   465     0438                     _TRISC0	set	1080
   466     043A                     _TRISC2	set	1082
   467                           
   468                           	psect	cinit
   469     07DE                     start_initialization:	
   470                           ; #config settings
   471                           
   472     07DE                     __initialization:
   473                           
   474                           ; Initialize objects allocated to BANK0
   475     07DE  1383               	bcf	3,7	;select IRP bank0
   476     07DF  3027               	movlw	low (__pdataBANK0+7)
   477     07E0  00FD               	movwf	btemp+-1
   478     07E1  3005               	movlw	high __pidataBANK0
   479     07E2  00FE               	movwf	btemp
   480     07E3  3085               	movlw	low __pidataBANK0
   481     07E4  00FF               	movwf	btemp+1
   482     07E5  3020               	movlw	low __pdataBANK0
   483     07E6  0084               	movwf	4
   484     07E7  120A  118A  25E7  120A  118A  	fcall	init_ram0
   485                           
   486                           ; Initialize objects allocated to COMMON
   487     07EC  120A  118A  2583  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   488     07F1  00FC               	movwf	__pdataCOMMON& (0+127)
   489     07F2  120A  118A  2584  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   490     07F7  00FD               	movwf	(__pdataCOMMON+1)& (0+127)
   491                           
   492                           ; Clear objects allocated to BANK0
   493     07F8  01AE               	clrf	__pbssBANK0& (0+127)
   494     07F9  01AF               	clrf	(__pbssBANK0+1)& (0+127)
   495     07FA  01B0               	clrf	(__pbssBANK0+2)& (0+127)
   496     07FB  01B1               	clrf	(__pbssBANK0+3)& (0+127)
   497     07FC                     end_of_initialization:	
   498                           ;End of C runtime variable initialization code
   499                           
   500     07FC                     __end_of__initialization:
   501     07FC  0183               	clrf	3
   502     07FD  120A  118A  2F53   	ljmp	_main	;jump to C main() function
   503                           
   504                           	psect	dataCOMMON
   505     007C                     __pdataCOMMON:
   506     007C                     _ballYState:
   507     007C                     	ds	1
   508     007D                     _p1State:
   509     007D                     	ds	1
   510                           
   511                           	psect	bssBANK0
   512     002E                     __pbssBANK0:
   513     002E                     _button3pressed:
   514     002E                     	ds	1
   515     002F                     _button2pressed:
   516     002F                     	ds	1
   517     0030                     _button1pressed:
   518     0030                     	ds	1
   519     0031                     _button0pressed:
   520     0031                     	ds	1
   521                           
   522                           	psect	dataBANK0
   523     0020                     __pdataBANK0:
   524     0020                     _ballX:
   525     0020                     	ds	2
   526     0022                     _ballDirY:
   527     0022                     	ds	2
   528     0024                     _ballDirX:
   529     0024                     	ds	2
   530     0026                     _p2State:
   531     0026                     	ds	1
   532                           
   533                           	psect	inittext
   534     05E3                     init_fetch0:	
   535                           ;	Called with low address in FSR and high address in W
   536                           
   537     05E3  087E               	movf	btemp,w
   538     05E4  008A               	movwf	10
   539     05E5  087F               	movf	btemp+1,w
   540     05E6  0082               	movwf	2
   541     05E7                     init_ram0:	
   542                           ;Called with:
   543                           ;	high address of idata address in btemp 
   544                           ;	low address of idata address in btemp+1 
   545                           ;	low address of data in FSR
   546                           ;	high address + 1 of data in btemp-1
   547                           
   548     05E7  120A  118A  25E3  120A  118A  	fcall	init_fetch0
   549     05EC  0080               	movwf	0
   550     05ED  0A84               	incf	4,f
   551     05EE  0804               	movf	4,w
   552     05EF  067D               	xorwf	btemp+-1,w
   553     05F0  1903               	btfsc	3,2
   554     05F1  3400               	retlw	0
   555     05F2  0AFF               	incf	btemp+1,f
   556     05F3  1903               	btfsc	3,2
   557     05F4  0AFE               	incf	btemp,f
   558     05F5  2DE7               	goto	init_ram0
   559                           
   560                           	psect	cstackCOMMON
   561     0070                     __pcstackCOMMON:
   562     0070                     ?_MAX7219_init:
   563     0070                     ?_MAX7219_config:	
   564                           ; 1 bytes @ 0x0
   565                           
   566     0070                     ?_readButton0State:	
   567                           ; 1 bytes @ 0x0
   568                           
   569     0070                     ??_readButton0State:	
   570                           ; 1 bytes @ 0x0
   571                           
   572     0070                     ?_readButton1State:	
   573                           ; 1 bytes @ 0x0
   574                           
   575     0070                     ??_readButton1State:	
   576                           ; 1 bytes @ 0x0
   577                           
   578     0070                     ?_readButton2State:	
   579                           ; 1 bytes @ 0x0
   580                           
   581     0070                     ??_readButton2State:	
   582                           ; 1 bytes @ 0x0
   583                           
   584     0070                     ?_readButton3State:	
   585                           ; 1 bytes @ 0x0
   586                           
   587     0070                     ??_readButton3State:	
   588                           ; 1 bytes @ 0x0
   589                           
   590     0070                     ?_initPorts:	
   591                           ; 1 bytes @ 0x0
   592                           
   593     0070                     ?_initGame:	
   594                           ; 1 bytes @ 0x0
   595                           
   596     0070                     ?_buttonGoUp:	
   597                           ; 1 bytes @ 0x0
   598                           
   599     0070                     ??_buttonGoUp:	
   600                           ; 1 bytes @ 0x0
   601                           
   602     0070                     ?_buttonGoDown:	
   603                           ; 1 bytes @ 0x0
   604                           
   605     0070                     ??_buttonGoDown:	
   606                           ; 1 bytes @ 0x0
   607                           
   608     0070                     ?_updateBallPosition:	
   609                           ; 1 bytes @ 0x0
   610                           
   611     0070                     ?_SPI_init:	
   612                           ; 1 bytes @ 0x0
   613                           
   614     0070                     ??_SPI_init:	
   615                           ; 1 bytes @ 0x0
   616                           
   617     0070                     ?_SPI_write:	
   618                           ; 1 bytes @ 0x0
   619                           
   620     0070                     ??_SPI_write:	
   621                           ; 1 bytes @ 0x0
   622                           
   623     0070                     MAX7219_config@chip:	
   624                           ; 1 bytes @ 0x0
   625                           
   626                           
   627                           ; 1 bytes @ 0x0
   628     0070                     	ds	1
   629     0071                     buttonGoUp@currentState:
   630     0071                     buttonGoDown@currentState:	
   631                           ; 1 bytes @ 0x1
   632                           
   633                           
   634                           ; 1 bytes @ 0x1
   635     0071                     	ds	1
   636     0072                     SPI_write@send:
   637                           
   638                           ; 1 bytes @ 0x2
   639     0072                     	ds	1
   640     0073                     SPI_write@Tx:
   641                           
   642                           ; 2 bytes @ 0x3
   643     0073                     	ds	2
   644     0075                     ?_MAX7219_write:
   645     0075                     MAX7219_write@data:	
   646                           ; 1 bytes @ 0x5
   647                           
   648                           
   649                           ; 1 bytes @ 0x5
   650     0075                     	ds	1
   651     0076                     ??_MAX7219_write:
   652     0076                     MAX7219_write@regName:	
   653                           ; 1 bytes @ 0x6
   654                           
   655                           
   656                           ; 1 bytes @ 0x6
   657     0076                     	ds	1
   658     0077                     ??_MAX7219_init:
   659     0077                     ??_MAX7219_config:	
   660                           ; 1 bytes @ 0x7
   661                           
   662     0077                     ??_initGame:	
   663                           ; 1 bytes @ 0x7
   664                           
   665     0077                     ?_updatePlayerPosition:	
   666                           ; 1 bytes @ 0x7
   667                           
   668     0077                     ??_updateBallPosition:	
   669                           ; 1 bytes @ 0x7
   670                           
   671     0077                     MAX7219_init@noChips:	
   672                           ; 1 bytes @ 0x7
   673                           
   674     0077                     updatePlayerPosition@player:	
   675                           ; 1 bytes @ 0x7
   676                           
   677                           
   678                           ; 2 bytes @ 0x7
   679     0077                     	ds	1
   680     0078                     ??_initPorts:
   681                           
   682                           ; 1 bytes @ 0x8
   683     0078                     	ds	1
   684     0079                     updatePlayerPosition@direction:
   685                           
   686                           ; 2 bytes @ 0x9
   687     0079                     	ds	1
   688     007A                     _updateBallPosition$71:
   689                           
   690                           ; 2 bytes @ 0xA
   691     007A                     	ds	1
   692     007B                     ??_updatePlayerPosition:
   693                           
   694                           ; 1 bytes @ 0xB
   695     007B                     	ds	1
   696                           
   697                           	psect	cstackBANK0
   698     0027                     __pcstackBANK0:
   699     0027                     ?_main:
   700     0027                     main@argc:	
   701                           ; 2 bytes @ 0x0
   702                           
   703                           
   704                           ; 2 bytes @ 0x0
   705     0027                     	ds	2
   706     0029                     main@argv:
   707                           
   708                           ; 2 bytes @ 0x2
   709     0029                     	ds	2
   710     002B                     ??_main:
   711                           
   712                           ; 1 bytes @ 0x4
   713     002B                     	ds	3
   714                           
   715                           	psect	maintext
   716     0753                     __pmaintext:	
   717 ;;
   718 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   719 ;;
   720 ;; *************** function _main *****************
   721 ;; Defined at:
   722 ;;		line 133 in file "main.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;  argc            2    0[BANK0 ] int 
   725 ;;  argv            2    2[BANK0 ] PTR PTR unsigned char 
   726 ;; Auto vars:     Size  Location     Type
   727 ;;		None
   728 ;; Return value:  Size  Location     Type
   729 ;;                  2    0[BANK0 ] int 
   730 ;; Registers used:
   731 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   732 ;; Tracked objects:
   733 ;;		On entry : B00/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   737 ;;      Params:         0       4       0       0       0
   738 ;;      Locals:         0       0       0       0       0
   739 ;;      Temps:          0       3       0       0       0
   740 ;;      Totals:         0       7       0       0       0
   741 ;;Total ram usage:        7 bytes
   742 ;; Hardware stack levels required when called: 5
   743 ;; This function calls:
   744 ;;		_initGame
   745 ;;		_initPorts
   746 ;;		_readButton0State
   747 ;;		_readButton1State
   748 ;;		_readButton2State
   749 ;;		_readButton3State
   750 ;;		_updateBallPosition
   751 ;;		_updatePlayerPosition
   752 ;; This function is called by:
   753 ;;		Startup code after reset
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757     0753                     _main:	
   758                           ;psect for function _main
   759                           
   760     0753                     l1059:	
   761                           ;incstack = 0
   762                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   763                           
   764                           
   765                           ;main.c: 134:     initPorts();
   766     0753  120A  118A  25BC  120A  118A  	fcall	_initPorts
   767                           
   768                           ;main.c: 135:     initGame();
   769     0758  120A  118A  261F  120A  118A  	fcall	_initGame
   770     075D                     l1061:
   771                           
   772                           ;main.c: 139:         _delay((unsigned long)((10)*(800000000/4000.0)));
   773     075D  300B               	movlw	11
   774     075E  1283               	bcf	3,5	;RP0=0, select bank0
   775     075F  1303               	bcf	3,6	;RP1=0, select bank0
   776     0760  00AD               	movwf	??_main+2
   777     0761  3026               	movlw	38
   778     0762  00AC               	movwf	??_main+1
   779     0763  305D               	movlw	93
   780     0764  00AB               	movwf	??_main
   781     0765                     u517:
   782     0765  0BAB               	decfsz	??_main,f
   783     0766  2F65               	goto	u517
   784     0767  0BAC               	decfsz	??_main+1,f
   785     0768  2F65               	goto	u517
   786     0769  0BAD               	decfsz	??_main+2,f
   787     076A  2F65               	goto	u517
   788     076B                     l1063:
   789                           
   790                           ;main.c: 140:         button0pressed = readButton0State();
   791     076B  120A  118A  2594  120A  118A  	fcall	_readButton0State
   792     0770  1283               	bcf	3,5	;RP0=0, select bank0
   793     0771  1303               	bcf	3,6	;RP1=0, select bank0
   794     0772  00B1               	movwf	_button0pressed
   795     0773                     l1065:
   796                           
   797                           ;main.c: 141:         button1pressed = readButton1State();
   798     0773  120A  118A  259E  120A  118A  	fcall	_readButton1State
   799     0778  1283               	bcf	3,5	;RP0=0, select bank0
   800     0779  1303               	bcf	3,6	;RP1=0, select bank0
   801     077A  00B0               	movwf	_button1pressed
   802     077B                     l1067:
   803                           
   804                           ;main.c: 142:         button2pressed = readButton2State();
   805     077B  120A  118A  25A8  120A  118A  	fcall	_readButton2State
   806     0780  1283               	bcf	3,5	;RP0=0, select bank0
   807     0781  1303               	bcf	3,6	;RP1=0, select bank0
   808     0782  00AF               	movwf	_button2pressed
   809     0783                     l1069:
   810                           
   811                           ;main.c: 143:         button3pressed = readButton3State();
   812     0783  120A  118A  25B2  120A  118A  	fcall	_readButton3State
   813     0788  1283               	bcf	3,5	;RP0=0, select bank0
   814     0789  1303               	bcf	3,6	;RP1=0, select bank0
   815     078A  00AE               	movwf	_button3pressed
   816     078B                     l1071:
   817                           
   818                           ;main.c: 146:         if (button0pressed) {
   819     078B  0831               	movf	_button0pressed,w
   820     078C  1903               	btfsc	3,2
   821     078D  2F8F               	goto	u461
   822     078E  2F90               	goto	u460
   823     078F                     u461:
   824     078F  2F9E               	goto	l1075
   825     0790                     u460:
   826     0790                     l1073:
   827                           
   828                           ;main.c: 147:             updatePlayerPosition(1, 1);
   829     0790  3001               	movlw	1
   830     0791  00F7               	movwf	updatePlayerPosition@player
   831     0792  3000               	movlw	0
   832     0793  00F8               	movwf	updatePlayerPosition@player+1
   833     0794  3001               	movlw	1
   834     0795  00F9               	movwf	updatePlayerPosition@direction
   835     0796  3000               	movlw	0
   836     0797  00FA               	movwf	updatePlayerPosition@direction+1
   837     0798  120A  118A  269B  120A  118A  	fcall	_updatePlayerPosition
   838                           
   839                           ;main.c: 148:         } else if (button1pressed) {
   840     079D  2FAF               	goto	l1079
   841     079E                     l1075:
   842     079E  0830               	movf	_button1pressed,w
   843     079F  1903               	btfsc	3,2
   844     07A0  2FA2               	goto	u471
   845     07A1  2FA3               	goto	u470
   846     07A2                     u471:
   847     07A2  2FAF               	goto	l1079
   848     07A3                     u470:
   849     07A3                     l1077:
   850                           
   851                           ;main.c: 149:             updatePlayerPosition(1, 0);
   852     07A3  3001               	movlw	1
   853     07A4  00F7               	movwf	updatePlayerPosition@player
   854     07A5  3000               	movlw	0
   855     07A6  00F8               	movwf	updatePlayerPosition@player+1
   856     07A7  3000               	movlw	0
   857     07A8  00F9               	movwf	updatePlayerPosition@direction
   858     07A9  00FA               	movwf	updatePlayerPosition@direction+1
   859     07AA  120A  118A  269B  120A  118A  	fcall	_updatePlayerPosition
   860     07AF                     l1079:
   861                           
   862                           ;main.c: 153:         if (button2pressed) {
   863     07AF  1283               	bcf	3,5	;RP0=0, select bank0
   864     07B0  1303               	bcf	3,6	;RP1=0, select bank0
   865     07B1  082F               	movf	_button2pressed,w
   866     07B2  1903               	btfsc	3,2
   867     07B3  2FB5               	goto	u481
   868     07B4  2FB6               	goto	u480
   869     07B5                     u481:
   870     07B5  2FC4               	goto	l1083
   871     07B6                     u480:
   872     07B6                     l1081:
   873                           
   874                           ;main.c: 154:             updatePlayerPosition(2, 1);
   875     07B6  3002               	movlw	2
   876     07B7  00F7               	movwf	updatePlayerPosition@player
   877     07B8  3000               	movlw	0
   878     07B9  00F8               	movwf	updatePlayerPosition@player+1
   879     07BA  3001               	movlw	1
   880     07BB  00F9               	movwf	updatePlayerPosition@direction
   881     07BC  3000               	movlw	0
   882     07BD  00FA               	movwf	updatePlayerPosition@direction+1
   883     07BE  120A  118A  269B  120A  118A  	fcall	_updatePlayerPosition
   884                           
   885                           ;main.c: 155:         } else if (button3pressed) {
   886     07C3  2FD5               	goto	l100
   887     07C4                     l1083:
   888     07C4  082E               	movf	_button3pressed,w
   889     07C5  1903               	btfsc	3,2
   890     07C6  2FC8               	goto	u491
   891     07C7  2FC9               	goto	u490
   892     07C8                     u491:
   893     07C8  2FD5               	goto	l100
   894     07C9                     u490:
   895     07C9                     l1085:
   896                           
   897                           ;main.c: 156:             updatePlayerPosition(2, 0);
   898     07C9  3002               	movlw	2
   899     07CA  00F7               	movwf	updatePlayerPosition@player
   900     07CB  3000               	movlw	0
   901     07CC  00F8               	movwf	updatePlayerPosition@player+1
   902     07CD  3000               	movlw	0
   903     07CE  00F9               	movwf	updatePlayerPosition@direction
   904     07CF  00FA               	movwf	updatePlayerPosition@direction+1
   905     07D0  120A  118A  269B  120A  118A  	fcall	_updatePlayerPosition
   906     07D5                     l100:
   907                           
   908                           ;main.c: 158:         updateBallPosition();
   909     07D5  120A  118A  26F5  120A  118A  	fcall	_updateBallPosition
   910     07DA  2F5D               	goto	l1061
   911     07DB  120A  118A  2800   	ljmp	start
   912     07DE                     __end_of_main:
   913                           
   914                           	psect	text1
   915     069B                     __ptext1:	
   916 ;; *************** function _updatePlayerPosition *****************
   917 ;; Defined at:
   918 ;;		line 98 in file "main.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;  player          2    7[COMMON] int 
   921 ;;  direction       2    9[COMMON] int 
   922 ;; Auto vars:     Size  Location     Type
   923 ;;		None
   924 ;; Return value:  Size  Location     Type
   925 ;;                  1    wreg      void 
   926 ;; Registers used:
   927 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   933 ;;      Params:         4       0       0       0       0
   934 ;;      Locals:         0       0       0       0       0
   935 ;;      Temps:          0       0       0       0       0
   936 ;;      Totals:         4       0       0       0       0
   937 ;;Total ram usage:        4 bytes
   938 ;; Hardware stack levels used: 1
   939 ;; Hardware stack levels required when called: 2
   940 ;; This function calls:
   941 ;;		_MAX7219_write
   942 ;;		_buttonGoDown
   943 ;;		_buttonGoUp
   944 ;; This function is called by:
   945 ;;		_main
   946 ;; This function uses a non-reentrant model
   947 ;;
   948                           
   949     069B                     _updatePlayerPosition:	
   950                           ;psect for function _updatePlayerPosition
   951                           
   952     069B                     l1015:	
   953                           ;incstack = 0
   954                           ; Regs used in _updatePlayerPosition: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   955                           
   956                           
   957                           ;main.c: 99:     if (player == 1) {
   958     069B  0377               	decf	updatePlayerPosition@player,w
   959     069C  0478               	iorwf	updatePlayerPosition@player+1,w
   960     069D  1D03               	btfss	3,2
   961     069E  2EA0               	goto	u381
   962     069F  2EA1               	goto	u380
   963     06A0                     u381:
   964     06A0  2EC7               	goto	l1027
   965     06A1                     u380:
   966     06A1                     l1017:
   967                           
   968                           ;main.c: 100:         if (direction == 1) {
   969     06A1  0379               	decf	updatePlayerPosition@direction,w
   970     06A2  047A               	iorwf	updatePlayerPosition@direction+1,w
   971     06A3  1D03               	btfss	3,2
   972     06A4  2EA6               	goto	u391
   973     06A5  2EA7               	goto	u390
   974     06A6                     u391:
   975     06A6  2EB7               	goto	l1023
   976     06A7                     u390:
   977     06A7                     l1019:
   978                           
   979                           ;main.c: 101:             p1State = buttonGoUp(p1State);
   980     06A7  087D               	movf	_p1State,w
   981     06A8  120A  118A  25C8  120A  118A  	fcall	_buttonGoUp
   982     06AD  00FD               	movwf	_p1State
   983     06AE                     l1021:
   984                           
   985                           ;main.c: 102:             MAX7219_write(8, p1State);
   986     06AE  087D               	movf	_p1State,w
   987     06AF  00F5               	movwf	MAX7219_write@data
   988     06B0  3008               	movlw	8
   989     06B1  120A  118A  25F6  120A  118A  	fcall	_MAX7219_write
   990                           
   991                           ;main.c: 103:         } else {
   992     06B6  2EF4               	goto	l77
   993     06B7                     l1023:
   994                           
   995                           ;main.c: 104:             p1State = buttonGoDown(p1State);
   996     06B7  087D               	movf	_p1State,w
   997     06B8  120A  118A  25D5  120A  118A  	fcall	_buttonGoDown
   998     06BD  00FD               	movwf	_p1State
   999     06BE                     l1025:
  1000                           
  1001                           ;main.c: 105:             MAX7219_write(8, p1State);
  1002     06BE  087D               	movf	_p1State,w
  1003     06BF  00F5               	movwf	MAX7219_write@data
  1004     06C0  3008               	movlw	8
  1005     06C1  120A  118A  25F6  120A  118A  	fcall	_MAX7219_write
  1006     06C6  2EF4               	goto	l77
  1007     06C7                     l1027:
  1008                           
  1009                           ;main.c: 108:         if (direction == 1) {
  1010     06C7  0379               	decf	updatePlayerPosition@direction,w
  1011     06C8  047A               	iorwf	updatePlayerPosition@direction+1,w
  1012     06C9  1D03               	btfss	3,2
  1013     06CA  2ECC               	goto	u401
  1014     06CB  2ECD               	goto	u400
  1015     06CC                     u401:
  1016     06CC  2EE1               	goto	l1033
  1017     06CD                     u400:
  1018     06CD                     l1029:
  1019                           
  1020                           ;main.c: 109:             p2State = buttonGoUp(p2State);
  1021     06CD  1283               	bcf	3,5	;RP0=0, select bank0
  1022     06CE  1303               	bcf	3,6	;RP1=0, select bank0
  1023     06CF  0826               	movf	_p2State,w
  1024     06D0  120A  118A  25C8  120A  118A  	fcall	_buttonGoUp
  1025     06D5  1283               	bcf	3,5	;RP0=0, select bank0
  1026     06D6  1303               	bcf	3,6	;RP1=0, select bank0
  1027     06D7  00A6               	movwf	_p2State
  1028     06D8                     l1031:
  1029                           
  1030                           ;main.c: 110:             MAX7219_write(1, p2State);
  1031     06D8  0826               	movf	_p2State,w
  1032     06D9  00F5               	movwf	MAX7219_write@data
  1033     06DA  3001               	movlw	1
  1034     06DB  120A  118A  25F6  120A  118A  	fcall	_MAX7219_write
  1035                           
  1036                           ;main.c: 111:         } else {
  1037     06E0  2EF4               	goto	l77
  1038     06E1                     l1033:
  1039                           
  1040                           ;main.c: 112:             p2State = buttonGoDown(p2State);
  1041     06E1  1283               	bcf	3,5	;RP0=0, select bank0
  1042     06E2  1303               	bcf	3,6	;RP1=0, select bank0
  1043     06E3  0826               	movf	_p2State,w
  1044     06E4  120A  118A  25D5  120A  118A  	fcall	_buttonGoDown
  1045     06E9  1283               	bcf	3,5	;RP0=0, select bank0
  1046     06EA  1303               	bcf	3,6	;RP1=0, select bank0
  1047     06EB  00A6               	movwf	_p2State
  1048     06EC                     l1035:
  1049                           
  1050                           ;main.c: 113:             MAX7219_write(1, p2State);
  1051     06EC  0826               	movf	_p2State,w
  1052     06ED  00F5               	movwf	MAX7219_write@data
  1053     06EE  3001               	movlw	1
  1054     06EF  120A  118A  25F6  120A  118A  	fcall	_MAX7219_write
  1055     06F4                     l77:
  1056     06F4  0008               	return
  1057     06F5                     __end_of_updatePlayerPosition:
  1058                           
  1059                           	psect	text2
  1060     05C8                     __ptext2:	
  1061 ;; *************** function _buttonGoUp *****************
  1062 ;; Defined at:
  1063 ;;		line 84 in file "main.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;  currentState    1    wreg     unsigned char 
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;  currentState    1    1[COMMON] unsigned char 
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  1    wreg      unsigned char 
  1070 ;; Registers used:
  1071 ;;		wreg, status,2, status,0
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1077 ;;      Params:         0       0       0       0       0
  1078 ;;      Locals:         1       0       0       0       0
  1079 ;;      Temps:          1       0       0       0       0
  1080 ;;      Totals:         2       0       0       0       0
  1081 ;;Total ram usage:        2 bytes
  1082 ;; Hardware stack levels used: 1
  1083 ;; This function calls:
  1084 ;;		Nothing
  1085 ;; This function is called by:
  1086 ;;		_updatePlayerPosition
  1087 ;; This function uses a non-reentrant model
  1088 ;;
  1089                           
  1090     05C8                     _buttonGoUp:	
  1091                           ;psect for function _buttonGoUp
  1092                           
  1093                           
  1094                           ;incstack = 0
  1095                           ; Regs used in _buttonGoUp: [wreg+status,2+status,0]
  1096                           ;buttonGoUp@currentState stored from wreg
  1097     05C8  00F1               	movwf	buttonGoUp@currentState
  1098     05C9                     l941:
  1099                           
  1100                           ;main.c: 85:     if (currentState & (0b00001000 | 0b00010000 | 0b00100000 | 0b01000000))
      +                           {
  1101     05C9  0871               	movf	buttonGoUp@currentState,w
  1102     05CA  3978               	andlw	120
  1103     05CB  1903               	btfsc	3,2
  1104     05CC  2DCE               	goto	u321
  1105     05CD  2DCF               	goto	u320
  1106     05CE                     u321:
  1107     05CE  2DD1               	goto	l947
  1108     05CF                     u320:
  1109     05CF                     l943:
  1110                           
  1111                           ;main.c: 86:         return currentState;
  1112     05CF  0871               	movf	buttonGoUp@currentState,w
  1113     05D0  2DD4               	goto	l64
  1114     05D1                     l947:
  1115                           
  1116                           ;main.c: 88:     return currentState << 1;
  1117     05D1  0871               	movf	buttonGoUp@currentState,w
  1118     05D2  00F0               	movwf	??_buttonGoUp
  1119     05D3  0770               	addwf	??_buttonGoUp,w
  1120     05D4                     l64:
  1121     05D4  0008               	return
  1122     05D5                     __end_of_buttonGoUp:
  1123                           
  1124                           	psect	text3
  1125     05D5                     __ptext3:	
  1126 ;; *************** function _buttonGoDown *****************
  1127 ;; Defined at:
  1128 ;;		line 91 in file "main.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;  currentState    1    wreg     unsigned char 
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;  currentState    1    1[COMMON] unsigned char 
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  1    wreg      unsigned char 
  1135 ;; Registers used:
  1136 ;;		wreg, status,2, status,0
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1142 ;;      Params:         0       0       0       0       0
  1143 ;;      Locals:         1       0       0       0       0
  1144 ;;      Temps:          1       0       0       0       0
  1145 ;;      Totals:         2       0       0       0       0
  1146 ;;Total ram usage:        2 bytes
  1147 ;; Hardware stack levels used: 1
  1148 ;; This function calls:
  1149 ;;		Nothing
  1150 ;; This function is called by:
  1151 ;;		_updatePlayerPosition
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155     05D5                     _buttonGoDown:	
  1156                           ;psect for function _buttonGoDown
  1157                           
  1158                           
  1159                           ;incstack = 0
  1160                           ; Regs used in _buttonGoDown: [wreg+status,2+status,0]
  1161                           ;buttonGoDown@currentState stored from wreg
  1162     05D5  00F1               	movwf	buttonGoDown@currentState
  1163     05D6                     l951:
  1164                           
  1165                           ;main.c: 92:     if (currentState & (0b10000000 | 0b00000001 | 0b00000010 | 0b00000100))
      +                           {
  1166     05D6  0871               	movf	buttonGoDown@currentState,w
  1167     05D7  3987               	andlw	135
  1168     05D8  1903               	btfsc	3,2
  1169     05D9  2DDB               	goto	u331
  1170     05DA  2DDC               	goto	u330
  1171     05DB                     u331:
  1172     05DB  2DDE               	goto	l957
  1173     05DC                     u330:
  1174     05DC                     l953:
  1175                           
  1176                           ;main.c: 93:         return currentState;
  1177     05DC  0871               	movf	buttonGoDown@currentState,w
  1178     05DD  2DE2               	goto	l68
  1179     05DE                     l957:
  1180                           
  1181                           ;main.c: 95:     return currentState >> 1;
  1182     05DE  0871               	movf	buttonGoDown@currentState,w
  1183     05DF  00F0               	movwf	??_buttonGoDown
  1184     05E0  1003               	clrc
  1185     05E1  0C70               	rrf	??_buttonGoDown,w
  1186     05E2                     l68:
  1187     05E2  0008               	return
  1188     05E3                     __end_of_buttonGoDown:
  1189                           
  1190                           	psect	text4
  1191     06F5                     __ptext4:	
  1192 ;; *************** function _updateBallPosition *****************
  1193 ;; Defined at:
  1194 ;;		line 118 in file "main.c"
  1195 ;; Parameters:    Size  Location     Type
  1196 ;;		None
  1197 ;; Auto vars:     Size  Location     Type
  1198 ;;		None
  1199 ;; Return value:  Size  Location     Type
  1200 ;;                  1    wreg      void 
  1201 ;; Registers used:
  1202 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1203 ;; Tracked objects:
  1204 ;;		On entry : 0/0
  1205 ;;		On exit  : 0/0
  1206 ;;		Unchanged: 0/0
  1207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1208 ;;      Params:         0       0       0       0       0
  1209 ;;      Locals:         2       0       0       0       0
  1210 ;;      Temps:          3       0       0       0       0
  1211 ;;      Totals:         5       0       0       0       0
  1212 ;;Total ram usage:        5 bytes
  1213 ;; Hardware stack levels used: 1
  1214 ;; Hardware stack levels required when called: 2
  1215 ;; This function calls:
  1216 ;;		_MAX7219_write
  1217 ;; This function is called by:
  1218 ;;		_main
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222     06F5                     _updateBallPosition:	
  1223                           ;psect for function _updateBallPosition
  1224                           
  1225     06F5                     l1037:	
  1226                           ;incstack = 0
  1227                           ; Regs used in _updateBallPosition: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1228                           
  1229                           
  1230                           ;main.c: 120:     if (ballX < 1 || ballX > 8) {
  1231     06F5  1283               	bcf	3,5	;RP0=0, select bank0
  1232     06F6  1303               	bcf	3,6	;RP1=0, select bank0
  1233     06F7  0821               	movf	_ballX+1,w
  1234     06F8  3A80               	xorlw	128
  1235     06F9  00FF               	movwf	btemp+1
  1236     06FA  3080               	movlw	128
  1237     06FB  027F               	subwf	btemp+1,w
  1238     06FC  1D03               	skipz
  1239     06FD  2F00               	goto	u415
  1240     06FE  3001               	movlw	1
  1241     06FF  0220               	subwf	_ballX,w
  1242     0700                     u415:
  1243     0700  1C03               	skipc
  1244     0701  2F03               	goto	u411
  1245     0702  2F04               	goto	u410
  1246     0703                     u411:
  1247     0703  2F13               	goto	l1041
  1248     0704                     u410:
  1249     0704                     l1039:
  1250     0704  1283               	bcf	3,5	;RP0=0, select bank0
  1251     0705  1303               	bcf	3,6	;RP1=0, select bank0
  1252     0706  0821               	movf	_ballX+1,w
  1253     0707  3A80               	xorlw	128
  1254     0708  00FF               	movwf	btemp+1
  1255     0709  3080               	movlw	128
  1256     070A  027F               	subwf	btemp+1,w
  1257     070B  1D03               	skipz
  1258     070C  2F0F               	goto	u425
  1259     070D  3009               	movlw	9
  1260     070E  0220               	subwf	_ballX,w
  1261     070F                     u425:
  1262     070F  1C03               	skipc
  1263     0710  2F12               	goto	u421
  1264     0711  2F13               	goto	u420
  1265     0712                     u421:
  1266     0712  2F1A               	goto	l1043
  1267     0713                     u420:
  1268     0713                     l1041:
  1269                           
  1270                           ;main.c: 121:         ballDirX = -ballDirX;
  1271     0713  1283               	bcf	3,5	;RP0=0, select bank0
  1272     0714  1303               	bcf	3,6	;RP1=0, select bank0
  1273     0715  09A4               	comf	_ballDirX,f
  1274     0716  09A5               	comf	_ballDirX+1,f
  1275     0717  0AA4               	incf	_ballDirX,f
  1276     0718  1903               	skipnz
  1277     0719  0AA5               	incf	_ballDirX+1,f
  1278     071A                     l1043:
  1279                           
  1280                           ;main.c: 123:     ballX += ballDirX;
  1281     071A  1283               	bcf	3,5	;RP0=0, select bank0
  1282     071B  1303               	bcf	3,6	;RP1=0, select bank0
  1283     071C  0824               	movf	_ballDirX,w
  1284     071D  07A0               	addwf	_ballX,f
  1285     071E  1803               	skipnc
  1286     071F  0AA1               	incf	_ballX+1,f
  1287     0720  0825               	movf	_ballDirX+1,w
  1288     0721  07A1               	addwf	_ballX+1,f
  1289     0722                     l1045:
  1290                           
  1291                           ;main.c: 125:     if ((ballYState & 0b10000000) || (ballYState & 0b01000000)) {
  1292     0722  1BFC               	btfsc	_ballYState,7
  1293     0723  2F25               	goto	u431
  1294     0724  2F26               	goto	u430
  1295     0725                     u431:
  1296     0725  2F2A               	goto	l1049
  1297     0726                     u430:
  1298     0726                     l1047:
  1299     0726  1F7C               	btfss	_ballYState,6
  1300     0727  2F29               	goto	u441
  1301     0728  2F2A               	goto	u440
  1302     0729                     u441:
  1303     0729  2F2F               	goto	l1051
  1304     072A                     u440:
  1305     072A                     l1049:
  1306                           
  1307                           ;main.c: 126:         ballDirY = -ballDirY;
  1308     072A  09A2               	comf	_ballDirY,f
  1309     072B  09A3               	comf	_ballDirY+1,f
  1310     072C  0AA2               	incf	_ballDirY,f
  1311     072D  1903               	skipnz
  1312     072E  0AA3               	incf	_ballDirY+1,f
  1313     072F                     l1051:
  1314                           
  1315                           ;main.c: 128:     ballYState = (ballDirY == 1) ? ballYState << 1 : ballYState >> 1;
  1316     072F  0322               	decf	_ballDirY,w
  1317     0730  0423               	iorwf	_ballDirY+1,w
  1318     0731  1903               	btfsc	3,2
  1319     0732  2F34               	goto	u451
  1320     0733  2F35               	goto	u450
  1321     0734                     u451:
  1322     0734  2F40               	goto	l1055
  1323     0735                     u450:
  1324     0735                     l1053:
  1325     0735  087C               	movf	_ballYState,w
  1326     0736  00F7               	movwf	??_updateBallPosition
  1327     0737  1003               	clrc
  1328     0738  0C77               	rrf	??_updateBallPosition,w
  1329     0739  00F8               	movwf	??_updateBallPosition+1
  1330     073A  01F9               	clrf	??_updateBallPosition+2
  1331     073B  0878               	movf	??_updateBallPosition+1,w
  1332     073C  00FA               	movwf	_updateBallPosition$71
  1333     073D  0879               	movf	??_updateBallPosition+2,w
  1334     073E  00FB               	movwf	_updateBallPosition$71+1
  1335     073F  2F48               	goto	l89
  1336     0740                     l1055:
  1337     0740  087C               	movf	_ballYState,w
  1338     0741  00F7               	movwf	??_updateBallPosition
  1339     0742  01F8               	clrf	??_updateBallPosition+1
  1340     0743  1003               	clrc
  1341     0744  0D77               	rlf	??_updateBallPosition,w
  1342     0745  00FA               	movwf	_updateBallPosition$71
  1343     0746  0D78               	rlf	??_updateBallPosition+1,w
  1344     0747  00FB               	movwf	_updateBallPosition$71+1
  1345     0748                     l89:
  1346     0748  087A               	movf	_updateBallPosition$71,w
  1347     0749  00FC               	movwf	_ballYState
  1348     074A                     l1057:
  1349                           
  1350                           ;main.c: 130:     MAX7219_write(ballX, ballYState);
  1351     074A  087C               	movf	_ballYState,w
  1352     074B  00F5               	movwf	MAX7219_write@data
  1353     074C  0820               	movf	_ballX,w
  1354     074D  120A  118A  25F6  120A  118A  	fcall	_MAX7219_write
  1355     0752                     l90:
  1356     0752  0008               	return
  1357     0753                     __end_of_updateBallPosition:
  1358                           
  1359                           	psect	text5
  1360     05B2                     __ptext5:	
  1361 ;; *************** function _readButton3State *****************
  1362 ;; Defined at:
  1363 ;;		line 63 in file "main.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;		None
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;		None
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1    wreg      _Bool 
  1370 ;; Registers used:
  1371 ;;		wreg
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1377 ;;      Params:         0       0       0       0       0
  1378 ;;      Locals:         0       0       0       0       0
  1379 ;;      Temps:          0       0       0       0       0
  1380 ;;      Totals:         0       0       0       0       0
  1381 ;;Total ram usage:        0 bytes
  1382 ;; Hardware stack levels used: 1
  1383 ;; This function calls:
  1384 ;;		Nothing
  1385 ;; This function is called by:
  1386 ;;		_main
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390     05B2                     _readButton3State:	
  1391                           ;psect for function _readButton3State
  1392                           
  1393     05B2                     l991:	
  1394                           ;incstack = 0
  1395                           ; Regs used in _readButton3State: [wreg]
  1396                           
  1397                           
  1398                           ;main.c: 64:     if (RB3 == 0) {
  1399     05B2  1283               	bcf	3,5	;RP0=0, select bank0
  1400     05B3  1303               	bcf	3,6	;RP1=0, select bank0
  1401     05B4  1986               	btfsc	6,3	;volatile
  1402     05B5  2DB7               	goto	u371
  1403     05B6  2DB8               	goto	u370
  1404     05B7                     u371:
  1405     05B7  2DBA               	goto	l997
  1406     05B8                     u370:
  1407     05B8                     l993:
  1408                           
  1409                           ;main.c: 65:         return 1;
  1410     05B8  3001               	movlw	1
  1411     05B9  2DBB               	goto	l54
  1412     05BA                     l997:
  1413                           
  1414                           ;main.c: 67:     return 0;
  1415     05BA  3000               	movlw	0
  1416     05BB                     l54:
  1417     05BB  0008               	return
  1418     05BC                     __end_of_readButton3State:
  1419                           
  1420                           	psect	text6
  1421     05A8                     __ptext6:	
  1422 ;; *************** function _readButton2State *****************
  1423 ;; Defined at:
  1424 ;;		line 56 in file "main.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;		None
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;		None
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      _Bool 
  1431 ;; Registers used:
  1432 ;;		wreg
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1438 ;;      Params:         0       0       0       0       0
  1439 ;;      Locals:         0       0       0       0       0
  1440 ;;      Temps:          0       0       0       0       0
  1441 ;;      Totals:         0       0       0       0       0
  1442 ;;Total ram usage:        0 bytes
  1443 ;; Hardware stack levels used: 1
  1444 ;; This function calls:
  1445 ;;		Nothing
  1446 ;; This function is called by:
  1447 ;;		_main
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451     05A8                     _readButton2State:	
  1452                           ;psect for function _readButton2State
  1453                           
  1454     05A8                     l981:	
  1455                           ;incstack = 0
  1456                           ; Regs used in _readButton2State: [wreg]
  1457                           
  1458                           
  1459                           ;main.c: 57:     if (RB2 == 0) {
  1460     05A8  1283               	bcf	3,5	;RP0=0, select bank0
  1461     05A9  1303               	bcf	3,6	;RP1=0, select bank0
  1462     05AA  1906               	btfsc	6,2	;volatile
  1463     05AB  2DAD               	goto	u361
  1464     05AC  2DAE               	goto	u360
  1465     05AD                     u361:
  1466     05AD  2DB0               	goto	l987
  1467     05AE                     u360:
  1468     05AE                     l983:
  1469                           
  1470                           ;main.c: 58:         return 1;
  1471     05AE  3001               	movlw	1
  1472     05AF  2DB1               	goto	l50
  1473     05B0                     l987:
  1474                           
  1475                           ;main.c: 60:     return 0;
  1476     05B0  3000               	movlw	0
  1477     05B1                     l50:
  1478     05B1  0008               	return
  1479     05B2                     __end_of_readButton2State:
  1480                           
  1481                           	psect	text7
  1482     059E                     __ptext7:	
  1483 ;; *************** function _readButton1State *****************
  1484 ;; Defined at:
  1485 ;;		line 49 in file "main.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;		None
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;		None
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  1    wreg      _Bool 
  1492 ;; Registers used:
  1493 ;;		wreg
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1499 ;;      Params:         0       0       0       0       0
  1500 ;;      Locals:         0       0       0       0       0
  1501 ;;      Temps:          0       0       0       0       0
  1502 ;;      Totals:         0       0       0       0       0
  1503 ;;Total ram usage:        0 bytes
  1504 ;; Hardware stack levels used: 1
  1505 ;; This function calls:
  1506 ;;		Nothing
  1507 ;; This function is called by:
  1508 ;;		_main
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512     059E                     _readButton1State:	
  1513                           ;psect for function _readButton1State
  1514                           
  1515     059E                     l971:	
  1516                           ;incstack = 0
  1517                           ; Regs used in _readButton1State: [wreg]
  1518                           
  1519                           
  1520                           ;main.c: 50:     if (RB1 == 0) {
  1521     059E  1283               	bcf	3,5	;RP0=0, select bank0
  1522     059F  1303               	bcf	3,6	;RP1=0, select bank0
  1523     05A0  1886               	btfsc	6,1	;volatile
  1524     05A1  2DA3               	goto	u351
  1525     05A2  2DA4               	goto	u350
  1526     05A3                     u351:
  1527     05A3  2DA6               	goto	l977
  1528     05A4                     u350:
  1529     05A4                     l973:
  1530                           
  1531                           ;main.c: 51:         return 1;
  1532     05A4  3001               	movlw	1
  1533     05A5  2DA7               	goto	l46
  1534     05A6                     l977:
  1535                           
  1536                           ;main.c: 53:     return 0;
  1537     05A6  3000               	movlw	0
  1538     05A7                     l46:
  1539     05A7  0008               	return
  1540     05A8                     __end_of_readButton1State:
  1541                           
  1542                           	psect	text8
  1543     0594                     __ptext8:	
  1544 ;; *************** function _readButton0State *****************
  1545 ;; Defined at:
  1546 ;;		line 42 in file "main.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;		None
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;		None
  1551 ;; Return value:  Size  Location     Type
  1552 ;;                  1    wreg      _Bool 
  1553 ;; Registers used:
  1554 ;;		wreg
  1555 ;; Tracked objects:
  1556 ;;		On entry : 0/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1560 ;;      Params:         0       0       0       0       0
  1561 ;;      Locals:         0       0       0       0       0
  1562 ;;      Temps:          0       0       0       0       0
  1563 ;;      Totals:         0       0       0       0       0
  1564 ;;Total ram usage:        0 bytes
  1565 ;; Hardware stack levels used: 1
  1566 ;; This function calls:
  1567 ;;		Nothing
  1568 ;; This function is called by:
  1569 ;;		_main
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573     0594                     _readButton0State:	
  1574                           ;psect for function _readButton0State
  1575                           
  1576     0594                     l961:	
  1577                           ;incstack = 0
  1578                           ; Regs used in _readButton0State: [wreg]
  1579                           
  1580                           
  1581                           ;main.c: 43:     if (RB0 == 0) {
  1582     0594  1283               	bcf	3,5	;RP0=0, select bank0
  1583     0595  1303               	bcf	3,6	;RP1=0, select bank0
  1584     0596  1806               	btfsc	6,0	;volatile
  1585     0597  2D99               	goto	u341
  1586     0598  2D9A               	goto	u340
  1587     0599                     u341:
  1588     0599  2D9C               	goto	l967
  1589     059A                     u340:
  1590     059A                     l963:
  1591                           
  1592                           ;main.c: 44:         return 1;
  1593     059A  3001               	movlw	1
  1594     059B  2D9D               	goto	l42
  1595     059C                     l967:
  1596                           
  1597                           ;main.c: 46:     return 0;
  1598     059C  3000               	movlw	0
  1599     059D                     l42:
  1600     059D  0008               	return
  1601     059E                     __end_of_readButton0State:
  1602                           
  1603                           	psect	text9
  1604     05BC                     __ptext9:	
  1605 ;; *************** function _initPorts *****************
  1606 ;; Defined at:
  1607 ;;		line 70 in file "main.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;		None
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;		None
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  1    wreg      void 
  1614 ;; Registers used:
  1615 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1621 ;;      Params:         0       0       0       0       0
  1622 ;;      Locals:         0       0       0       0       0
  1623 ;;      Temps:          0       0       0       0       0
  1624 ;;      Totals:         0       0       0       0       0
  1625 ;;Total ram usage:        0 bytes
  1626 ;; Hardware stack levels used: 1
  1627 ;; Hardware stack levels required when called: 4
  1628 ;; This function calls:
  1629 ;;		_MAX7219_init
  1630 ;; This function is called by:
  1631 ;;		_main
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635     05BC                     _initPorts:	
  1636                           ;psect for function _initPorts
  1637                           
  1638     05BC                     l1001:	
  1639                           ;incstack = 0
  1640                           ; Regs used in _initPorts: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1641                           
  1642                           
  1643                           ;main.c: 71:     TRISB = 0x0F;
  1644     05BC  300F               	movlw	15
  1645     05BD  1683               	bsf	3,5	;RP0=1, select bank1
  1646     05BE  1303               	bcf	3,6	;RP1=0, select bank1
  1647     05BF  0086               	movwf	6	;volatile
  1648     05C0                     l1003:
  1649                           
  1650                           ;main.c: 72:     TRISC = 0x00;
  1651     05C0  0187               	clrf	7	;volatile
  1652     05C1                     l1005:
  1653                           
  1654                           ;main.c: 73:     MAX7219_init(1);
  1655     05C1  3001               	movlw	1
  1656     05C2  120A  118A  260A  120A  118A  	fcall	_MAX7219_init
  1657     05C7                     l57:
  1658     05C7  0008               	return
  1659     05C8                     __end_of_initPorts:
  1660                           
  1661                           	psect	text10
  1662     060A                     __ptext10:	
  1663 ;; *************** function _MAX7219_init *****************
  1664 ;; Defined at:
  1665 ;;		line 11 in file "MAX7219.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;  noChips         1    wreg     unsigned char 
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;  noChips         1    7[COMMON] unsigned char 
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      void 
  1672 ;; Registers used:
  1673 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1679 ;;      Params:         0       0       0       0       0
  1680 ;;      Locals:         1       0       0       0       0
  1681 ;;      Temps:          0       0       0       0       0
  1682 ;;      Totals:         1       0       0       0       0
  1683 ;;Total ram usage:        1 bytes
  1684 ;; Hardware stack levels used: 1
  1685 ;; Hardware stack levels required when called: 3
  1686 ;; This function calls:
  1687 ;;		_MAX7219_config
  1688 ;;		_SPI_init
  1689 ;; This function is called by:
  1690 ;;		_initPorts
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694     060A                     _MAX7219_init:	
  1695                           ;psect for function _MAX7219_init
  1696                           
  1697                           
  1698                           ;incstack = 0
  1699                           ; Regs used in _MAX7219_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1700                           ;MAX7219_init@noChips stored from wreg
  1701     060A  00F7               	movwf	MAX7219_init@noChips
  1702     060B                     l935:
  1703                           
  1704                           ;MAX7219.c: 11: void MAX7219_init(char noChips);MAX7219.c: 12: {;MAX7219.c: 13:   SPI_in
      +                          it();
  1705     060B  120A  118A  258C  120A  118A  	fcall	_SPI_init
  1706                           
  1707                           ;MAX7219.c: 14:   while(noChips)
  1708     0610  2E19               	goto	l939
  1709     0611                     l937:
  1710                           
  1711                           ;MAX7219.c: 15:         MAX7219_config(--noChips);
  1712     0611  3001               	movlw	1
  1713     0612  02F7               	subwf	MAX7219_init@noChips,f
  1714     0613  0877               	movf	MAX7219_init@noChips,w
  1715     0614  120A  118A  2644  120A  118A  	fcall	_MAX7219_config
  1716     0619                     l939:
  1717                           
  1718                           ;MAX7219.c: 14:   while(noChips)
  1719     0619  0877               	movf	MAX7219_init@noChips,w
  1720     061A  1D03               	btfss	3,2
  1721     061B  2E1D               	goto	u311
  1722     061C  2E1E               	goto	u310
  1723     061D                     u311:
  1724     061D  2E11               	goto	l937
  1725     061E                     u310:
  1726     061E                     l149:
  1727     061E  0008               	return
  1728     061F                     __end_of_MAX7219_init:
  1729                           
  1730                           	psect	text11
  1731     058C                     __ptext11:	
  1732 ;; *************** function _SPI_init *****************
  1733 ;; Defined at:
  1734 ;;		line 12 in file "Soft_SPI.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;		None
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;		None
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  1    wreg      void 
  1741 ;; Registers used:
  1742 ;;		None
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1748 ;;      Params:         0       0       0       0       0
  1749 ;;      Locals:         0       0       0       0       0
  1750 ;;      Temps:          0       0       0       0       0
  1751 ;;      Totals:         0       0       0       0       0
  1752 ;;Total ram usage:        0 bytes
  1753 ;; Hardware stack levels used: 1
  1754 ;; This function calls:
  1755 ;;		Nothing
  1756 ;; This function is called by:
  1757 ;;		_MAX7219_init
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761     058C                     _SPI_init:	
  1762                           ;psect for function _SPI_init
  1763                           
  1764     058C                     l931:	
  1765                           ;incstack = 0
  1766                           ; Regs used in _SPI_init: []
  1767                           
  1768                           
  1769                           ;Soft_SPI.c: 14:   TRISC2 = 0;
  1770     058C  1683               	bsf	3,5	;RP0=1, select bank1
  1771     058D  1303               	bcf	3,6	;RP1=0, select bank1
  1772     058E  1107               	bcf	7,2	;volatile
  1773                           
  1774                           ;Soft_SPI.c: 15:   TRISC0 = 0;
  1775     058F  1007               	bcf	7,0	;volatile
  1776                           
  1777                           ;Soft_SPI.c: 16:   TRISC4 = 1;
  1778     0590  1607               	bsf	7,4	;volatile
  1779                           
  1780                           ;Soft_SPI.c: 17:   TRISC1 = 0;
  1781     0591  1087               	bcf	7,1	;volatile
  1782                           
  1783                           ;Soft_SPI.c: 18:   TRISC3 = 0;
  1784     0592  1187               	bcf	7,3	;volatile
  1785     0593                     l123:
  1786     0593  0008               	return
  1787     0594                     __end_of_SPI_init:
  1788                           
  1789                           	psect	text12
  1790     0644                     __ptext12:	
  1791 ;; *************** function _MAX7219_config *****************
  1792 ;; Defined at:
  1793 ;;		line 18 in file "MAX7219.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;  chip            1    wreg     unsigned char 
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;  chip            1    0[COMMON] unsigned char 
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  1    wreg      void 
  1800 ;; Registers used:
  1801 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1807 ;;      Params:         0       0       0       0       0
  1808 ;;      Locals:         0       0       0       0       0
  1809 ;;      Temps:          0       0       0       0       0
  1810 ;;      Totals:         0       0       0       0       0
  1811 ;;Total ram usage:        0 bytes
  1812 ;; Hardware stack levels used: 1
  1813 ;; Hardware stack levels required when called: 2
  1814 ;; This function calls:
  1815 ;;		_MAX7219_write
  1816 ;; This function is called by:
  1817 ;;		_MAX7219_init
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821     0644                     _MAX7219_config:	
  1822                           ;psect for function _MAX7219_config
  1823                           
  1824     0644                     l933:	
  1825                           ;incstack = 0
  1826                           ; Regs used in _MAX7219_config: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1827                           
  1828                           
  1829                           ;MAX7219.c: 18: void MAX7219_config(char chip);MAX7219.c: 19: {;MAX7219.c: 20:   MAX7219
      +                          _write(0x09,0x00);
  1830     0644  01F5               	clrf	MAX7219_write@data
  1831     0645  3009               	movlw	9
  1832     0646  120A  118A  25F6  120A  118A  	fcall	_MAX7219_write
  1833                           
  1834                           ;MAX7219.c: 21:   MAX7219_write(0x0A,0x05);
  1835     064B  3005               	movlw	5
  1836     064C  00F5               	movwf	MAX7219_write@data
  1837     064D  300A               	movlw	10
  1838     064E  120A  118A  25F6  120A  118A  	fcall	_MAX7219_write
  1839                           
  1840                           ;MAX7219.c: 22:   MAX7219_write(0x0B,0x07);
  1841     0653  3007               	movlw	7
  1842     0654  00F5               	movwf	MAX7219_write@data
  1843     0655  300B               	movlw	11
  1844     0656  120A  118A  25F6  120A  118A  	fcall	_MAX7219_write
  1845                           
  1846                           ;MAX7219.c: 23:   MAX7219_write(0x0C,0x01);
  1847     065B  01F5               	clrf	MAX7219_write@data
  1848     065C  0AF5               	incf	MAX7219_write@data,f
  1849     065D  300C               	movlw	12
  1850     065E  120A  118A  25F6  120A  118A  	fcall	_MAX7219_write
  1851                           
  1852                           ;MAX7219.c: 24:   MAX7219_write(0x0F,0x00);
  1853     0663  01F5               	clrf	MAX7219_write@data
  1854     0664  300F               	movlw	15
  1855     0665  120A  118A  25F6  120A  118A  	fcall	_MAX7219_write
  1856     066A                     l152:
  1857     066A  0008               	return
  1858     066B                     __end_of_MAX7219_config:
  1859                           
  1860                           	psect	text13
  1861     061F                     __ptext13:	
  1862 ;; *************** function _initGame *****************
  1863 ;; Defined at:
  1864 ;;		line 76 in file "main.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;		None
  1867 ;; Auto vars:     Size  Location     Type
  1868 ;;		None
  1869 ;; Return value:  Size  Location     Type
  1870 ;;                  1    wreg      void 
  1871 ;; Registers used:
  1872 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1873 ;; Tracked objects:
  1874 ;;		On entry : 0/0
  1875 ;;		On exit  : 0/0
  1876 ;;		Unchanged: 0/0
  1877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1878 ;;      Params:         0       0       0       0       0
  1879 ;;      Locals:         0       0       0       0       0
  1880 ;;      Temps:          0       0       0       0       0
  1881 ;;      Totals:         0       0       0       0       0
  1882 ;;Total ram usage:        0 bytes
  1883 ;; Hardware stack levels used: 1
  1884 ;; Hardware stack levels required when called: 2
  1885 ;; This function calls:
  1886 ;;		_MAX7219_write
  1887 ;; This function is called by:
  1888 ;;		_main
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892     061F                     _initGame:	
  1893                           ;psect for function _initGame
  1894                           
  1895     061F                     l1007:	
  1896                           ;incstack = 0
  1897                           ; Regs used in _initGame: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1898                           
  1899                           
  1900                           ;main.c: 77:     ballX = 4;
  1901     061F  3004               	movlw	4
  1902     0620  1283               	bcf	3,5	;RP0=0, select bank0
  1903     0621  1303               	bcf	3,6	;RP1=0, select bank0
  1904     0622  00A0               	movwf	_ballX
  1905     0623  3000               	movlw	0
  1906     0624  00A1               	movwf	_ballX+1
  1907                           
  1908                           ;main.c: 78:     ballYState = 0b00001000;
  1909     0625  3008               	movlw	8
  1910     0626  00FC               	movwf	_ballYState
  1911     0627                     l1009:
  1912                           
  1913                           ;main.c: 79:     MAX7219_write(8, p1State);
  1914     0627  087D               	movf	_p1State,w
  1915     0628  00F5               	movwf	MAX7219_write@data
  1916     0629  3008               	movlw	8
  1917     062A  120A  118A  25F6  120A  118A  	fcall	_MAX7219_write
  1918     062F                     l1011:
  1919                           
  1920                           ;main.c: 80:     MAX7219_write(1, p2State);
  1921     062F  1283               	bcf	3,5	;RP0=0, select bank0
  1922     0630  1303               	bcf	3,6	;RP1=0, select bank0
  1923     0631  0826               	movf	_p2State,w
  1924     0632  00F5               	movwf	MAX7219_write@data
  1925     0633  3001               	movlw	1
  1926     0634  120A  118A  25F6  120A  118A  	fcall	_MAX7219_write
  1927     0639                     l1013:
  1928                           
  1929                           ;main.c: 81:     MAX7219_write(ballX, ballYState);
  1930     0639  087C               	movf	_ballYState,w
  1931     063A  00F5               	movwf	MAX7219_write@data
  1932     063B  1283               	bcf	3,5	;RP0=0, select bank0
  1933     063C  1303               	bcf	3,6	;RP1=0, select bank0
  1934     063D  0820               	movf	_ballX,w
  1935     063E  120A  118A  25F6  120A  118A  	fcall	_MAX7219_write
  1936     0643                     l60:
  1937     0643  0008               	return
  1938     0644                     __end_of_initGame:
  1939                           
  1940                           	psect	text14
  1941     05F6                     __ptext14:	
  1942 ;; *************** function _MAX7219_write *****************
  1943 ;; Defined at:
  1944 ;;		line 27 in file "MAX7219.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  regName         1    wreg     unsigned char 
  1947 ;;  data            1    5[COMMON] unsigned char 
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;  regName         1    6[COMMON] unsigned char 
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  1    wreg      void 
  1952 ;; Registers used:
  1953 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1959 ;;      Params:         1       0       0       0       0
  1960 ;;      Locals:         1       0       0       0       0
  1961 ;;      Temps:          0       0       0       0       0
  1962 ;;      Totals:         2       0       0       0       0
  1963 ;;Total ram usage:        2 bytes
  1964 ;; Hardware stack levels used: 1
  1965 ;; Hardware stack levels required when called: 1
  1966 ;; This function calls:
  1967 ;;		_SPI_write
  1968 ;; This function is called by:
  1969 ;;		_initGame
  1970 ;;		_updatePlayerPosition
  1971 ;;		_updateBallPosition
  1972 ;;		_MAX7219_config
  1973 ;;		_MAX7219_displayText
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977     05F6                     _MAX7219_write:	
  1978                           ;psect for function _MAX7219_write
  1979                           
  1980                           
  1981                           ;incstack = 0
  1982                           ; Regs used in _MAX7219_write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1983                           ;MAX7219_write@regName stored from wreg
  1984     05F6  00F6               	movwf	MAX7219_write@regName
  1985     05F7                     l925:
  1986                           
  1987                           ;MAX7219.c: 27: void MAX7219_write(char regName,char data);MAX7219.c: 28: {;MAX7219.c: 2
      +                          9:   RC1 = 0;
  1988     05F7  1283               	bcf	3,5	;RP0=0, select bank0
  1989     05F8  1303               	bcf	3,6	;RP1=0, select bank0
  1990     05F9  1087               	bcf	7,1	;volatile
  1991     05FA                     l927:
  1992                           
  1993                           ;MAX7219.c: 31:   SPI_write(regName);
  1994     05FA  0876               	movf	MAX7219_write@regName,w
  1995     05FB  120A  118A  266B  120A  118A  	fcall	_SPI_write
  1996                           
  1997                           ;MAX7219.c: 32:   SPI_write(data);
  1998     0600  0875               	movf	MAX7219_write@data,w
  1999     0601  120A  118A  266B  120A  118A  	fcall	_SPI_write
  2000     0606                     l929:
  2001                           
  2002                           ;MAX7219.c: 34:   RC1 = 1;
  2003     0606  1283               	bcf	3,5	;RP0=0, select bank0
  2004     0607  1303               	bcf	3,6	;RP1=0, select bank0
  2005     0608  1487               	bsf	7,1	;volatile
  2006     0609                     l155:
  2007     0609  0008               	return
  2008     060A                     __end_of_MAX7219_write:
  2009                           
  2010                           	psect	text15
  2011     066B                     __ptext15:	
  2012 ;; *************** function _SPI_write *****************
  2013 ;; Defined at:
  2014 ;;		line 21 in file "Soft_SPI.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;  send            1    wreg     unsigned char 
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;  send            1    2[COMMON] unsigned char 
  2019 ;;  Tx              2    3[COMMON] int 
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  1    wreg      void 
  2022 ;; Registers used:
  2023 ;;		wreg, status,2, status,0, btemp+1
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2029 ;;      Params:         0       0       0       0       0
  2030 ;;      Locals:         3       0       0       0       0
  2031 ;;      Temps:          2       0       0       0       0
  2032 ;;      Totals:         5       0       0       0       0
  2033 ;;Total ram usage:        5 bytes
  2034 ;; Hardware stack levels used: 1
  2035 ;; This function calls:
  2036 ;;		Nothing
  2037 ;; This function is called by:
  2038 ;;		_MAX7219_write
  2039 ;;		_MAX7219_NoOperation
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043     066B                     _SPI_write:	
  2044                           ;psect for function _SPI_write
  2045                           
  2046                           
  2047                           ;incstack = 0
  2048                           ; Regs used in _SPI_write: [wreg+status,2+status,0+btemp+1]
  2049                           ;SPI_write@send stored from wreg
  2050     066B  00F2               	movwf	SPI_write@send
  2051     066C                     l911:
  2052                           
  2053                           ;Soft_SPI.c: 21: void SPI_write(char send);Soft_SPI.c: 22: {;Soft_SPI.c: 23:   for(int T
      +                          x = 0 ; Tx < 8 ; Tx++ )
  2054     066C  01F3               	clrf	SPI_write@Tx
  2055     066D  01F4               	clrf	SPI_write@Tx+1
  2056     066E                     l126:
  2057                           
  2058                           ;Soft_SPI.c: 24:   {;Soft_SPI.c: 25:     RC2 = 0;
  2059     066E  1283               	bcf	3,5	;RP0=0, select bank0
  2060     066F  1303               	bcf	3,6	;RP1=0, select bank0
  2061     0670  1107               	bcf	7,2	;volatile
  2062     0671                     l917:
  2063                           
  2064                           ;Soft_SPI.c: 26:     RC0 = ( (send << Tx) & 0x80 ) ? 1 : 0;
  2065     0671  0A73               	incf	SPI_write@Tx,w
  2066     0672  00FF               	movwf	btemp+1
  2067     0673  0872               	movf	SPI_write@send,w
  2068     0674  00F0               	movwf	??_SPI_write
  2069     0675  01F1               	clrf	??_SPI_write+1
  2070     0676  2E7A               	goto	u274
  2071     0677                     u275:
  2072     0677  1003               	clrc
  2073     0678  0DF0               	rlf	??_SPI_write,f
  2074     0679  0DF1               	rlf	??_SPI_write+1,f
  2075     067A                     u274:
  2076     067A  0BFF               	decfsz	btemp+1,f
  2077     067B  2E77               	goto	u275
  2078     067C  1BF0               	btfsc	??_SPI_write,7
  2079     067D  2E7F               	goto	u281
  2080     067E  2E83               	goto	u280
  2081     067F                     u281:
  2082     067F  1283               	bcf	3,5	;RP0=0, select bank0
  2083     0680  1303               	bcf	3,6	;RP1=0, select bank0
  2084     0681  1407               	bsf	7,0	;volatile
  2085     0682  2E86               	goto	u294
  2086     0683                     u280:
  2087     0683  1283               	bcf	3,5	;RP0=0, select bank0
  2088     0684  1303               	bcf	3,6	;RP1=0, select bank0
  2089     0685  1007               	bcf	7,0	;volatile
  2090     0686                     u294:
  2091     0686                     l919:
  2092                           
  2093                           ;Soft_SPI.c: 27:     RC2 = 1;
  2094     0686  1507               	bsf	7,2	;volatile
  2095     0687                     l921:
  2096                           
  2097                           ;Soft_SPI.c: 28:   }
  2098     0687  3001               	movlw	1
  2099     0688  07F3               	addwf	SPI_write@Tx,f
  2100     0689  1803               	skipnc
  2101     068A  0AF4               	incf	SPI_write@Tx+1,f
  2102     068B  3000               	movlw	0
  2103     068C  07F4               	addwf	SPI_write@Tx+1,f
  2104     068D                     l923:
  2105     068D  0874               	movf	SPI_write@Tx+1,w
  2106     068E  3A80               	xorlw	128
  2107     068F  00FF               	movwf	btemp+1
  2108     0690  3080               	movlw	128
  2109     0691  027F               	subwf	btemp+1,w
  2110     0692  1D03               	skipz
  2111     0693  2E96               	goto	u305
  2112     0694  3008               	movlw	8
  2113     0695  0273               	subwf	SPI_write@Tx,w
  2114     0696                     u305:
  2115     0696  1C03               	skipc
  2116     0697  2E99               	goto	u301
  2117     0698  2E9A               	goto	u300
  2118     0699                     u301:
  2119     0699  2E6E               	goto	l126
  2120     069A                     u300:
  2121     069A                     l128:
  2122     069A  0008               	return
  2123     069B                     __end_of_SPI_write:
  2124     007E                     btemp	set	126	;btemp
  2125     007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      7      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_updateBallPosition
    _updatePlayerPosition->_MAX7219_write
    _updateBallPosition->_MAX7219_write
    _initPorts->_MAX7219_init
    _MAX7219_config->_MAX7219_write
    _initGame->_MAX7219_write
    _MAX7219_write->_SPI_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     3      4    5666
                                              0 BANK0      7     3      4
                           _initGame
                          _initPorts
                   _readButton0State
                   _readButton1State
                   _readButton2State
                   _readButton3State
                 _updateBallPosition
               _updatePlayerPosition
 ---------------------------------------------------------------------------------
 (1) _updatePlayerPosition                                 4     0      4    2004
                                              7 COMMON     4     0      4
                      _MAX7219_write
                       _buttonGoDown
                         _buttonGoUp
 ---------------------------------------------------------------------------------
 (2) _buttonGoUp                                           2     2      0      66
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _buttonGoDown                                         2     2      0      66
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _updateBallPosition                                   5     5      0    1222
                                              7 COMMON     5     5      0
                      _MAX7219_write
 ---------------------------------------------------------------------------------
 (1) _readButton3State                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readButton2State                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readButton1State                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readButton0State                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initPorts                                            0     0      0    1242
                       _MAX7219_init
 ---------------------------------------------------------------------------------
 (2) _MAX7219_init                                         1     1      0    1242
                                              7 COMMON     1     1      0
                     _MAX7219_config
                           _SPI_init
 ---------------------------------------------------------------------------------
 (3) _SPI_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MAX7219_config                                       1     1      0    1198
                      _MAX7219_write
 ---------------------------------------------------------------------------------
 (1) _initGame                                             0     0      0    1198
                      _MAX7219_write
 ---------------------------------------------------------------------------------
 (2) _MAX7219_write                                        2     1      1    1198
                                              5 COMMON     2     1      1
                          _SPI_write
 ---------------------------------------------------------------------------------
 (3) _SPI_write                                            5     5      0      90
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initGame
     _MAX7219_write
       _SPI_write
   _initPorts
     _MAX7219_init
       _MAX7219_config
         _MAX7219_write
       _SPI_init
   _readButton0State
   _readButton1State
   _readButton2State
   _readButton3State
   _updateBallPosition
     _MAX7219_write
   _updatePlayerPosition
     _MAX7219_write
     _buttonGoDown
     _buttonGoUp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      7      12       5       22.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      20      12        0.0%
ABS                  0      0      20       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu May 16 10:06:52 2024

                            pc 0002                             l42 059D                             l50 05B1  
                           l60 0643                             l46 05A7                             l54 05BB  
                           l64 05D4                             l57 05C7                             l90 0752  
                           l68 05E2                             l77 06F4                             l89 0748  
                           fsr 0004                            l100 07D5                            l123 0593  
                          l126 066E                            l128 069A                            l152 066A  
                          l155 0609                            l149 061E                            l911 066C  
                          l921 0687                            l923 068D                            l931 058C  
                          l917 0671                            l925 05F7                            l933 0644  
                          l941 05C9                            l919 0686                            l927 05FA  
                          l935 060B                            l951 05D6                            l943 05CF  
                          l929 0606                            l937 0611                            l961 0594  
                          l953 05DC                            l939 0619                            l963 059A  
                          l971 059E                            l947 05D1                            l973 05A4  
                          l981 05A8                            l957 05DE                            l967 059C  
                          l983 05AE                            l991 05B2                            l977 05A6  
                          l993 05B8                            l987 05B0                            l997 05BA  
                          _RB0 0030                            _RB1 0031                            _RB2 0032  
                          _RC0 0038                            _RB3 0033                            _RC1 0039  
                          _RC2 003A                            _RC4 003C                            u300 069A  
                          u301 0699                            u310 061E                            u311 061D  
                          u320 05CF                            u400 06CD                            u305 0696  
                          u321 05CE                            u401 06CC                            u410 0704  
                          u330 05DC                            u411 0703                            u331 05DB  
                          u340 059A                            u420 0713                            u341 0599  
                          u421 0712                            u350 05A4                            u430 0726  
                          u351 05A3                            u431 0725                            u415 0700  
                          u280 0683                            u360 05AE                            u440 072A  
                          u281 067F                            u361 05AD                            u441 0729  
                          u425 070F                            u274 067A                            u370 05B8  
                          u450 0735                            u275 0677                            u371 05B7  
                          u451 0734                            u380 06A1                            u460 0790  
                          u381 06A0                            u461 078F                            u517 0765  
                          u294 0686                            u390 06A7                            u470 07A3  
                          u391 06A6                            u471 07A2                            u480 07B6  
                          u481 07B5                            u490 07C9                            u491 07C8  
                          indf 0000                           l1001 05BC                           l1011 062F  
                         l1003 05C0                           l1013 0639                           l1005 05C1  
                         l1021 06AE                           l1007 061F                           l1031 06D8  
                         l1023 06B7                           l1015 069B                           l1009 0627  
                         l1041 0713                           l1033 06E1                           l1025 06BE  
                         l1017 06A1                           l1051 072F                           l1043 071A  
                         l1035 06EC                           l1019 06A7                           l1027 06C7  
                         l1053 0735                           l1045 0722                           l1037 06F5  
                         l1029 06CD                           l1061 075D                           l1055 0740  
                         l1047 0726                           l1039 0704                           l1071 078B  
                         l1063 076B                           l1057 074A                           l1049 072A  
                         l1081 07B6                           l1073 0790                           l1065 0773  
                         l1083 07C4                           l1075 079E                           l1067 077B  
                         l1059 0753                           l1085 07C9                           l1077 07A3  
                         l1069 0783                           l1079 07AF           MAX7219_write@regName 0076  
             _readButton0State 0594               _readButton1State 059E               _readButton2State 05A8  
             _readButton3State 05B2                           _main 0753                           btemp 007E  
                         start 0000                          ?_main 0027   __end_of_updatePlayerPosition 06F5  
                        _TRISB 0086                          _TRISC 0087  updatePlayerPosition@direction 0079  
                        _ballX 0020                          pclath 000A               __end_of_SPI_init 0594  
                        status 0003                          wtemp0 007E           __end_of_MAX7219_init 061F  
              __initialization 07DE                   __end_of_main 07DE                         ??_main 002B  
           _updateBallPosition 06F5                  ?_buttonGoDown 0070            ?_updateBallPosition 0070  
                       _TRISC0 0438                         _TRISC1 0439                         _TRISC2 043A  
                       _TRISC3 043B                         _TRISC4 043C               __end_of_initGame 0644  
         ??_updateBallPosition 0077         buttonGoUp@currentState 0071                   __pdataCOMMON 007C  
            __end_of_SPI_write 069B                 ??_buttonGoDown 0070          __end_of_MAX7219_write 060A  
      __end_of__initialization 07FC           _updatePlayerPosition 069B                 __pcstackCOMMON 0070  
                 __pidataBANK0 0585       __end_of_readButton0State 059E       __end_of_readButton1State 05A8  
     __end_of_readButton2State 05B2       __end_of_readButton3State 05BC                      ?_SPI_init 0070  
                   _ballYState 007C          _updateBallPosition$71 007A                     __pbssBANK0 002E  
        ?_updatePlayerPosition 0077                     __pmaintext 0753                     ??_SPI_init 0070  
                 _MAX7219_init 060A       buttonGoDown@currentState 0071              MAX7219_write@data 0075  
                    ?_initGame 0070                        _p1State 007D                        _p2State 0026  
           MAX7219_config@chip 0070           __end_of_buttonGoDown 05E3                     _buttonGoUp 05C8  
                      __ptext1 069B                        __ptext2 05C8                        __ptext3 05D5  
                      __ptext4 06F5                        __ptext5 05B2                        __ptext6 05A8  
                      __ptext7 059E                        __ptext8 0594                        __ptext9 05BC  
            __end_of_initPorts 05C8                 _MAX7219_config 0644           end_of_initialization 07FC  
                   ??_initGame 0077         ??_updatePlayerPosition 007B         __end_of_MAX7219_config 066B  
                    _SPI_write 066B                    ?_buttonGoUp 0070                  __pidataCOMMON 0583  
            ?_readButton0State 0070              ?_readButton1State 0070              ?_readButton2State 0070  
            ?_readButton3State 0070                 _button0pressed 0031                ?_MAX7219_config 0070  
               _button1pressed 0030                 _button2pressed 002F             ??_readButton0State 0070  
           ??_readButton1State 0070             ??_readButton2State 0070                 _button3pressed 002E  
           ??_readButton3State 0070            start_initialization 07DE                     ?_SPI_write 0070  
                   init_fetch0 05E3                    __pdataBANK0 0020                      ___latbits 0002  
                __pcstackBANK0 0027                   _buttonGoDown 05D5                    SPI_write@Tx 0073  
                SPI_write@send 0072                      _initPorts 05BC                    ??_SPI_write 0070  
                _MAX7219_write 05F6                       _SPI_init 058C                     ?_initPorts 0070  
               ?_MAX7219_write 0075     updatePlayerPosition@player 0077               ??_MAX7219_config 0077  
                 ??_buttonGoUp 0070                       _ballDirX 0024                       _ballDirY 0022  
                     __ptext10 060A                       __ptext11 058C                       __ptext12 0644  
                     __ptext13 061F                       __ptext14 05F6                       __ptext15 066B  
                     _initGame 061F             __end_of_buttonGoUp 05D5     __end_of_updateBallPosition 0753  
                     main@argc 0027                       main@argv 0029                  ?_MAX7219_init 0070  
                     init_ram0 05E7                    ??_initPorts 0078                ??_MAX7219_write 0076  
          MAX7219_init@noChips 0077                 ??_MAX7219_init 0077  
